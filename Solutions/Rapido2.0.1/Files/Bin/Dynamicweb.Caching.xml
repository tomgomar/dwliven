<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dynamicweb.Caching</name>
    </assembly>
    <members>
        <member name="T:Dynamicweb.Caching.Cache">
            <summary>
            Cache class.
            Handles access to the current <see cref="T:Dynamicweb.Caching.ICacheManager">cache manager</see>.
            </summary>
        </member>
        <member name="P:Dynamicweb.Caching.Cache.Current">
            <summary>
            Gets or sets the current <see cref="T:Dynamicweb.Caching.ICacheManager">cache manager</see>.
            If a cache manager has not been defined or if the current cache manager is set to <c>null</c>,
            a new instance of <see cref="T:Dynamicweb.Caching.MemoryCacheManager"/> is returned.
            </summary>
            <value>The current cache manager.</value>
        </member>
        <member name="T:Dynamicweb.Caching.CacheItemPolicy">
            <summary>
            The <see cref="T:Dynamicweb.Caching.CacheItemPolicy"/> class contains configuration elements for determining how cache entries are managed.
            </summary>
        </member>
        <member name="F:Dynamicweb.Caching.CacheItemPolicy.InfiniteAbsoluteExpiration">
            <summary>
            Value indicating that the cache entry has not expiration date.
            </summary>
        </member>
        <member name="F:Dynamicweb.Caching.CacheItemPolicy.NoSlidingExpiration">
            <summary>
            Value indicating the the cache entry has no sliding expiration.
            </summary>
        </member>
        <member name="F:Dynamicweb.Caching.CacheItemPolicy.DefaultStoragePolicy">
            <summary>
            Value indicating the default storage policy for caching.
            This value is uses the same configuration as the removed StorageManager.
            </summary>
        </member>
        <member name="P:Dynamicweb.Caching.CacheItemPolicy.FileDependencies">
            <summary>
            Gets or sets a list of directory paths or file paths to monitor. Changes detected in these paths causes the cache entry for this <see cref="T:Dynamicweb.Caching.CacheItemPolicy"/> to be expired.
            </summary>
        </member>
        <member name="P:Dynamicweb.Caching.CacheItemPolicy.CacheKeyDependencies">
            <summary>
            Gets or sets a list of cache keys to monitor. Changes in cache entries with these keys causes the cache entry for this <see cref="T:Dynamicweb.Caching.CacheItemPolicy"/> to be expired. 
            </summary>
        </member>
        <member name="P:Dynamicweb.Caching.CacheItemPolicy.AbsoluteExpiration">
            <summary>
            Gets or sets a date time value indicating when the cache entry for this <see cref="T:Dynamicweb.Caching.CacheItemPolicy"/> expires.
            Default value is <see cref="F:Dynamicweb.Caching.CacheItemPolicy.InfiniteAbsoluteExpiration"/>.
            </summary>
        </member>
        <member name="P:Dynamicweb.Caching.CacheItemPolicy.SlidingExpiration">
            <summary>
            Gets or sets a time span indicating how long a cache entry takes to go stale. This value represents the time between hits.
            Default value is <see cref="F:Dynamicweb.Caching.CacheItemPolicy.NoSlidingExpiration"/>.
            </summary>
        </member>
        <member name="P:Dynamicweb.Caching.CacheItemPolicy.RemovedCallback">
            <summary>
            Gets or sets the removed callback.
            </summary>
            <value>The removed callback.</value>
        </member>
        <member name="T:Dynamicweb.Caching.CacheItemPolicy.CacheItemRemovedCallback">
            <summary>
            Delegate CacheItemRemovedCallback. This delegate is used to handle scenarios where cache items are removed from the cache.
            </summary>
            <param name="cacheKey">The cache key that was removed.</param>
            <param name="value">The value that was removed.</param>
            <param name="removedReason">The removed reason why the cache item was removed.</param>
        </member>
        <member name="T:Dynamicweb.Caching.CacheItemRemovedReason">
            <summary>
            CacheItemRemovedReason enum. Specifies the reason why a cache item was removed from the cache.
            </summary>
        </member>
        <member name="F:Dynamicweb.Caching.CacheItemRemovedReason.CacheSpecificEviction">
            <summary>
            The cache item was evicted because of the specific cache implementation.
            </summary>
        </member>
        <member name="F:Dynamicweb.Caching.CacheItemRemovedReason.DependencyChanged">
            <summary>
            The cache item was evicted because one or more of its dependencies changed.
            </summary>
        </member>
        <member name="F:Dynamicweb.Caching.CacheItemRemovedReason.Evicted">
            <summary>
            The cache item was evicted to free memory in the cache.
            </summary>
        </member>
        <member name="F:Dynamicweb.Caching.CacheItemRemovedReason.Expired">
            <summary>
            The cache item expired.
            </summary>
        </member>
        <member name="F:Dynamicweb.Caching.CacheItemRemovedReason.Removed">
            <summary>
            The cache item was manually removed or updated.
            </summary>
        </member>
        <member name="F:Dynamicweb.Caching.Notifications.CacheNotification.CacheKeyRemoved">
            <summary>
            Notification after key has been removed from cache.
            </summary>
        </member>
        <member name="F:Dynamicweb.Caching.Notifications.CacheNotification.CacheKeySet">
            <summary>
            Notification after key has been set with a value, that is saved in cache.
            </summary>
        </member>
        <member name="F:Dynamicweb.Caching.Notifications.CacheNotification.ForceCleared">
            <summary>
            Notification after key has been set with a value, that is saved in cache.
            </summary>
        </member>
        <member name="T:Dynamicweb.Caching.Notifications.CacheNotification.CacheNotificationArgs">
            <summary>Provides information about cache operations.</summary>
        </member>
        <member name="P:Dynamicweb.Caching.Notifications.CacheNotification.CacheNotificationArgs.Key">
            <summary>
            Gets the key belonging to the cacheoperation.
            </summary>
            <remarks></remarks>
        </member>
        <member name="P:Dynamicweb.Caching.Notifications.CacheNotification.CacheNotificationArgs.OldValue">
            <summary>
            Old value before the operation.
            </summary>
            <remarks></remarks>
        </member>
        <member name="M:Dynamicweb.Caching.Notifications.CacheNotification.CacheNotificationArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="key">key of cache.</param>
        </member>
        <member name="M:Dynamicweb.Caching.Notifications.CacheNotification.CacheNotificationArgs.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="key">key of cache.</param>
            <param name="oldValue">Value from cache before operation.</param>
        </member>
        <member name="T:Dynamicweb.Caching.Extensions">
            <summary>
            Extensions class.
            </summary>
        </member>
        <member name="M:Dynamicweb.Caching.Extensions.Map(System.Runtime.Caching.CacheEntryRemovedReason)">
            <summary>
            Maps the specified removed reason.
            </summary>
            <param name="removedReason">The removed reason.</param>
            <returns>CacheItemRemovedReason.</returns>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Dynamicweb.Caching.FileChangeMonitor">
            <summary>
            FileChangeMonitor class used by the cache manager to invalidate cache when files are changed.
            </summary>
            <seealso cref="T:System.Runtime.Caching.ChangeMonitor" />
        </member>
        <member name="M:Dynamicweb.Caching.FileChangeMonitor.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Caching.FileChangeMonitor"/> class.
            </summary>
            <param name="paths">The paths to dependencies. Can be both paths to directories and to files.</param>
        </member>
        <member name="P:Dynamicweb.Caching.FileChangeMonitor.UniqueId">
            <summary>
            Gets a value that represents the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> class instance.
            </summary>
            <value>The unique identifier.</value>
        </member>
        <member name="M:Dynamicweb.Caching.FileChangeMonitor.InitializeMonitor(System.String)">
            <summary>
            Initializes the monitor.
            </summary>
            <param name="path">The path.</param>
            <Remarks>Disposed where it is used</Remarks>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Caching.FileChangeMonitor.Dispose(System.Boolean)">
            <summary>
            Releases all managed and unmanaged resources and any references to the <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance. This overload must be implemented by derived change-monitor classes.
            </summary>
            <param name="disposing">true to release managed and unmanaged resources and any references to a <see cref="T:System.Runtime.Caching.ChangeMonitor" /> instance; false to release only unmanaged resources. When false is passed, the <see cref="M:System.Runtime.Caching.ChangeMonitor.Dispose(System.Boolean)" /> method is called by a finalizer thread and any external managed references are likely no longer valid because they have already been garbage collected.</param>
        </member>
        <member name="T:Dynamicweb.Caching.ICacheManager">
            <summary>
            ICacheManager interface.
            Defines the contract for a cache manager.
            </summary>
            <code title="Implement the ICacheManager interface" source="..\Dynamicweb\09 - Core\Dynamicweb.Caching\head\Dynamicweb.Caching\MemoryCacheManager.cs" lang="CS"></code>
        </member>
        <member name="P:Dynamicweb.Caching.ICacheManager.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key in the cache.
            </summary>
            <param name="key">The key.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="P:Dynamicweb.Caching.ICacheManager.IsValid">
            <summary>
            Returns true if the cache manager is valid.
            </summary>
            <value><c>true</c> if cache manager is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dynamicweb.Caching.ICacheManager.AllKeys">
            <summary>
            Gets all keys currently in the cache.
            </summary>
            <value>All keys.</value>
        </member>
        <member name="M:Dynamicweb.Caching.ICacheManager.Add``1(System.String,``0)">
            <summary>
            Adds the given cache item into the cache using the specified key.
            </summary>
            <typeparam name="T">The type of the object to add.</typeparam>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
            <returns><c>true</c> if the Add-operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Dynamicweb.Caching.ICacheManager.Add``1(System.String,``0,Dynamicweb.Caching.CacheItemPolicy)">
            <summary>
            Adds the given cache item into the cache using the specified key.
            </summary>
            <typeparam name="T">The type of the object to add.</typeparam>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
            <param name="policy">The policy specifying cache behavior.</param>
            <returns><c>true</c> if the Add-operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Dynamicweb.Caching.ICacheManager.AddOrUpdate``1(System.String,``0)">
            <summary>
            Adds or updates the cache entry for the specified key with the given cache item.
            </summary>
            <typeparam name="T">The type of the object to add.</typeparam>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
        </member>
        <member name="M:Dynamicweb.Caching.ICacheManager.AddOrUpdate``1(System.String,``0,Dynamicweb.Caching.CacheItemPolicy)">
            <summary>
            Adds or updates the cache entry for the specified key with the given cache item.
            </summary>
            <typeparam name="T">The type of the object to add.</typeparam>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
            <param name="policy">The policy specifying cache behavior.</param>
        </member>
        <member name="M:Dynamicweb.Caching.ICacheManager.Set(System.String,System.Object)">
            <summary>
            Adds or updates the cache entry for the specified key with the given cache item.
            </summary>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
        </member>
        <member name="M:Dynamicweb.Caching.ICacheManager.Set(System.String,System.Object,Dynamicweb.Caching.CacheItemPolicy)">
            <summary>
            Sets the cache entry for the specified key with the given cache item.
            </summary>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
            <param name="policy">The policy specifying cache behavior.</param>
        </member>
        <member name="M:Dynamicweb.Caching.ICacheManager.Get(System.String)">
            <summary>
            Gets the cache entry for the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>System.Object.</returns>
        </member>
        <member name="M:Dynamicweb.Caching.ICacheManager.Get``1(System.String)">
            <summary>
            Gets the cache entry for the specified key.
            </summary>
            <typeparam name="T">The type of the cache entry object.</typeparam>
            <param name="key">The key.</param>
            <returns>T.</returns>
        </member>
        <member name="M:Dynamicweb.Caching.ICacheManager.TryGet``1(System.String,``0@)">
            <summary>
            Tries the get the cache entry for the specified key.
            </summary>
            <typeparam name="T">The type of the cache entry object.</typeparam>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if the Get-operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Dynamicweb.Caching.ICacheManager.Remove(System.String)">
            <summary>
            Removes the cache entry for the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Dynamicweb.Caching.ICacheManager.Contains(System.String)">
            <summary>
            Determines whether the cache contains an entry with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns><c>true</c> if a cache entry for the specified key exists; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Dynamicweb.Caching.MemoryCacheManager">
            <summary>
            MemoryCacheManager class.
            <remarks>Threadsafe</remarks>
            </summary>
            <seealso cref="T:Dynamicweb.Caching.ICacheManager" />
        </member>
        <member name="P:Dynamicweb.Caching.MemoryCacheManager.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>Cache entry for the specified key if it exists; <c>null</c> otherwise.</returns>
        </member>
        <member name="P:Dynamicweb.Caching.MemoryCacheManager.IsValid">
            <summary>
            Returns true if the cache manager is valid.
            </summary>
            <value><c>true</c> if cache manager is valid; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Dynamicweb.Caching.MemoryCacheManager.AllKeys">
            <summary>
            Gets all keys currently in the cache.
            </summary>
            <value>All keys.</value>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.ConvertCachePolicy(Dynamicweb.Caching.CacheItemPolicy)">
            <summary>
            Converts the cache policy from a Dynamicweb implementation to the underlying implementation used in the MemoryCache.
            </summary>
            <param name="policy">The policy.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.Set(System.String,System.Object)">
            <summary>
            Adds or updates the cache entry for the specified key with the given cache item.
            </summary>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.Set(System.String,System.Object,Dynamicweb.Caching.CacheItemPolicy)">
            <summary>
            Sets the cache entry for the specified key with the given cache item.
            </summary>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
            <param name="policy">The policy specifying cache behavior.</param>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.Contains(System.String)">
            <summary>
            Determines whether the cache contains an entry with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns><c>true</c> if a cache entry for the specified key exists; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.Get(System.String)">
            <summary>
            Gets the cache entry for the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>Cache entry for the specified key if it exists; <c>null</c> otherwise.</returns>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.Get``1(System.String)">
            <summary>
            Gets the cache entry for the specified key.
            </summary>
            <typeparam name="T">The type of the cache entry object.</typeparam>
            <param name="key">The key.</param>
            <returns>Cache entry for the specified key if it exists; <c>null</c> otherwise.</returns>
            <exception cref="T:System.InvalidOperationException">If cache entry is not of type <typeparamref name="T"/> and not <c>null</c>.</exception>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.TryGet``1(System.String,``0@)">
            <summary>
            Tries the get the cache entry for the specified key.
            </summary>
            <typeparam name="T">The type of the cache entry object.</typeparam>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns><c>true</c> if the Get-operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.Remove(System.String)">
            <summary>
            Removes the cache entry for the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.ForceClear">
            <summary>
            Forcefully removes all keys from the cache.
            </summary>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.Add``1(System.String,``0)">
            <summary>
            Adds the given cache item into the cache using the specified key.
            </summary>
            <typeparam name="T">The type of the object to add.</typeparam>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
            <returns><c>true</c> if the Add-operation succeeded, <c>false</c> otherwise.</returns>   
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.Add``1(System.String,``0,Dynamicweb.Caching.CacheItemPolicy)">
            <summary>
            Adds the given cache item into the cache using the specified key.
            </summary>
            <typeparam name="T">The type of the object to add.</typeparam>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
            <param name="policy">The policy specifying cache behavior.</param>
            <returns><c>true</c> if the Add-operation succeeded, <c>false</c> otherwise.</returns>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.AddOrUpdate``1(System.String,``0)">
            <summary>
            Adds or updates the cache entry for the specified key with the given cache item.
            </summary>
            <typeparam name="T">The type of the object to add.</typeparam>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
        </member>
        <member name="M:Dynamicweb.Caching.MemoryCacheManager.AddOrUpdate``1(System.String,``0,Dynamicweb.Caching.CacheItemPolicy)">
            <summary>
            Adds or updates the cache entry for the specified key with the given cache item.
            </summary>
            <typeparam name="T">The type of the object to add.</typeparam>
            <param name="key">The key.</param>
            <param name="cacheItem">The cache item.</param>
            <param name="policy">The policy specifying cache behavior.</param>
        </member>
        <member name="T:Dynamicweb.Caching.NamespaceDoc">
            <summary>
            The Dynamicweb.Caching namespace contains caching abstraction and defealt memory implementation of the cachhing system used in Dynamicweb.
            </summary>
        </member>
    </members>
</doc>
