<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dynamicweb.Indexing.Lucene</name>
    </assembly>
    <members>
        <member name="T:Dynamicweb.Indexing.Lucene.Analyzers.DynamicwebMetadataKeywordAnalyzer">
            <summary>
            The analyzer will split terms on comma, semicolon and pipe.
            The analyzer can be used together with the IPTC and XMP keywords fields in the FileIndexBuilder. 
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Lucene.FacetedSearch">
            <summary>
            FacetedSearch class
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.FacetedSearch.#ctor(Lucene.Net.Index.IndexReader,Lucene.Net.Search.Query)">
            <summary>
            Creates an instance of the <see cref="T:Dynamicweb.Indexing.Lucene.FacetedSearch"/>.
            </summary>
            <param name="reader">The Lucene IndexReader used to perform the search.</param>
            <param name="query">The Lucene Query to find facets in the context of.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.FacetedSearch.GetFacets(System.String)">
            <summary>
            Gets all facet values for the given field.
            </summary>
            <param name="field">The field to find facets for.</param>
            <returns>A <see cref="!:IDictionary&lt;string, long&gt;"/> where the dictionary key is the facet value and the dictionary value is the facet count.</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Lucene.Helpers">
            <summary>
            Provides methods for working with Lucene search engine
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.Helpers.GetAnalyzer(System.Collections.Generic.IEnumerable{Dynamicweb.Indexing.Schemas.FieldDefinitionBase},System.Collections.Generic.IEnumerable{Dynamicweb.Indexing.Schemas.FieldTypeDefinition},System.String)">
            <summary>
            Provides analyzer instance according to ProviderType and Fields parameters
            </summary>
            <param name="fields">Enumeration of fields</param>
            <param name="fieldTypes">Enumeration of type fields</param>
            <param name="providerTypeName">Name of PRoviderType</param>
            <returns>Analyzer object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.Helpers.ParseQueryExpression(Dynamicweb.Indexing.IIndex,Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.QuerySettings)">
            <summary>
            Parses query expression
            </summary>
            <param name="index">Search index</param>
            <param name="expression">Search query expression</param>
            <param name="settings">Settings</param>
            <returns>Query object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.Helpers.GetValueFromExpression(Dynamicweb.Indexing.Querying.Expressions.Expression,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Gets expression parameter value
            </summary>
            <param name="exp">Expression instance</param>
            <param name="parameters">Expression parameters</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.Helpers.GetTermQuery(Dynamicweb.Indexing.Schemas.FieldDefinitionBase,Lucene.Net.Analysis.Analyzer,System.Object,Lucene.Net.Search.Occur)">
            <summary>
            Gets TermQuery defined by parameters
            </summary>
            <param name="field">Term field</param>
            <param name="analyzer">Text analyzer</param>
            <param name="value">Value</param>
            <param name="termOccurrence">Occurence type</param>
            <returns>Query instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.Helpers.GetNumericQuery(System.String,System.Object,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Creates numericQuery object instance
            </summary>
            <param name="field"></param>
            <param name="minValue">Minimal value</param>
            <param name="maxValue">Maximum value</param>
            <param name="includeMin">Shows if minimal value should be included in values interval</param>
            <param name="includeMax">Shows if maximal value should be included in values interval</param>
            <returns>Query object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.Helpers.GetNumericField(System.String,System.Object,Lucene.Net.Documents.Field.Store,Lucene.Net.Documents.Field.Index)">
            <summary>
            Provides instance of NumericField object
            </summary>
            <param name="key">Key</param>
            <param name="value">Value</param>
            <param name="store">Field store type</param>
            <param name="index">Index type</param>
            <returns>Instance of NumericField</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.Helpers.GetTerms(Dynamicweb.Indexing.Schemas.FieldDefinitionBase,Lucene.Net.Analysis.Analyzer,System.Object)">
            <summary>
            Gets list of terms
            </summary>
            <param name="field">Field </param>
            <param name="analyzer">Analyzer used for getting tocken stream</param>
            <param name="searchTerm">Search term</param>
            <returns>List of strings</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.Helpers.ParseFieldValue(System.String,System.Type)">
            <summary>
            Parses field value and casts to provided type
            </summary>
            <param name="value">Value to be parsed from string</param>
            <param name="fieldType">Type of target field</param>
            <returns>Null if parse or conversion failed, otherwise returns object of specified type</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.Helpers.IsFieldNumericOrDate(Dynamicweb.Indexing.Schemas.FieldDefinitionBase)">
            <summary>
            Finds out if field is an instance of Numeric or DateTime type
            </summary>
            <param name="field">Field object instance</param>
            <returns>True if field object instance is instance of numeric or datetime type</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.Helpers.ThrowTypeNotSupported(Dynamicweb.Indexing.Querying.Expressions.OperatorType,System.Type,System.Type)">
            <summary>
            Throws NotSupportedException for specific operator type, source and target types
            </summary>
            <param name="operatorType">Type of operation</param>
            <param name="supportedType">Supported type</param>
            <param name="currentType">Current type</param>
        </member>
        <member name="T:Dynamicweb.Indexing.Lucene.LuceneIndexProvider">
            <summary>
            Represents Lucene Index Provider
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Lucene.LuceneIndexProvider.IsAvailable">
            <summary>
            Represents index provider availability
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Lucene.LuceneIndexProvider.SupportedAnalyzers">
            <summary>
            Provdes list of supported analysers
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexProvider.CreateWriter">
            <summary>
            Creates new instance of LuceneIndexWriter
            </summary>
            <returns>New LuceneIndexWriter object</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexProvider.#ctor">
            <summary>
            Constructs new LuceneIndexProvider object instance
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexProvider.Query(Dynamicweb.Indexing.Querying.IQuery,Dynamicweb.Indexing.Querying.QuerySettings)">
            <summary>
            Performs query to search index data
            </summary>
            <param name="query"></param>
            <param name="settings">QuerySettings object defining search parameters</param>
            <returns>Object that implements IQueryResult interface</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Lucene.LuceneIndexReader">
            <summary>
            Represents Lucene index reader
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexReader.GetFieldTermsAndCount(System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Returns a number of terms from the specified index and field with the number of occurrences
            </summary>
            <param name="repository">The repository name</param>
            <param name="indexName">The index name</param>
            <param name="fieldname">The SystemName of the field</param>
            <param name="fieldType">The type of the field (e.g. System.Double)</param>
            <param name="resultLimit">The maximum number of terms returned</param>
            <returns>A list of the fields terms with occurrences</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexReader.ReadIndex(System.String,System.String,System.Func{Lucene.Net.Index.TermEnum,Lucene.Net.Index.Term,System.Boolean},System.Int32)">
            <summary>
            Iterates through the specified index and call the readAction for each term
            </summary>
            <param name="repository">The repository name</param>
            <param name="indexName">The index name</param>
            <param name="readAction">The operation which is ran for each term in the index</param>
            <param name="resultLimit">The maximum number of terms returned</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexReader.GetFieldsTermsCount(System.String,System.String)">
            <summary>
            Returns all terms count for the specific index field
            </summary>
            <param name="repository">The repository name</param>
            <param name="indexName">The index name</param>
            <returns>A <see cref="!:IDictionary&lt;string, int&gt;"/> where the dictionary key is the field name and the dictionary value is the terms count.</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexReader.ConvertNumericTerm``1(System.String,System.String)">
            <summary>
            Convert a numeric term from the index to its respective type
            </summary>
            <typeparam name="T"></typeparam>
            <param name="termValue">The string representation of the term</param>
            <param name="type">The type of term - (e.g. System.Double)</param>
            <returns>The termValue parsed to the type given</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Lucene.LuceneIndexWriter">
            <summary>
            Creates and maintains an index.
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexWriter.#ctor(Dynamicweb.Indexing.IIndex,Dynamicweb.Indexing.IIndexProvider)">
            <summary>
            Constructs new IndexWriter instance
            </summary>
            <param name="index">Search index</param>
            <param name="instance">Index provider</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexWriter.Open(System.Boolean)">
            <summary>
            Lock file for the directory in use
            </summary>
            <param name="openForAppend">Shows if it needs to create new instance or open existing one</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexWriter.Close">
            <summary>
            Commits all changes to an index, waits for pending merges to complete, and closes all associated files.
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexWriter.AddOrUpdateDocument(Dynamicweb.Indexing.IndexDocument,System.String,System.String)">
            <summary>
            Defines Add or update document method contract
            </summary>
            <param name="document">Index document instance</param>
            <param name="keyFieldName">Key field name</param>
            <param name="keyFieldValue">Key field value</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Lucene.LuceneIndexWriter.AddDocument(Dynamicweb.Indexing.IndexDocument)">
            <summary>
            Adds document to index
            </summary>
            <param name="document">Docuemnt instance</param>
        </member>
        <member name="T:Dynamicweb.Indexing.Lucene.LuceneQueryResult">
            <summary>
            A class containing the result of an executed Lucene query
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Lucene.LuceneQueryResult.QueryResult">
            <summary>
            Set of query results
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Lucene.LuceneQueryResult.FacetGroupResult">
            <summary>
            Set of faceted query results
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Lucene.LuceneQueryResult.Count">
            <summary>
            Items count
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Lucene.LuceneQueryResult.TotalCount">
            <summary>
            Total number of hits for the query
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Lucene.LuceneQueryResult.DebugInfo">
            <summary>
            Gets or sets the debugging information related to the execution of the query that produced this <see cref="T:Dynamicweb.Indexing.Querying.IQueryResult">result</see>
            </summary>
        </member>
    </members>
</doc>
