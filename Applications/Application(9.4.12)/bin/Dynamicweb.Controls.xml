<?xml version="1.0"?>
<doc>
<assembly>
<name>
Dynamicweb.Controls
</name>
</assembly>
<members>
<member name="T:Dynamicweb.Controls.AjaxControl">
 <summary>
 Represents a control that can be loaded via AJAX (the entire control as well as control data).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControl.SystemRequestFields">
 <summary>
 Gets the list of system field names when performing AJAX requests to the web-server.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControl.IsProcessingEvents">
 <summary>
 Gets value indicating whether control is currently processing events.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControl.IsPostBack">
 <summary>
 Gets value indicating whether HTTP form is being posted to the server.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControl.ResourcesEmbedded">
 <summary>
 Gets or sets value indicating whether control resources has been embedded into the current HTTP response.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControl.EventTarget">
 <summary>
 Gets the current event target.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControl.EventArgument">
 <summary>
 Gets the current event argument.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControl.IsTextualResponse">
 <summary>
 Gets or sets value indicating whether to dispatch a textual response rather than JavaScript object.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControl.Ticket">
 <summary>
 Gets the data callback ticket.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControl.ClientScriptRendered">
 <summary>
 Gets value indicating whether client script has been rendered.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControl.EnableLegacyRendering">
 <summary>
 Gets or sets value indicating whether to enable legacy rendering.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.Control_Load(System.Object,System.EventArgs)">
 <summary>
 Handles control's "Load" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.Control_PreRender(System.Object,System.EventArgs)">
 <summary>
 Handles control's "PreRender" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControl.ClientScriptBlock">
 <summary>
 If server page header or clientscript not available (like in Module Paragraph settings). You could add JS of the AjaxControl in your page manually.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.ContainsCodeBlocks(System.Web.UI.Control)">
 <summary>
 Determines whether the given control contains code blocks.
 </summary>
 <param name="control">Control to examine.</param>
 <returns>Value whether the given control contains code blocks.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.GetDataLoadScript(System.String)">
 <summary>
 Returns a script that registers a new sends a "Data load" request to the server.
 </summary>
 <param name="callback">Name of the callback function to be executed upon the completion of the request.</param>
 <returns>A script that registers a new sends a "Data load" request to the server.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="callback">callback</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="callback">callback</paramref> is empty string or represents a function call.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.GetDataLoadScript(System.String,System.Boolean)">
 <summary>
 Returns a script that registers a new sends a "Data load" request to the server.
 </summary>
 <param name="callback">Name of the callback function to be executed upon the completion of the request.</param>
 <param name="addScriptTags">Value indicating whether to add script tags.</param>
 <returns>A script that registers a new sends a "Data load" request to the server.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="callback">callback</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="callback">callback</paramref> is empty string or represents a function call.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.GetDataLoadScript(System.String,System.String)">
 <summary>
 Returns a script that registers a new sends a "Data load" request to the server.
 </summary>
 <param name="callback">Name of the callback function to be executed upon the completion of the request.</param>
 <param name="argument">Request argument.</param>
 <returns>A script that registers a new sends a "Data load" request to the server.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="callback">callback</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="callback">callback</paramref> is empty string or represents a function call.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.GetDataLoadScript(System.String,System.String,System.Boolean)">
 <summary>
 Returns a script that registers a new sends a "Data load" request to the server.
 </summary>
 <param name="callback">Name of the callback function to be executed upon the completion of the request.</param>
 <param name="argument">Request argument.</param>
 <param name="addScriptTags">Value indicating whether to add script tags.</param>
 <returns>A script that registers a new sends a "Data load" request to the server.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="callback">callback</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="callback">callback</paramref> is empty string or represents a function call.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.WriteResponse(System.IO.TextWriter,System.String)">
 <summary>
 Writes a response to the given output stream. The response MIME type must be "application/javascript".
 </summary>
 <param name="output">Output stream.</param>
 <param name="argument">Argument passed with the request.</param>
 <returns>Javascript variable name that holds the final result to be dispatched to the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.RenderClientObject(System.IO.TextWriter)">
 <summary>
 Renders client-side object.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.OnLoad(System.EventArgs)">
 <summary>
 Performs "Load" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.RenderControl(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.Render(System.Web.UI.HtmlTextWriter,System.Boolean)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <param name="renderPostedField">Indicates whether to render the "Posted" hidden field that is used on a postbacks to track control data.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.LoadResources">
 <summary>
 Loads control resource.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.RaisePostBackEvent(System.String)">
 <summary>
 Processes server events.
 </summary>
 <param name="eventArgument">Event argument.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.GetResponse(System.String,System.String)">
 <summary>
 Causes the control to load its data and returns the JavaScript code block that contains control data.
 </summary>
 <param name="eventArgument">Event argument.</param>
 <param name="callbackName">Name of the callback that receives the data.</param>
 <returns>Control data.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Processes postback data for an ASP.NET server control.
 </summary>
 <param name="postDataKey">The key identifier for the control.</param>
 <param name="postCollection">The collection of all incoming name values.</param>
 <returns>true if the server control's state changes as a result of the postback; otherwise, false.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControl.RaisePostDataChangedEvent">
 <summary>
 Signals the server control to notify the ASP.NET application that the state of the control has changed.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.AjaxControlManager">
 <summary>
 Represents an AJAX control manager. This class cannot be inherited.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.AjaxControlManager.AsyncControlList">
 <summary>
 Represents a list of controls that should be rendered "on demand" (asynchronously).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControlManager.AsyncControlList.List">
 <summary>
 Gets the list of awaiting control mapped to the corresponding tickets.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControlManager.AsyncControlList.Current">
 <summary>
 Gets the reference to the current list for a given session.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.AsyncControlList.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.AsyncControlList.Add(System.Web.UI.Control)">
 <summary>
 Adds new control.
 </summary>
 <param name="ctrl">Control to add.</param>
 <returns>Control ticket.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.AsyncControlList.Remove(System.Int64)">
 <summary>
 Removes the given control.
 </summary>
 <param name="ticket">Control ticket.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.AsyncControlList.Clear">
 <summary>
 Removes all controls.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.AsyncControlList.Render(System.Int64)">
 <summary>
 Renders web-control specified by the given ticket.
 </summary>
 <param name="ticket">Request ticket.</param>
 <returns>Complete control output.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.AsyncControlList.Render(System.Int64,System.Web.UI.Control)">
 <summary>
 Renders web-control specified by the given ticket.
 </summary>
 <param name="ticket">Request ticket.</param>
 <param name="hostingControl">Hosting control.</param>
 <returns>Complete control output.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.AsyncControlList.Render(System.Web.UI.Control)">
 <summary>
 Renders given web-control.
 </summary>
 <param name="ctrl">Control to render.</param>
 <returns>Complete control output.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.AsyncControlList.Render(System.Web.UI.Control,System.Web.UI.Control)">
 <summary>
 Renders given web-control.
 </summary>
 <param name="ctrl">Control to render.</param>
 <param name="hostingControl">Hosting control.</param>
 <returns>Complete control output.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.AsyncControlList.RemoveOutdated">
 <summary>
 Removes outdated controls.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControlManager.Current">
 <summary>
 Gets the current instance of control manager.
 </summary>
 <exception cref="T:System.InvalidOperationException">There is no valid ASP.NET session to reuse for registering controls.</exception>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControlManager.Ticket">
 <summary>
 Gets the control ticket submitted with the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControlManager.RequiresControlRendering">
 <summary>
 Gets value indicating whether control ticket has been submitted with the current HTTP request and the request control must be sent back to the client.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxControlManager.IgnoreResources">
 <summary>
 Gets the list of resource aliases that must be ignored when control resources are being loaded.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderCurrentControl(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders the currently requested control by using the given text writer.
 </summary>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object that writes control output.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="writer">writer</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderCurrentControl(System.Web.UI.Control,System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders the currently requested control by using the given text writer.
 </summary>
 <param name="container">Control container.</param>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object that writes control output.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="writer">writer</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderCurrentControl">
 <summary>
 Renders the currently requested control and returns the complete control output.
 </summary>
 <returns>The complete control output.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderCurrentControl(System.Web.UI.Control)">
 <summary>
 Renders the currently requested control and returns the complete control output.
 </summary>
 <param name="container">Control container.</param>
 <returns>The complete control output.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderControl(System.String,System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders the given control by using the given text writer.
 </summary>
 <param name="ticket">Control ticket.</param>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object that writes control output.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="ticket">ticket</paramref> or <paramref name="writer">writer</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="ticket">ticket</paramref> is an empty string.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderControl(System.String,System.Web.UI.Control,System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders the given control by using the given text writer.
 </summary>
 <param name="ticket">Control ticket.</param>
 <param name="container">Control container.</param>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object that writes control output.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="ticket">ticket</paramref> or <paramref name="writer">writer</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="ticket">ticket</paramref> is an empty string.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderControl(System.Web.UI.Control,System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders the given control by using the given text writer.
 </summary>
 <param name="control">Control to render.</param>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object that writes control output.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="control">control</paramref> or <paramref name="writer">writer</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderControl(System.Web.UI.Control,System.Web.UI.Control,System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders the given control by using the given text writer.
 </summary>
 <param name="control">Control to render.</param>
 <param name="container">Control container.</param>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object that writes control output.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="control">control</paramref> or <paramref name="writer">writer</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderControl(System.String)">
 <summary>
 Renders the given control and returns the complete control output.
 </summary>
 <param name="ticket">Control ticket.</param>
 <returns>The complete control output.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="ticket">ticket</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="ticket">ticket</paramref> is an empty string.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderControl(System.String,System.Web.UI.Control)">
 <summary>
 Renders the given control and returns the complete control output.
 </summary>
 <param name="ticket">Control ticket.</param>
 <param name="container">Control container.</param>
 <returns>The complete control output.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="ticket">ticket</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="ticket">ticket</paramref> is an empty string.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderControl(System.Web.UI.Control)">
 <summary>
 Renders the given control and returns the complete control output.
 </summary>
 <param name="control">Control to render.</param>
 <returns>The complete control output.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="control">control</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RenderControl(System.Web.UI.Control,System.Web.UI.Control)">
 <summary>
 Renders the given control and returns the complete control output.
 </summary>
 <param name="control">Control to render.</param>
 <param name="container">Control container.</param>
 <returns>The complete control output.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="control">control</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.RegisterControl(System.Web.UI.Control)">
 <summary>
 Registers the given control to be rendered later asynchronously.
 </summary>
 <param name="control">Control to register.</param>
 <returns>A ticket that can be used for referencing the control.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="control">control</paramref> is null.</exception>
 <remarks>This operation requires a valid ASP.NET session.</remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.UnregisterControl(System.String)">
 <summary>
 Removes the given control from the asynchronous rendering queue.
 </summary>
 <param name="ticket">Control ticket.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="ticket">ticket</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="ticket">ticket</paramref> is an empty string.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.UnregisterAllControls">
 <summary>
 Removes all currently registered controls from the asynchronous rendering queue.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.AddResourceIgnores(Dynamicweb.Controls.ControlResources)">
 <summary>
 Adds ignore conditions according to the current list of ignored resources.
 </summary>
 <param name="resources">Control to append conditions to.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxControlManager.AddResourceIgnores(System.Collections.Generic.IEnumerable{System.String},Dynamicweb.Controls.ControlResources)">
 <summary>
 Adds ignore conditions according to the given list of resource aliases.
 </summary>
 <param name="resources">A list of resource aliases.</param>
 <param name="control">Control to append conditions to.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.AjaxRichControl">
 <summary>
 Represents a rich AJAX control.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.AjaxRichControl.AjaxRichControlClientDefinition">
 <summary>
 Represents a client-side definition of the rich AJAX control.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxRichControl.AjaxRichControlClientDefinition.TypeName">
 <summary>
 Gets the namespace-qualified name of the client-side type that corresponds to this control.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxRichControl.AjaxRichControlClientDefinition.Resources">
 <summary>
 Gets or sets the list of virtual paths to resources required by this control.
 </summary>
 <remarks>An example of control resources are JavaScript files and stylesheets.</remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxRichControl.AjaxRichControlClientDefinition.CodeBlocks">
 <summary>
 Gets or sets the list of JavaScript code blocks to embed into the page.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxRichControl.AjaxRichControlClientDefinition.StyleBlocks">
 <summary>
 Gets or sets the list of CSS rules to embed into the page.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxRichControl.AjaxRichControlClientDefinition.TextBlocks">
 <summary>
 Gets or sets the list of plain text blocks to embed into the page.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxRichControl.AjaxRichControlClientDefinition.#ctor(System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="typeName">The namespace-qualified name of the client-side type that corresponds to this control.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="typeName">typeName</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="typeName">typeName</paramref> is an empty string.</exception>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxRichControl.Enabled">
 <summary>
 Gets or sets value indicating whether control is enabled.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxRichControl.Tag">
 <summary>
 Gets or sets the custom information associated with the control.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxRichControl.CssClass">
 <summary>
 Gets or sets the additional CSS class name to apply to control container.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxRichControl.OnClientReady">
 <summary>
 Gets or sets the client-side script that is executed when the control is ready to accept user input.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxRichControl.ClientInstanceName">
 <summary>
 Gets the unique name of the client-side object instance variable.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.AjaxRichControl.Definition">
 <summary>
 Gets an object that is used to identify the control on the client.
 </summary>
 <remarks>This property calls <see cref="M:Dynamicweb.Controls.AjaxRichControl.GetClientDefinition">GetClientDefinition</see> in order to retrieve client-side definition object.</remarks>
 <exception cref="T:System.InvalidOperationException">The <see cref="M:Dynamicweb.Controls.AjaxRichControl.GetClientDefinition">GetClientDefinition</see> method returned an empty definition.</exception>
</member>
<member name="M:Dynamicweb.Controls.AjaxRichControl.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxRichControl.GetClientDefinition">
 <summary>
 Returns an object that is used to identify the control on the client.
 </summary>
 <returns>An object that is used to identify the control on the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxRichControl.RenderClientObjectProperties(System.IO.TextWriter)">
 <summary>
 Renders client-side object property initialization.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxRichControl.RenderControl(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxRichControl.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxRichControl.Render(System.Web.UI.HtmlTextWriter,System.Boolean)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <param name="renderPostedField">Indicates whether to render the "Posted" hidden field that is used on a postbacks to track control data.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxRichControl.LoadResources">
 <summary>
 Loads control resources.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.AjaxRichControl.RenderClientObject(System.IO.TextWriter)">
 <summary>
 Renders client-side object.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.ChartType">
 <summary>
 Represents chart type.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Custom">
 <summary>
 Custom chart type.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Table">
 <summary>
 Table.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.TreeMap">
 <summary>
 Tree map.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Sparkline">
 <summary>
 Sparkline.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Scatter">
 <summary>
 Scatter chart.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Pie">
 <summary>
 Pie chart.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Org">
 <summary>
 Org chart.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Motion">
 <summary>
 Motion chart.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Line">
 <summary>
 Line chart.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.IntensityMap">
 <summary>
 Intensity map.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.GeoMap">
 <summary>
 Geo map.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Gauge">
 <summary>
 Gauge.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Column">
 <summary>
 Column chart.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Bar">
 <summary>
 Bar chart.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.Area">
 <summary>
 Area chart.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Charts.ChartType.AnnotatedTimeLine">
 <summary>
 Annotated time line chart.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.Chart">
 <summary>
 Represents a chart control.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.Chart.OptionsGraphNode">
 <summary>
 Represents options graph node.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.OptionsGraphNode.Name">
 <summary>
 Gets or sets node name.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.OptionsGraphNode.Value">
 <summary>
 Gets or sets node value.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.OptionsGraphNode.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.Chart.OptionsGraph">
 <summary>
 Represents options graph.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.OptionsGraph.Root">
 <summary>
 Gets the root node.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.OptionsGraph.Relations">
 <summary>
 Gets the list of relations.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.OptionsGraph.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.OptionsGraph.Serialize(System.Func{System.String,System.String},System.Func{System.String,System.String})">
 <summary>
 Serializes graph into JSON string.
 </summary>
 <param name="renderKey">Function that is responsible for rendering keys.</param>
 <param name="renderValue">Function that is responsible for rendering values.</param>
 <returns>Graph output.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.OptionsGraph.CleanUp(System.Collections.Generic.IDictionary{System.String,System.String})">
 <summary>
 Removes all options associated with this graph from the given list.
 </summary>
 <param name="options">Options list to examine.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.OptionsGraph.SerializeChildren(Dynamicweb.Controls.Charts.Chart.OptionsGraphNode,System.Text.StringBuilder,System.Func{System.String,System.String},System.Func{System.String,System.String})">
 <summary>
 Serializes all child nodes of the given parent node.
 </summary>
 <param name="parent">Parent node.</param>
 <param name="output">An object that holds output.</param>
 <param name="renderKey">Function that is responsible for rendering keys.</param>
 <param name="renderValue">Function that is responsible for rendering values.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.OptionsGraph.ParseChildren(Dynamicweb.Controls.Charts.Chart.OptionsGraphNode,System.Collections.Generic.IDictionary{System.String,System.String})">
 <summary>
 Parses child nodes of the given parent node.
 </summary>
 <param name="parent">Parent node.</param>
 <param name="options">A complete list of options.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.OptionsGraph.ChildParsed(System.String)">
 <summary>
 Determines whether node with the given path has already been parsed.
 </summary>
 <param name="path">Node path.</param>
 <returns>Value indicating whether node with the given path has already been parsed.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.OptionsGraph.GetPath(Dynamicweb.Controls.Charts.Chart.OptionsGraphNode)">
 <summary>
 Returns the full path for a given node.
 </summary>
 <param name="node">Node to examine.</param>
 <returns>Full path of the node.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.OptionsGraph.ParseFirst(System.Collections.Generic.IDictionary{System.String,System.String})">
 <summary>
 Parse the first graph from the given list of options.
 </summary>
 <param name="options">List of options.</param>
 <returns>Options graph.</returns>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.Charts.Chart.Draw">
 <summary>
 Occurs when chart is about to be rendered.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.Data">
 <summary>
 Gets or sets the initial data to be displayed in the chart.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.OnClientReady">
 <summary>
 Gets or sets the client-side function that is executed when chart is ready.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.Width">
 <summary>
 Gets or sets chart width.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.Height">
 <summary>
 Gets or sets chart height.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.Title">
 <summary>
 Gets or sets chart title.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.AutoDraw">
 <summary>
 Gets or sets value indicating whether to automatically request chart data asynchronously if no data has been initially provided.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.Type">
 <summary>
 Gets or sets the chart type.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.IsCompatibleRendering">
 <summary>
 Gets or sets value indicating whether maximum device compatibility must be used when rendering a chart.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.ClientInstanceName">
 <summary>
 Gets the name of the Javascript variable that refers to a client-side Chart object instance.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.Options">
 <summary>
 Gets custom chart options.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.TypeManager">
 <summary>
 Gets the type manager for this chart.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.Chart.Engine">
 <summary>
 Gets or sets the target chart engine.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends chart content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives chart control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.OnDraw(Dynamicweb.Controls.Charts.ChartDrawEventArgs)">
 <summary>
 Raises "Draw" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.WriteResponse(System.IO.TextWriter,System.String)">
 <summary>
 Writes a response to the given output stream. The response MIME type must be "application/javascript".
 </summary>
 <param name="argument">Argument passed with the request.</param>
 <returns>Javascript variable name that holds the final result to be dispatched to the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.RenderClientObject(System.IO.TextWriter)">
 <summary>
 Renders client-side object.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.LoadResources">
 <summary>
 Loads chart resources.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.GetAttribute(System.String)">
 <summary>
 Retrieves specified attribute from the chart control.
 </summary>
 <param name="key">Attribute key.</param>
 <returns>Attribute property.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.SetAttribute(System.String,System.String)">
 <summary>
 Designates attribute and its value to assign to chart control.
 </summary>
 <param name="key">Attribute key.</param>
 <param name="value">Attribute value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.GetOption(System.String)">
 <summary>
 Gets the value of the given option.
 </summary>
 <param name="key">Option key.</param>
 <returns>The value of the given option.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.SetOption(System.String,System.String)">
 <summary>
 Sets the value of the given option.
 </summary>
 <param name="key">Option key.</param>
 <param name="value">Option value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.RemoveOption(System.String)">
 <summary>
 Removes the given option.
 </summary>
 <param name="key">Option key.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.SerializeOptions(System.Text.StringBuilder)">
 <summary>
 Serializes custom options.
 </summary>
 <param name="output">An object that holds the output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.SerializeAnnotations(System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.IO.TextWriter)">
 <summary>
 Serializes the given list of annotations as a JavaScript array declaration.
 </summary>
 <param name="annotations">Annotations to serialize.</param>
 <param name="variableName">Name of JavaScript variable that holds the resulting array.</param>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.FindSuitableType(System.Object)">
 <summary>
 Finds type suitable for a given value.
 </summary>
 <param name="value">Value to examine.</param>
 <returns>Type suitable for a given value or null (Nothing in Visual Basic) if type cannot be found.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Chart.LowerFirstChar(System.String)">
 <summary>
 Puts the first charater of the given string to lower case.
 </summary>
 <param name="str">String to examine.</param>
 <returns>Resulting string.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.ChartDrawEventArgs">
 <summary>
 Provides event information when chart is about to be rendered.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.ChartDrawEventArgs.Data">
 <summary>
 Gets the data to be populated on the chart.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.ChartDrawEventArgs.Query">
 <summary>
 Gets the data query.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.ChartDrawEventArgs.Annotations">
 <summary>
 Gets the dictionary containing optional data/query annotations to be sent to the client.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.ChartDrawEventArgs.#ctor(Dynamicweb.Controls.Charts.DataTable)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="data">Chart data.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="data">data</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.ChartDrawEventArgs.#ctor(Dynamicweb.Controls.Charts.DataTable,Dynamicweb.Controls.Charts.DataQuery)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="data">Chart data.</param>
 <param name="query">Chart data query.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.ChartDrawEventArgs.#ctor(Dynamicweb.Controls.Charts.Chart)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="c">Chart instance.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="c">c</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.ChartDrawEventArgs.#ctor(Dynamicweb.Controls.Charts.Chart,Dynamicweb.Controls.Charts.DataQuery)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="c">Chart instance.</param>
 <param name="query">Chart data query.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.DataQuery">
 <summary>
 Represents a chart data query. This class cannot be inherited.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataQuery.Criteria">
 <summary>
 Gets or sets the list of query criteria.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="criteria">Query criteria.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="criteria">criteria</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.ToString">
 <summary>
 Returns string representation of a current query.
 </summary>
 <returns>String representation of the current query.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.Serialize">
 <summary>
 Serializes current query to string.
 </summary>
 <returns>String representation of the current query.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.AsReadOnly">
 <summary>
 Returns a read-only version of the current data query.
 </summary>
 <returns>a read-only version of the current data query.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.Parse(System.String)">
 <summary>
 Parses data query information fron the given string.
 </summary>
 <param name="input">String to parse query information from.</param>
 <returns>Data query object.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.ParseAndReduce(System.String@)">
 <summary>
 Locates the first key-value pair within the input string, returns the item and removes the original match from the input string.
 </summary>
 <param name="input">String to process.</param>
 <returns>Found item or null (Nothing in Visual Basic) if item has not been found.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.FindSeparator(System.String,System.Char,System.Int32)">
 <summary>
 Finds first unescaped separator.
 </summary>
 <param name="input">String to search in.</param>
 <param name="separator">Separator to look for.</param>
 <param name="startIndex">Start index.</param>
 <returns>A zero-based index of the first unescaped separator.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.Escape(System.String)">
 <summary>
 Returns an escaped version of a given string.
 </summary>
 <param name="str">String to escape.</param>
 <returns>An escaped version of a given string.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.Unescape(System.String)">
 <summary>
 Replaces escape sequences from a given string.
 </summary>
 <param name="str">String to examine.</param>
 <returns>String without escape sequences.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.RemoveRedundantEscape(System.Text.RegularExpressions.Match)">
 <summary>
 Removes escape sequence.
 </summary>
 <param name="m">Regular expression match object.</param>
 <returns>Unescaped string.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataQuery.ContainsSpecialCharacters(System.String)">
 <summary>
 Returns value indicating whether string contains special characters.
 </summary>
 <param name="str">String to examine.</param>
 <returns>value indicating whether string contains special characters.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.DataColumn">
 <summary>
 Represents a data column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataColumn.ID">
 <summary>
 Gets or sets the unique ID of the column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataColumn.Label">
 <summary>
 Gets or sets the column label.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataColumn.Type">
 <summary>
 Gets or sets the type code that corresponds to a column type.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataColumn.Table">
 <summary>
 Gets the reference to owning table.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.#ctor(Dynamicweb.Controls.Charts.DataColumn)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="copyFrom">Data column to copy information from.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="copyFrom">copyFrom</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.#ctor(Dynamicweb.Controls.Charts.DataTable)">
 <summary>
 Initializes a new istance of an object.
 </summary>
 <param name="table">Owning data table.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.#ctor(Dynamicweb.Controls.Charts.DataTable,System.Type,System.String,System.String)">
 <summary>
 Initializes a new istance of an object.
 </summary>
 <param name="table">Owning data table.</param>
 <param name="type">Column type.</param>
 <param name="label">Column label.</param>
 <param name="id">Column identifier.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.#ctor(Dynamicweb.Controls.Charts.DataTable,System.TypeCode,System.String,System.String)">
 <summary>
 Initializes a new istance of an object.
 </summary>
 <param name="table">Owning data table.</param>
 <param name="type">Column type.</param>
 <param name="label">Column label.</param>
 <param name="id">Column identifier.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.ToString">
 <summary>
 Returns a string representation of the current object.
 </summary>
 <returns>String representation of the current object.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.GetHashCode">
 <summary>
 Serves as a hash function for particular type.
 </summary>
 <returns>Hash code for particular object instance.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.Equals(System.Object)">
 <summary>
 Determines whether current column equals to the given one.
 </summary>
 <param name="obj">An instance of the data column to compare with.</param>
 <returns>Value indicating whether current column equals to the given one.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.CompareTo(Dynamicweb.Controls.Charts.DataColumn)">
 <summary>
 Compares current object instance to a given one.
 </summary>
 <param name="other">Another data column.</param>
 <returns>Comparison result.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.GetTypeClass">
 <summary>
 Returns a simple textual representation of the column type.
 </summary>
 <returns>Textual representation of the column type.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.Validate(System.TypeCode,System.Boolean)">
 <summary>
 Validates specified type code and throws an exception if the type code is not valid.
 </summary>
 <param name="typeCode">Type code to validate.</param>
 <param name="throwException">Indicates whether to throw an exception if type code is not valid.</param>
 <returns>Value indicating whether specified type code is valid as a column type.</returns>
 <exception cref="T:System.NotSupportedException">Specified type code is not supported.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.Convert(System.Object)">
 <summary>
 Serializes value of a given cell to Javascript representation.
 </summary>
 <param name="value">Value to serialize.</param>
 <returns>Serialized value.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataColumn.CompareToPrivate(System.Object)">
 <summary>
 Compares current object instance to a given one.
 </summary>
 <param name="obj">Another data column.</param>
 <returns>Comparison result.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.DataColumnCollection">
 <summary>
 Represents a collection of data columns.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.DataRow">
 <summary>
 Represents a data row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataRow.Table">
 <summary>
 Gets the reference to owning data table.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataRow.Values">
 <summary>
 Gets the collection of row values mapped to the corresponding columns.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataRow.Item(Dynamicweb.Controls.Charts.DataColumn)">
 <summary>
 Gets or sets row cell value.
 </summary>
 <param name="column">Reference to existing table column.</param>
 <returns>Row cell value for a given column.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataRow.Item(System.Int32)">
 <summary>
 Gets or sets row cell value.
 </summary>
 <param name="index">Zero based index of a column.</param>
 <returns>Row cell value for a given column.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataRow.#ctor(Dynamicweb.Controls.Charts.DataRow)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="copyFrom">Data row to copy information from.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="copyFrom">copyFrom</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataRow.#ctor(Dynamicweb.Controls.Charts.DataTable)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="table">Owning data table.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.DataRowCollection">
 <summary>
 Represents a collection of data rows.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.DataRowValue">
 <summary>
 Represents a data row value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataRowValue.Value">
 <summary>
 Gets or sets actual row value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataRowValue.Annotation">
 <summary>
 Gets or sets row value annotation.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataRowValue.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataRowValue.#ctor(System.Object,System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="value">Actual row value.</param>
 <param name="annotation">Value annotation.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataRowValue.#ctor(Dynamicweb.Analytics.Model.IAnnotatable)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="copyFrom">Object to copy state from.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="copyFrom">copyFrom</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataRowValue.#ctor(Dynamicweb.Controls.Charts.DataRowValue)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="copyFrom">Object to copy state from.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="copyFrom">copyFrom</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataRowValue.CopyTo(Dynamicweb.Controls.Charts.DataRowValue)">
 <summary>
 Copies the state of the current object into the given one.
 </summary>
 <param name="target">Object to copy state into.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="target">target</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataRowValue.ToString">
 <summary>
 Returns a string representation of the current object.
 </summary>
 <returns>String representation of the current object.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.DataTableExtensions">
 <summary>
 Provides extension methods for types that are related to chart tables.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTableExtensions.AsChartTable(System.Data.DataTable)">
 <summary>
 Converts given data table into the chart table.
 </summary>
 <param name="table">Table to convert.</param>
 <returns>Converted table.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="table">table</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTableExtensions.AsChartTable(System.Data.DataTable,Dynamicweb.Controls.Charts.Providers.ITypeManager)">
 <summary>
 Converts given data table into the chart table.
 </summary>
 <param name="table">Table to convert.</param>
 <param name="manager">Type manager used by the newly created table.</param>
 <returns>Converted table.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="table">table</paramref> or <paramref name="manager">manager</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.DataTable">
 <summary>
 Represents a data table.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataTable.Columns">
 <summary>
 Gets the collection of table columns.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataTable.Rows">
 <summary>
 Gets the collection of table rows.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataTable.TypeManager">
 <summary>
 Gets the type manager for this table.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Charts.DataTable.IsEmpty">
 <summary>
 Gets value indicating whether this table has no rows.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.#ctor(Dynamicweb.Controls.Charts.Providers.ITypeManager)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="manager">Type manager for this table.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="manager">manager</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.CopyFrom(Dynamicweb.Controls.Charts.DataTable)">
 <summary>
 Copies all information from the given data table.
 </summary>
 <param name="table">Data table to copy information from.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="table">table</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.Empty">
 <summary>
 Removes all rows from the table.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.Clear">
 <summary>
 Removes all rows and all columns from the table.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.NewRow">
 <summary>
 Creates new data row.
 </summary>
 <returns>New data column.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.NewColumn">
 <summary>
 Creates new data column.
 </summary>
 <returns>New data column.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.NewColumn(System.TypeCode,System.String,System.String)">
 <summary>
 Creates new data column.
 </summary>
 <param name="type">Column type.</param>
 <param name="label">Column label.</param>
 <param name="id">Column identifier.</param>
 <returns>New data column.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.NewColumn(System.Type,System.String,System.String)">
 <summary>
 Creates new data column.
 </summary>
 <param name="type">Column type.</param>
 <param name="label">Column label.</param>
 <param name="id">Column identifier.</param>
 <returns>New data column.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.Serialize(System.String)">
 <summary>
 Serializes current table instance into the corresponding Javascript object notation.
 </summary>
 <param name="variableName">Name of the variable that holds the contents of the data table.</param>
 <returns>Javascript object representation of the current table.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.SerializeRowValues(Dynamicweb.Controls.Charts.DataRow)">
 <summary>
 Serializes row values into a comma-separated list.
 </summary>
 <param name="r">Row whose values to serialize.</param>
 <returns>Serialized row values.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.Create(System.Data.DataTable)">
 <summary>
 Creates new chart table based on the given data table.
 </summary>
 <param name="table">Data table to use as data source.</param>
 <returns>Chart table created from the given data table.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="table">table</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.Create(System.Data.DataTable,Dynamicweb.Controls.Charts.Providers.ITypeManager)">
 <summary>
 Creates new chart table based on the given data table.
 </summary>
 <param name="table">Data table to use as data source.</param>
 <param name="manager">Type manager for the newly created table.</param>
 <returns>Chart table created from the given data table.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="table">table</paramref> or <paramref name="manager">manager</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.TypeFromTypeCode(System.TypeCode)">
 <summary>
 Returns type based on the given type code.
 </summary>
 <param name="code">Type code.</param>
 <returns>Type information.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.DataTable.FillTable(System.Data.DataTable,Dynamicweb.Controls.Charts.DataTable)">
 <summary>
 Fills given chart table with information from the given data table.
 </summary>
 <param name="table">Source data table.</param>
 <param name="result">Target chart table.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.Providers.FunnelChartEngine">
 <summary>
 Represents a chart engine that renders funnel.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.FunnelChartEngine.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.FunnelChartEngine.GetClientTypeName">
 <summary>
 Returns the name of the client-side object type that corresponds to this chart engine.
 </summary>
 <returns>The name of the client-side object type that corresponds to this chart engine.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.FunnelChartEngine.GetTypeManager">
 <summary>
 Returns type manager that corresponds to this chart engine.
 </summary>
 <returns>Type manager that corresponds to this chart engine.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.FunnelChartEngine.LoadResources">
 <summary>
 Loads resources required by this chart engine.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.Providers.GoogleChartEngine">
 <summary>
 Represents chart engine that uses Google Visualization API.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.GoogleChartEngine.#ctor">
 <summary>
 Initializes a new istance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.GoogleChartEngine.GetTypeClass(System.Type)">
 <summary>
 Returns the common name of a given type.
 </summary>
 <param name="t">Type to examine.</param>
 <returns>Common name of the type.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.GoogleChartEngine.Validate(System.Type)">
 <summary>
 Validates specified type.
 </summary>
 <param name="t">Type to validate.</param>
 <returns>Value indicating whether type is valid for the particular chart.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.GoogleChartEngine.Serialize(System.Object,System.Type)">
 <summary>
 Converts specified value to its Javascript equivalent using given destination type.
 </summary>
 <param name="value">Value to convert.</param>
 <param name="destinationType">Destination type.</param>
 <returns>Converted value.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.GoogleChartEngine.GetClientTypeName">
 <summary>
 Returns the name of the client-side object type that corresponds to this chart engine.
 </summary>
 <returns>The name of the client-side object type that corresponds to this chart engine.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.GoogleChartEngine.GetTypeManager">
 <summary>
 Returns type manager that corresponds to this chart engine.
 </summary>
 <returns>Type manager that corresponds to this chart engine.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.GoogleChartEngine.LoadResources">
 <summary>
 Loads resources required by this chart engine.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.IChartEngine.GetClientTypeName">
 <summary>
 Returns the name of the client-side object type that corresponds to this chart engine.
 </summary>
 <returns>The name of the client-side object type that corresponds to this chart engine.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.IChartEngine.GetTypeManager">
 <summary>
 Returns type manager that corresponds to this chart engine.
 </summary>
 <returns>Type manager that corresponds to this chart engine.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Charts.Providers.ITypeManager">
 <summary>
 Provides mechanism for managing value types within the chart data table.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.ITypeManager.GetTypeClass(System.Type)">
 <summary>
 Returns the common name (a class) for a given type.
 </summary>
 <param name="t">Type to examine.</param>
 <returns>Type class.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.ITypeManager.Validate(System.Type)">
 <summary>
 Validates specified type.
 </summary>
 <param name="t">Type to validate.</param>
 <returns>Value indicating whether type is valid for the particular chart.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Charts.Providers.ITypeManager.Serialize(System.Object,System.Type)">
 <summary>
 Converts specified value to its Javascript equivalent using given destination type.
 </summary>
 <param name="value">Value to convert.</param>
 <param name="destinationType">Destination type.</param>
 <returns>Converted value.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CheckBox.Checked">
 <summary>
 Gets or sets value indicating whether check box is checked.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Combobox">
 <summary>
 Represents a custom list box.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Combobox.AllowAutocompletion">
 <summary>
 Gets or sets the value which indicates whether to use autocompletion for value searching.
 </summary>
 <value>The value which indicates whether to use autocompletion for value searching.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Combobox.AutocompleteExpression">
 <summary>
 Gets or sets the function which overrides the defualt autocmplete function.
 </summary>
 <value>A String type value which represents JavaScript function or function name.</value>
 <returns></returns>
 <remarks>The function which overrides the defualt autocmplete function</remarks>
</member>
<member name="P:Dynamicweb.Controls.Combobox.AllowEditing">
 <summary>
 Gets or sets a value that indicates whether editing is enabled.
 </summary>
 <value>true if editing is enabled; otherwise, false. The default value is true.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Combobox.EditExpression">
 <summary>
 Gets or sets a value which overrides the defualt editor.
 </summary>
 <value>A String type value which represents JavaScript function or function name.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Combobox.AllowEmpty">
 <summary>
 Gets or sets a value that indicates whether empty value is allowed.
 </summary>
 <value>true if empty value is allowed; otherwise, false. The default value is false.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Combobox.RequestKey">
 <summary>
 Gets or sets the name of the request key used to retrieve control value from the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Combobox.DataSource">
 <summary>
 Gets or sets the object from which the data-bound control retrieves its list of data items.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Combobox.OnClientItemCreating">
 <summary>
 Occurs when a item is created, but before Combobox control adds it.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks>If callback function changes event property 'Cancel' value to 'true' operations will be cancelled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.Combobox.OnClientItemCreated">
 <summary>
 Occurs when a item is created, but after Combobox control adds it.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Combobox.OnClientItemSelecting">
 <summary>
 Occurs when a dropdown item is clicked, but before the Combobox control selects it.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks>If callback function changes event property 'Cancel' value to 'true' operations will be cancelled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.Combobox.OnClientItemSelected">
 <summary>
 Occurs when a dropdown item  is clicked, but after the Combobox control selects it.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Combobox.GetSelectedItem">
 <summary>
 Returns selected item.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ComboboxItem.Text">
 <summary>
 Gets or sets the text displayed in a list control for the item represented by the Item.
 </summary>
 <value>The text displayed in a list control for the item represented by the Item control. The default value is String.Empty.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ComboboxItem.Value">
 <summary>
 Gets or sets the value associated with the Item.
 </summary>
 <value>The value associated with the Item. The default is String.Empty.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ComboboxItem.Selected">
 <summary>
 Gets or sets a value indicating whether the item is selected.
 </summary>
 <value>true if the item is selected; otherwise, false. The default is false.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ContextMenu">
 <summary>
     Represents a context menu.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenu.OnShow">
 <summary>
     Gets or sets the client-side script that will be executed after context-menu is shown.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenu.OnHide">
 <summary>
     Gets or sets the client-side script that will be executed after context-menu becomes invisible.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenu.Width">
 <summary>
     Sets a fixed width of the contextmenu.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenu.Translate">
 <summary>
     Specifies wether the button texts of this contextmenu should be translated.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenu.MaxHeight">
 <summary>
     Gets or sets the maximum height of the context-menu.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenu.OnClientSelectView">
 <summary>
     Gets or sets the client-side script that is executed when view selection is performed.
 </summary>
 <value></value>
 <remarks>The script should return the name of the choosen view.</remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenu.Control_OnLoad(System.Object,System.EventArgs)">
 <summary>
 Handles context menu "OnLoad" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenu.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders context menu.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render context menu into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenu.RenderViews(System.Web.UI.HtmlTextWriter)">
 <summary>
 Outputs a Javascript block which enables views support.
 </summary>
 <param name="writer">An instance of the HtmlTextWriter to send contents to.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenu.AppendSingleQuotes(System.String)">
 <summary>
 Returns a string wrapped around single quotes.
 </summary>
 <param name="str">String to process.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenu.GetViews">
 <summary>
 Gets a collection of button IDs groupped by view names.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenu.GetContextMenuAction(System.String,System.String)">
 <summary>
 Retrieves a Javascript handler which displays the Contextmenu.
 </summary>
 <param name="ContextmenuID">The ID of Contextmenu that action should display.</param>
 <param name="EventID">ID of item activating the contextmenu. Can be accessed using JS statement: ContextMenu.callingID</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenu.GetContextMenuAction(System.String,System.String,System.String)">
 <summary>
 Retrieves a Javascript handler which displays the Contextmenu.
 </summary>
 <param name="ContextmenuID">The ID of Contextmenu that action should display.</param>
 <param name="EventID">ID of item activating the contextmenu. Can be accessed using JS statement: ContextMenu.callingID</param>
 <param name="ItemID">ID of item activating the contextmenu. Can be accessed using JS statement: ContextMenu.callingItemID</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenu.GetContextMenuAction(System.String,System.String,System.String,Dynamicweb.Controls.ContextMenu.Position)">
 <summary>
 Retrieves a Javascript handler which displays the Contextmenu.
 </summary>
 <param name="ContextmenuID">The ID of Contextmenu that action should display.</param>
 <param name="EventID">ID of item activating the contextmenu. Can be accessed using JS statement: ContextMenu.callingID</param>
 <param name="ItemID">ID of item activating the contextmenu. Can be accessed using JS statement: ContextMenu.callingItemID</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenuResources.ContextMenuStartButton(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Generates start Context Menu Button HTML markup
 </summary>
 <returns></returns>
</member>
<member name="M:Dynamicweb.Controls.ContextMenuResources.ContextMenuStartButton(System.String,System.String,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Collections.Specialized.NameValueCollection,System.Boolean,System.Boolean)">
 <summary>
 Generates start Context Menu Button HTML markup
 </summary>
 <returns></returns>
</member>
<member name="M:Dynamicweb.Controls.ContextMenuResources.ContextMenuDivider(System.Collections.Specialized.NameValueCollection)">
 <summary>
 Generates Context Menu Divider HTML markup
 </summary>
 <returns></returns>
</member>
<member name="P:Dynamicweb.Controls.eCom.Products.ProductListBox.LanguageID">
 <summary>
 Gets or sets the language id.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.eCom.Products.ProductListBox.ShopID">
 <summary>
 Gets or sets the shop id.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.eCom.Products.ProductListBox.ShowType">
 <summary>
 Gets or sets the value which defines objects types to show.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor">
 <summary>
 EditableListColumnProductsAndGroupsEditor class.
 </summary>
 <seealso cref="T:Dynamicweb.Controls.EditableListColumnEditor" />
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.EditorTypeName">
 <summary>
 Gets the editor's class name.
 </summary>
 <value>A string value identifying the editor's class name.</value>
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.OnlyGroups">
 <summary>
 Gets or sets a value indicating whether [only groups].
 </summary>
 <value><c>true</c> if [only groups]; otherwise, <c>false</c>.</value>
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.ShowIncludeSubGroups">
 <summary>
 Gets or sets a value indicating whether [show include sub groups].
 </summary>
 <value><c>true</c> if [show include sub groups]; otherwise, <c>false</c>.</value>
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.ShowSearches">
 <summary>
 Gets or sets a value indicating whether [show searches].
 </summary>
 <value><c>true</c> if [show searches]; otherwise, <c>false</c>.</value>
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.CallerForm">
 <summary>
 Gets or sets the caller form.
 </summary>
 <value>The caller form.</value>
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.LanguageID">
 <summary>
 Gets or sets the language identifier.
 </summary>
 <value>The language identifier.</value>
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.AllRadioText">
 <summary>
 Gets or sets all radio text.
 </summary>
 <value>All radio text.</value>
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.ShowAllRadio">
 <summary>
 Gets or sets a value indicating whether [show all radio].
 </summary>
 <value><c>true</c> if [show all radio]; otherwise, <c>false</c>.</value>
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.NoneRadioText">
 <summary>
 Gets or sets the none radio text.
 </summary>
 <value>The none radio text.</value>
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.ShowNoneRadio">
 <summary>
 Gets or sets a value indicating whether [show none radio].
 </summary>
 <value><c>true</c> if [show none radio]; otherwise, <c>false</c>.</value>
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.EnableSubItems">
 <summary>
 Gets or sets a value indicating whether [enable sub items].
 </summary>
 <value><c>true</c> if [enable sub items]; otherwise, <c>false</c>.</value>
 <autogeneratedoc />
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.Height">
 <summary>
 Gets or sets the height.
 </summary>
 <value>The height.</value>
 <autogeneratedoc />
</member>
<member name="F:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.Value">
 <summary>
 The value
 </summary>
 <autogeneratedoc />
</member>
<member name="M:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.CreateChildControls">
 <summary>
 Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.
 </summary>
 <autogeneratedoc />
</member>
<member name="M:Dynamicweb.Controls.EditableListColumnProductsAndGroupsEditor.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders the specified writer.
 </summary>
 <param name="writer">The writer.</param>
 <autogeneratedoc />
</member>
<member name="M:Dynamicweb.Controls.ListLinkFilter.Create">
 <summary>
 Creates a filter.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.PersonalSettings">
 <summary>
 Represents personal settings
 </summary>
</member>
<member name="M:Dynamicweb.Controls.PersonalSettings.GetData(System.Int32,System.String,System.String)">
 <summary>
 Gets personal settings for specific user, page and control
 </summary>
 <param name="userID">User id</param>
 <param name="pagePath">Page path</param>
 <param name="controlID">Control id</param>
 <returns>String value with settings</returns>
</member>
<member name="M:Dynamicweb.Controls.PersonalSettings.SaveData(System.Int32,System.String,System.String,System.String)">
 <summary>
 Persists personal setting to data storage
 </summary>
 <param name="userID">User id</param>
 <param name="pagePath">Page path</param>
 <param name="controlID">Control id</param>
 <param name="data">personal settings data</param>
</member>
<member name="M:Dynamicweb.Controls.PersonalSettings.Serialize``1(``0)">
 <summary>
 Serializes object instance state to xml string
 </summary>
 <typeparam name="T">Object type</typeparam>
 <param name="objectInstance">Object instance</param>
 <returns>Serialized to xml string data of object instance</returns>
</member>
<member name="M:Dynamicweb.Controls.PersonalSettings.Deserialize``1(System.String)">
 <summary>
 Deserializes xml string to object instance of specified type
 </summary>
 <typeparam name="T">Object type</typeparam>
 <param name="xmlString">string of xml data</param>
 <returns>Object instance</returns>
</member>
<member name="T:Dynamicweb.Controls.OMC.CountryList">
 <summary>
 Renders a list of countries.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.CountryList.CountryInfo">
 <summary>
 Represents a country information.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.CountryList.CountryInfo.Code">
 <summary>
 Gets or sets country code.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.CountryList.CountryInfo.Name">
 <summary>
 Gets or sets country name.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.CountryInfo.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.CountryInfo.#ctor(System.String,System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="code">Country code.</param>
 <param name="name">Country name.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.CountryInfo.Equals(System.Object)">
 <summary>
 Determines whether current object is equal to the given object.
 </summary>
 <param name="obj">Object to compare with.</param>
 <returns>Value indicating whether current object is equal to the given object.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.CountryInfo.GetHashCode">
 <summary>
 Returns a hash code for the given object.
 </summary>
 <returns>A hash code for the given object.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.CountryInfo.ToString">
 <summary>
 Returns a string representation of the current object.
 </summary>
 <returns>A string representation of the current object.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.CountryInfo.CompareTo(Dynamicweb.Controls.OMC.CountryList.CountryInfo)">
 <summary>
 Compares the instance of the current object with other object.
 </summary>
 <param name="other">Object to compare with.</param>
 <returns>Comparison result.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.CountryInfo.CompareToHidden(System.Object)">
 <summary>
 Compares the instance of the current object with other object.
 </summary>
 <param name="obj">Object to compare with.</param>
 <returns>Comparison result.</returns>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.OMC.CountryList.CountryChanged">
 <summary>
 Occurs when the currently selected country has been changed since the last postback.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.CountryList.SelectedCountry">
 <summary>
 Gets or sets the two-letter ISO code of the selected country.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.CountryList.CssClass">
 <summary>
 Gets or sets the additional CSS class name to apply.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.CountryList.OnClientChange">
 <summary>
 Gets or sets the callback function that is called whenever list selection changes.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sender server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object that receives server control content.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.OnCountryChanged(System.EventArgs)">
 <summary>
 Raises "CountryChanged" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.GetOnChangeEventHandler(System.String)">
 <summary>
 Returns a proper "onclick" event handler.
 </summary>
 <param name="onClientChange">Original "onclick" event handler</param>
 <returns>A proper "onclick" event handler.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.GetCountries">
 <summary>
 Returns a list of all countries that must be rendered.
 </summary>
 <returns>A list of countries to render.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Processes postback data.
 </summary>
 <param name="postDataKey">Postback data key.</param>
 <param name="postCollection">Post collection.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.RaisePostDataChangedEvent">
 <summary>
 Signals the server control to notify the application that the state of the control has changed.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.GetCountry(System.String)">
 <summary>
 Returns country information by the given country code.
 </summary>
 <param name="code">Country code.</param>
 <returns>Country information or null (Nothing in Visual Basic) if country information cannot be resolved.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="code">code</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="code">code</paramref> is an empty string.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.CountryList.GetCountry(System.Globalization.CultureInfo)">
 <summary>
 Returns country information for the given culture.
 </summary>
 <param name="info">Culture information.</param>
 <returns>Country information or null (Nothing in Visual Basic) if country information cannot be resolved.</returns>
 <exception cref="T:System.ArgumentNullException"><paramref name="info">info</paramref> is null.</exception>
 <exception cref="T:System.ArgumentException"><paramref name="info">info</paramref> represents a neutral culture.</exception>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.AttachmentsListBox">
 <summary>
 Represents a list box with a possibility of adding/removing items.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.AutoCompleteEventArgs`1">
 <summary>
 Provides information about auto-completion data.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.AutoCompleteEventArgs`1.Value">
 <summary>
 Gets the current value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.AutoCompleteEventArgs`1.Items">
 <summary>
 Gets the items for auto-completion.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.AutoCompleteEventArgs`1.#ctor(System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="value">Current value.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.BalloonVisibilityTrigger">
 <summary>
 Represents balloon visibility trigger type.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.BalloonVisibilityTrigger.Custom">
 <summary>
 Custom trigger.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.BalloonVisibilityTrigger.MouseOver">
 <summary>
 Show balloon when user places the mouse over the target element.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.BalloonVisibilityTrigger.MouseDown">
 <summary>
 Show balloon when user clicks the target element.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.BalloonVisibilityTrigger.KeyPress">
 <summary>
 Show balloon when user presses any key on a target element.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.BalloonVisibilityTrigger.Focus">
 <summary>
 Show balloon when user focuses the target element.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.Balloon">
 <summary>
 Represents a balloon.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Balloon.Title">
 <summary>
 Gets or sets balloon title.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Balloon.OnClientPositionChange">
 <summary>
 Gets or sets the callback function that is called whenever balloon position changes.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Balloon.AssociatedControlID">
 <summary>
 Gets or sets the ID of the associated control.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Balloon.IsVisible">
 <summary>
 Gets or sets value indicating whether balloon is initially visible.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Balloon.Trigger">
 <summary>
 Gets or sets the balloon visibility trigger type.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Balloon.Content">
 <summary>
 Gets or sets balloon content.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Balloon.ContentID">
 <summary>
 Gets the ID of the balloon content container.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.Balloon.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.Balloon.GetClientDefinition">
 <summary>
 Returns an object that is used to identify the control on the client.
 </summary>
 <returns>An object that is used to identify the control on the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.Balloon.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.Balloon.RenderClientObjectProperties(System.IO.TextWriter)">
 <summary>
 Renders client-side object property initialization.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.FloatingPointNumberSelector">
 <summary>
 Represents a floating point number selector.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.FloatingPointNumberSelector.DecimalPrecision">
 <summary>
 Gets or sets the decimal precision.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.FloatingPointNumberSelector.ClientParserTypeName">
 <summary>
 Gets the full name of the client-side object type which is responsible for parsing values on the client.
 </summary>
 <remarks>The specified type must derive from "Dynamicweb.Controls.OMC.NumberSelectorValueParser" object.</remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.FloatingPointNumberSelector.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.FloatingPointNumberSelector.ValueFromString(System.String)">
 <summary>
 Parses the value from its string representation.
 </summary>
 <param name="input">String representation of the value.</param>
 <returns>Value parsed from its string representation.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.FloatingPointNumberSelector.ValueToString(System.Double)">
 <summary>
 Converts the given value to its string representation.
 </summary>
 <param name="value">Value to convert.</param>
 <returns>Converted value.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.FloatingPointNumberSelector.GetDefaultValue">
 <summary>
 Returns the default value.
 </summary>
 <returns>The default value.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.FloatingPointNumberSelector.RenderClientObjectProperties(System.IO.TextWriter)">
 <summary>
 Renders client-side object property initialization.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.LeadsListItemLastVisit">
 <summary>
 Provides information about the visitor's last visit.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItemLastVisit.Timestamp">
 <summary>
 Gets or sets the timestamp of the last visit.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItemLastVisit.Pageviews">
 <summary>
 Gets or sets the total number of pageviews occured during the last visit.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItemLastVisit.Referrer">
 <summary>
 Gets or sets the referrer URL.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItemLastVisit.SearchKeywords">
 <summary>
 Gets or sets the list of search keywords.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsListItemLastVisit.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.BalloonLiteralContent">
 <summary>
 Represents balloon content as literal.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.BalloonLiteralContent.Text">
 <summary>
 Gets or sets the balloon content.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.BalloonLiteralContent.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.BalloonLiteralContent.#ctor(System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="text">Balloon content.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.BalloonLiteralContent.InstantiateIn(System.Web.UI.Control)">
 <summary>
 Instantiates the given template into the given control.
 </summary>
 <param name="container">Container to instantiate in.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.EditableListBox">
 <summary>
 Represents a list box with a possibility of adding/removing items.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.EditableListBox.SelectedItems">
 <summary>
 Gets or sets the list of selected items.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.EditableListBox.RequestKey">
 <summary>
 Gets or sets the name of the request key used to retrieve control value from the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.EditableListBox.OnClientItemAdding">
 <summary>
 Gets or sets the name of the callback function that is executed when new item is being added to the list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.EditableListBox.OnClientItemRemoving">
 <summary>
 Gets or sets the name of the callback function that is executed when existing item is being deleted from the list.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.EditableListBox.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.EditableListBox.GetClientDefinition">
 <summary>
 Returns an object that is used to identify the control on the client.
 </summary>
 <returns>An object that is used to identify the control on the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.EditableListBox.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.EditableListBox.RenderClientObjectProperties(System.IO.TextWriter)">
 <summary>
 Renders client-side object property initialization.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.LeadsListDisplayMode">
 <summary>
 Represents a display mode of the LeadsList control.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.LeadsListDisplayMode.Normal">
 <summary>
 Normal display mode.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.LeadsListDisplayMode.Compact">
 <summary>
 Compact display mode.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.LeadsListEditMode">
 <summary>
 Represents an edit mode for the LeadsList control.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.LeadsListEditMode.Mark">
 <summary>
 Mark visitors as leads or not leads.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.LeadsListEditMode.ChangeState">
 <summary>
 Change the state of the existing leads.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.LeadsListOrderBy">
 <summary>
 Represents a sotring for the LeadsList control.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.LeadsListOrderBy.TotalVisits">
 <summary>
 Order leads list by total visits column.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.LeadsListOrderBy.LastVisit">
 <summary>
 Order leads list by last visit column.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.LeadsListOrderBy.Pageviews">
 <summary>
 Order leads list by pageviews count column.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.LeadsListOrderBy.EngagementIndex">
 <summary>
 Order leads list by engagement index column.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.LeadsListOrderByDirection">
 <summary>
 Represents the direction of sorting for the LeadsList control.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.LeadsListOrderByDirection.ASC">
 <summary>
  Ascending sorting direction.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.LeadsListOrderByDirection.DESC">
 <summary>
 Descending sorting direction.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.LeadsList">
 <summary>
 Displays a list of visitors with an ability to mark certain visitors a leads/not leads.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.LeadsList.LeadsListQueryResult">
 <summary>
 Represents a result of a list query.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.LeadsListQueryResult.Visitors">
 <summary>
 Gets or sets the list of visitors available for the current frame (page).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.LeadsListQueryResult.Total">
 <summary>
 Gets or sets the total number of visitors available for the current query.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.LeadsListQueryResult.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.OMC.LeadsList.Select">
 <summary>
 Occurs before the list of target visitors is selected.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.OMC.LeadsList.BeforePopulate">
 <summary>
 Occurs before the list data has been sent to the client.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.OMC.LeadsList.AfterPopulate">
 <summary>
 Occurs after the list data has been sent to the client.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.LeadsList.PotentialLeadState">
 <summary>
 Gets the lead state value that indicates that the given lead must be returned to "Potential leads" list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.IsCollapsed">
 <summary>
 Gets or sets value indicating whether list should appear collapsed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.Height">
 <summary>
 Gets or sets the height of the list (excluding header and footer), in pixels.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.PageSize">
 <summary>
 Gets or sets the number of rows to show on each page.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.AutoLoad">
 <summary>
 Gets or sets value indicating whether to automatically fill list with data once the page is loaded.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.OnClientReady">
 <summary>
 Gets or sets the client-side function that is executed when the control is ready.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.OnClientBeforeLoad">
 <summary>
 Gets or sets the client-side function that is executed before the list has been loaded.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.OnClientAfterLoad">
 <summary>
 Gets or sets the client-side function that is executed after the list has been loaded.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.DisplayMode">
 <summary>
 Gets or sets the display mode.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.EditMode">
 <summary>
 Gets or sets the edit mode.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.OrderBy">
 <summary>
 Gets or sets the sorting.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.OrderByDirection">
 <summary>
 Gets or sets the direction for sorting.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.Culture">
 <summary>
 Gets or sets the culture to use.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.ClientInstanceName">
 <summary>
 Gets the unique name of the client-side object instance variable.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.StatesBalloon">
 <summary>
 Gets the lead states balloon.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.UseStatesBalloon">
 <summary>
 Gets value indicating whether to use lead states balloon instead of drop-down list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsList.KnownCompanies">
 <summary>
 Gets the list of known company names.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.WriteResponse(System.IO.TextWriter,System.String)">
 <summary>
 Writes a response to the given output stream. The response MIME type must be "application/javascript".
 </summary>
 <param name="output">Output stream.</param>
 <param name="argument">Argument passed with the request.</param>
 <returns>Javascript variable name that holds the final result to be dispatched to the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.RenderClientObject(System.IO.TextWriter)">
 <summary>
 Renders client-side object.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.LoadResources">
 <summary>
 Loads control resources.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.OnSelect(Dynamicweb.Controls.OMC.LeadsListSelectEventArgs)">
 <summary>
 Raises "Select" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.OnBeforePopulate(Dynamicweb.Controls.OMC.LeadsListDataEventArgs)">
 <summary>
 Raises "BeforePopulate" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.OnAfterPopulate(Dynamicweb.Controls.OMC.LeadsListDataEventArgs)">
 <summary>
 Raises "AfterPopulate" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.GetVisitors(Dynamicweb.Analytics.Queries.Query,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Gets the visitors to be displayed on the list.
 </summary>
 <param name="query">Query representing a filter.</param>
 <param name="parameters">Additional query parameters.</param>
 <returns>Query result.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.GetGeolocationData(Dynamicweb.Analytics.Queries.Query)">
 <summary>
 Queries a geolocation web-service for IP-address, ISP and country code for all the visitors that match the given criteria and builds a temporary table containing those records.
 </summary>
 <param name="query">Query representing a filter.</param>
 <returns>The name of the temporary table.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.GetUniqueIPs(Dynamicweb.Analytics.Queries.Query)">
 <summary>
 Returns a list of unique IP-addresses.
 </summary>
 <param name="query">Query representing a filter.</param>
 <returns>A list of unique IP-addresses.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.LookupBasicGeoInformation(System.Collections.Generic.IEnumerable{System.String})">
 <summary>
 Performs an IP to location lookup and returns only the basic information (IP-address, ISP name and country code and company name).
 </summary>
 <param name="ip">A list of IP-addresses.</param>
 <returns>A basic information for each IP-address.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.SerializeVisitors(System.Collections.Generic.IEnumerable{Dynamicweb.Controls.OMC.LeadsListItem},System.String,System.IO.TextWriter)">
 <summary>
 Serializes specified list of visitors into a JSON string.
 </summary>
 <param name="visitors">Visitors to serialize.</param>
 <param name="variableName">Name of the JavaScript variable that holds the serialized data.</param>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsList.CreateStatesBalloonContent">
 <summary>
 Creates states balloon content.
 </summary>
 <returns>Balloon content.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.LeadsListDataEventArgs">
 <summary>
 Provides event information when list data is available.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListDataEventArgs.Data">
 <summary>
 Gets or sets the data that will be populated.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsListDataEventArgs.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsListDataEventArgs.#ctor(System.Collections.Generic.IEnumerable{Dynamicweb.Controls.OMC.LeadsListItem})">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="data">The data that will be populated.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.LeadsListItem">
 <summary>
 Represents a single row within the leads list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.ID">
 <summary>
 Gets or sets the unique identifier of the row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.VisitorID">
 <summary>
 Gets or sets the unique identifier of the visitor.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.IPAddress">
 <summary>
 Gets or sets IP-address of the visitor.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.CountryCode">
 <summary>
 Gets or sets the two-letter ISO country code.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.CountryName">
 <summary>
 Gets or sets the country name.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.UserName">
 <summary>
 Gets or sets the user name.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.UserCompany">
 <summary>
 Gets or sets the user company.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.ISP">
 <summary>
 Gets or sets the Internet Service Provider name.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.LastVisit">
 <summary>
 Gets or sets the information about visitor's last visit.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.IsLead">
 <summary>
 Gets or sets value indicating whether visitor is lead, not lead or a potential lead.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.Engagement">
 <summary>
 Gets or sets visitor's engagement index.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.CartReference">
 <summary>
 Gets or sets visitor's order progress
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.OrderId">
 <summary>
 Gets or sets visitor's order ID
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.IsSelected">
 <summary>
 Gets or sets value indicating whether visitor row is selected.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.IsActive">
 <summary>
 Gets or sets value indicating whether visitor row is active.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.VisitsCount">
 <summary>
 Gets or sets the number of visits that corresponds to this visitor.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListItem.LeadState">
 <summary>
 Gets or sets the lead state of this visitor.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsListItem.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsListItem.#ctor(Dynamicweb.Analytics.Visit)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="v">Visitor object.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsListItem.ToJSON(System.IO.TextWriter)">
 <summary>
 Serializes an object into JSON string and writes the output using the provided text writer.
 </summary>
 <param name="writer">Writer to use for writing output string.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="writer">writer</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.LeadsListSelectEventArgs">
 <summary>
 Provides event information when list is about to be reloaded.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListSelectEventArgs.Query">
 <summary>
 Gets or sets the query to be used to get the list of target visitors.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListSelectEventArgs.Parameters">
 <summary>
 Gets the list of parameters submitted with the request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.LeadsListSelectEventArgs.SystemParameters">
 <summary>
 Gets the list of system request parameters.
 </summary>
 <remarks>These parameters will be processed by the control itself and normally should be ignored by your code.</remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsListSelectEventArgs.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsListSelectEventArgs.#ctor(System.Boolean)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="autoInitializeParamters">Value indicating whether to automatically initialize request parameters.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.LeadsListSelectEventArgs.InitializeParameters">
 <summary>
 Initializes request parameters.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.MarketingConfiguration">
 <summary>
 Provides an ability to manipulate different OMC settings.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.MarketingConfiguration.ClientInstanceName">
 <summary>
 Gets the unique name of the client-side object instance variable.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.MarketingConfiguration.HostingWindow">
 <summary>
 Gets or sets the reference to a <see cref="T:Dynamicweb.Controls.Dialog">Dialog</see> control that contains marketing settings.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.MarketingConfiguration.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.MarketingConfiguration.LoadResources">
 <summary>
 Loads control resources.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.MarketingConfiguration.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.MarketingConfiguration.RenderClientObject(System.IO.TextWriter)">
 <summary>
 Renders client-side object.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.MasterDetailListBox">
 <summary>
 Represents a list box with a possibility of adding/removing items.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.MasterDetailListBox.SelectedItems">
 <summary>
 Gets or sets the list of selected items.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.MasterDetailListBox.RequestKey">
 <summary>
 Gets or sets the name of the request key used to retrieve control value from the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.MasterDetailListBox.OnClientItemAdding">
 <summary>
 Gets or sets the name of the callback function that is executed when new item is being added to the list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.MasterDetailListBox.OnClientItemRemoving">
 <summary>
 Gets or sets the name of the callback function that is executed when existing item is being deleted from the list.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.MasterDetailListBox.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.MasterDetailListBox.GetClientDefinition">
 <summary>
 Returns an object that is used to identify the control on the client.
 </summary>
 <returns>An object that is used to identify the control on the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.MasterDetailListBox.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.MasterDetailListBox.RenderClientObjectProperties(System.IO.TextWriter)">
 <summary>
 Renders client-side object property initialization.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.NumberSelector">
 <summary>
 Represents a number selector.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.NumberSelector.ClientParserTypeName">
 <summary>
 Gets the full name of the client-side object type which is responsible for parsing values on the client.
 </summary>
 <remarks>The specified type must derive from "Dynamicweb.Controls.OMC.NumberSelectorValueParser" object.</remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelector.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelector.ValueFromString(System.String)">
 <summary>
 Parses the value from its string representation.
 </summary>
 <param name="input">String representation of the value.</param>
 <returns>Value parsed from its string representation.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelector.ValueToString(System.Int32)">
 <summary>
 Converts the given value to its string representation.
 </summary>
 <param name="value">Value to convert.</param>
 <returns>Converted value.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelector.GetDefaultValue">
 <summary>
 Returns the default value.
 </summary>
 <returns>The default value.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.NumberSelectorBase`1">
 <summary>
 Provides a base functionality for implementing number selector.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.NumberSelectorBase`1.MinValue">
 <summary>
 Gets or sets the minimum allowed value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.NumberSelectorBase`1.MaxValue">
 <summary>
 Gets or sets the maximum allowed value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.NumberSelectorBase`1.SelectedValue">
 <summary>
 Gets or sets the currently selected value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.NumberSelectorBase`1.AllowNegativeValues">
 <summary>
 Gets or sets value indicating whether negative numbers are allowed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.NumberSelectorBase`1.LocalizeValues">
 <summary>
 Gets or sets value indicating whether to format values according to the given culture.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.NumberSelectorBase`1.RequestKey">
 <summary>
 Gets or sets the name of the request key used to retrieve control value from the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.NumberSelectorBase`1.Culture">
 <summary>
 Gets or sets the culture to use.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.NumberSelectorBase`1.ClientParserTypeName">
 <summary>
 Gets the full name of the client-side object type which is responsible for parsing values on the client.
 </summary>
 <remarks>The specified type must derive from "Dynamicweb.Controls.OMC.NumberSelectorValueParser" object.</remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelectorBase`1.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelectorBase`1.GetClientDefinition">
 <summary>
 Returns an object that is used to identify the control on the client.
 </summary>
 <returns>An object that is used to identify the control on the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelectorBase`1.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelectorBase`1.RenderClientObjectProperties(System.IO.TextWriter)">
 <summary>
 Renders client-side object property initialization.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelectorBase`1.ValueFromString(System.String)">
 <summary>
 Parses the value from its string representation.
 </summary>
 <param name="input">String representation of the value.</param>
 <returns>Value parsed from its string representation.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelectorBase`1.ValueToString(`0)">
 <summary>
 Converts the given value to its string representation.
 </summary>
 <param name="value">Value to convert.</param>
 <returns>Converted value.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelectorBase`1.GetDefaultValue">
 <summary>
 Returns the default value.
 </summary>
 <returns>The default value.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.NumberSelectorBase`1.ValueToStringWrapper(`0)">
 <summary>
 Returns a string representation of the given value suitable for use in JavaScript.
 </summary>
 <param name="value">Value to convert.</param>
 <returns>A string representation of the given value suitable for use in JavaScript.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.Offset">
 <summary>
 Represents an offset.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Offset.Top">
 <summary>
 Gets or sets the offset (in pixels) from the top side of the container.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Offset.Left">
 <summary>
 Gets or sets the offset (in pixesl) from the left side of the container.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.Offset.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.Offset.#ctor(System.Int32,System.Int32)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="top">The offset (in pixels) from the top side of the container.</param>
 <param name="left">The offset (in pixels) from the left side of the container.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.Offset.ToString">
 <summary>
 Returns a string representation of the current object.
 </summary>
 <returns>A string representation of the current object.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.RecognitionExpressionEditor">
 <summary>
 Represents a profile recognition expression editor.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.ClientInstanceName">
 <summary>
 Gets the unique name of the client-side object instance variable.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.RequestKey">
 <summary>
 Gets or sets the name of the request key used to retrieve values from the form/query-string.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.Width">
 <summary>
 Gets or sets the width of the editable area.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.Height">
 <summary>
 Gets or sets height of the editable area.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.Expression">
 <summary>
 Gets or sets the target recognition expression.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.PointsSelector">
 <summary>
 Gets a reference to number selector control that is used for configuring how much points the visitor gets for satisfying specific rule (or a group of rules).
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.WriteResponse(System.IO.TextWriter,System.String)">
 <summary>
 Writes a response to the given output stream. The response MIME type must be "application/javascript".
 </summary>
 <param name="output">Output stream.</param>
 <param name="argument">Argument passed with the request.</param>
 <returns>Javascript variable name that holds the final result to be dispatched to the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.WriteRules(System.IO.TextWriter)">
 <summary>
 Writes the JSON block containing all the recognition rules available in the system.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.RenderClientObject(System.IO.TextWriter)">
 <summary>
 Renders client-side object.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.LoadResources">
 <summary>
 Loads control resources.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.RecognitionExpressionEditor.ParseExpression(System.String)">
 <summary>
 Parses the recognition expression from the given XML representation.
 </summary>
 <param name="xmlData">XML string representing an expression.</param>
 <returns>Parsed expression.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.SliderValuePosition">
 <summary>
 Represents a position of the current slider value.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.SliderValuePosition.None">
 <summary>
 Don't show the value.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.SliderValuePosition.Top">
 <summary>
 Show value above the handle (when it' active).
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.SliderValuePosition.Left">
 <summary>
 Show value at the left side of the slider.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.SliderValuePosition.Bottom">
 <summary>
 Show value below the handle (when it's active).
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.SliderValuePosition.Right">
 <summary>
 Show value at the right side of the slider.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.SliderMode">
 <summary>
 Represents a slider mode.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.SliderMode.Default">
 <summary>
 Default type.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.SliderMode.Percentage">
 <summary>
 Percentage (values with the range from 0 to 100).
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.Slider">
 <summary>
 Represents a slider.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Slider.Mode">
 <summary>
 Gets or sets slider mode.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Slider.ShowValue">
 <summary>
 Gets or sets slider value position.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Slider.MinValue">
 <summary>
 Gets or sets the minimum allowed value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Slider.MaxValue">
 <summary>
 Gets or sets the maximum allowed value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Slider.SelectedValue">
 <summary>
 Gets or sets the currently selected value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Slider.Width">
 <summary>
 Gets or sets the width of the slider (in pixels).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Slider.FillSelection">
 <summary>
 Gets or sets value indicating whether to fill selection with different color.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Slider.RequestKey">
 <summary>
 Gets or sets the name of the request key used to retrieve control value from the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Slider.OnClientValueChanged">
 <summary>
 Gets or sets the JavaScript function name that is executed after slider value changes.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.Slider.OnClientValueChanging">
 <summary>
 Gets or sets the JavaScript function name that is executed when slider value continuously changes.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.Slider.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.Slider.GetClientDefinition">
 <summary>
 Returns an object that is used to identify the control on the client.
 </summary>
 <returns>An object that is used to identify the control on the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.Slider.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.Slider.RenderClientObjectProperties(System.IO.TextWriter)">
 <summary>
 Renders client-side object property initialization.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.WeekOverview">
 <summary>
 Displays a week overview with an ability of selecting week day (or a range of week days).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverview.Culture">
 <summary>
 Gets or sets the culture to use.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverview.CurrentWeekOnly">
 <summary>
 Gets or sets value indicating  whether to limit the selection to only days from the current week.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverview.CurrentPeriodOnly">
 <summary>
 Gets or sets value indicating  whether to prohibit user from selecting days that are in the future.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverview.Selection">
 <summary>
 Gets or sets the current selection.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverview.RequestKey">
 <summary>
 Gets or sets the name of the request key used to retrieve values from the form/query-string.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverview.OnClientSelectionChanged">
 <summary>
 Gets or sets the callback function that is called whenever current selection changes.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverview.OnClientWeekChanged">
 <summary>
 Gets or sets the callback function that is called whenever selected week changes.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverview.WeekDays">
 <summary>
 Gets the collection of week days mapped to their translated short names.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverview.FullWeekDays">
 <summary>
 Gets the collection of week days mapped to their translated full names.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverview.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverview.GetClientDefinition">
 <summary>
 Returns an object that is used to identify the control on the client.
 </summary>
 <returns>An object that is used to identify the control on the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverview.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverview.RenderClientObjectProperties(System.IO.TextWriter)">
 <summary>
 Renders client-side object property initialization.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverview.FormatDayAndMonth(System.DateTime)">
 <summary>
 Returns a formatted version of day and month according to the given timestamp.
 </summary>
 <param name="timestamp">Timestamp to format.</param>
 <returns>Formatted timestamp.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverview.FormatDayAndMonth(System.DateTime,System.Globalization.CultureInfo)">
 <summary>
 Returns a formatted version of day and month according to the given timestamp and regional settings.
 </summary>
 <param name="timestamp">Timestamp to format.</param>
 <param name="culture">Regional settings.</param>
 <returns>Formatted timestamp.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverview.FormatDayAndWeek(System.DateTime)">
 <summary>
 Returns a formatted version of day and week according to the given timestamp.
 </summary>
 <param name="timestamp">Timestamp to format.</param>
 <returns>Formatted timestamp.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverview.FormatDayAndWeek(System.DateTime,System.Globalization.CultureInfo)">
 <summary>
 Returns a formatted version of day and week according to the given timestamp and regional settings.
 </summary>
 <param name="timestamp">Timestamp to format.</param>
 <param name="culture">Regional settings.</param>
 <returns>Formatted timestamp.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.OMC.WeekOverviewSelection">
 <summary>
 Represents a selected range within the WeekOverview control. This class cannot be inherited.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.OMC.WeekOverviewSelection.PostedValueDateFormat">
 <summary>
 Gets the date format used to parse selection details from the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverviewSelection.StartDate">
 <summary>
 Gets the start date.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverviewSelection.EndDate">
 <summary>
 Gets the end date.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverviewSelection.Culture">
 <summary>
 Gets the target culture.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverviewSelection.Week">
 <summary>
 Gets the year week number.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.OMC.WeekOverviewSelection.Days">
 <summary>
 Gets the list of days that fall within the given selection.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.#ctor(System.DateTime)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="timestamp">Target date.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.#ctor(System.DateTime,System.DateTime)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="startDate">Start date.</param>
 <param name="endDate">End date.</param>
 <exception cref="T:System.ArgumentException"><paramref name="startDate">startDate</paramref> and <paramref name="endDate">endDate</paramref> represent different weeks or different years.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.#ctor(System.DateTime,System.DateTime,System.Globalization.CultureInfo)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="startDate">Start date.</param>
 <param name="endDate">End date.</param>
 <param name="culture">Culture settings.</param>
 <exception cref="T:System.ArgumentException"><paramref name="startDate">startDate</paramref> and <paramref name="endDate">endDate</paramref> represent different weeks or different years.</exception>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.CompareTo(Dynamicweb.Controls.OMC.WeekOverviewSelection)">
 <summary>
 Compares the current object to the given one.
 </summary>
 <param name="other">Object to compare to.</param>
 <returns>Comparison result.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.CompareToHidden(System.Object)">
 <summary>
 Compares the current object to the given one.
 </summary>
 <param name="obj">Object to compare to.</param>
 <returns>Comparison result.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.ToString">
 <summary>
 Returns a string representation of the selection.
 </summary>
 <returns>A string representation of the selection.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.op_Equality(Dynamicweb.Controls.OMC.WeekOverviewSelection,Dynamicweb.Controls.OMC.WeekOverviewSelection)">
 <summary>
 Determines whether two selections are equal.
 </summary>
 <param name="s1">First selection.</param>
 <param name="s2">Second selection.</param>
 <returns>Value indicating whether two selections are equal.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.op_Inequality(Dynamicweb.Controls.OMC.WeekOverviewSelection,Dynamicweb.Controls.OMC.WeekOverviewSelection)">
 <summary>
 Determines whether two selections are not equal.
 </summary>
 <param name="s1">First selection.</param>
 <param name="s2">Second selection.</param>
 <returns>Value indicating whether two selections are not equal.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.GetCurrent(System.Globalization.CultureInfo)">
 <summary>
 Gets the selection that corresponds to the current day.
 </summary>
 <param name="culture">Target culture.</param>
 <returns>Current selection.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.GetWeekOfYear(System.DateTime)">
 <summary>
 Gets year week number for a given date.
 </summary>
 <param name="timestamp">Target date.</param>
 <returns>Year week for a given date.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.GetWeekOfYear(System.DateTime,System.Globalization.CultureInfo)">
 <summary>
 Gets year week number for a given date.
 </summary>
 <param name="timestamp">Target date.</param>
 <param name="culture">Target culture.</param>
 <returns>Year week for a given date.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.Parse(System.String)">
 <summary>
 Parses the week overview selection from the given literal string.
 </summary>
 <param name="data">String to parse from.</param>
 <returns>Parsed selection.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.OMC.WeekOverviewSelection.Parse(System.String,System.Globalization.CultureInfo)">
 <summary>
 Parses the week overview selection from the given literal string.
 </summary>
 <param name="data">String to parse from.</param>
 <param name="culture">Culture information used to express the selection.</param>
 <returns>Parsed selection.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.CustomListBox">
 <summary>
 Represents a custom list box.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomListBox.DataSource">
 <summary>
 Gets or sets the object from which the data-bound control retrieves its list of data items.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomListBox.Provider">
 <summary>
 Gets or sets value selection provider.
 </summary>
 <value>String representation of JavaScript callback function which provides select operation.</value>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomListBox.RequestKey">
 <summary>
 Gets or sets the name of the request key used to retrieve control value from the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CustomListBox.#ctor">
 <summary>
 Initializes a new instance of the EditableList class.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomListBox.OnClientItemAdding">
 <summary>
 Occurs when a value is selected in a CustomSelectBox control, but before the CustomSelectBox control adds the item.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks>If callback function changes event property 'Cancel' value to 'true' operations will be cancelled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomListBox.OnClientItemAdded">
 <summary>
 Occurs when a value is selected in a CustomSelectBox control, but after the CustomSelectBox control adds the item.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomListBox.OnClientItemRemoving">
 <summary>
 Occurs when a Remove button is clicked, but before the CustomSelectBox control removes the item.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks>If callback function changes event property 'Cancel' value to 'true' operations will be cancelled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomListBox.OnClientItemRemoved">
 <summary>
 Occurs when a Remove button is clicked, but after the CustomSelectBox control removes the item.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomListBox.OnClientListClearing">
 <summary>
 Occurs when a Clear button is clicked, but before the CustomSelectBox control removes all the items.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks>If callback function changes event property 'Cancel' value to 'true' operations will be cancelled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomListBox.OnClientListCleared">
 <summary>
 Occurs when a Clear button is clicked, but after the CustomSelectBox control removes all the items.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CustomListBox.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder">
 <summary>
 Represents an expression builder for retrieving values from the global settings file.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GlobalSettingsExpression">
 <summary>
 Represents a global settings expression.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GlobalSettingsExpression.Key">
 <summary>
 Gets or sets the global settings entry key.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GlobalSettingsExpression.ConversionType">
 <summary>
 Gets or sets the type that the entry value must be converted to.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GlobalSettingsExpression.IsArray">
 <summary>
 Gets or sets value indicating whether expression result is an array.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GlobalSettingsExpression.ReturnType">
 <summary>
 Gets the return type.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GlobalSettingsExpression.IsValid">
 <summary>
 Gets value indicating whether expression is valid.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GlobalSettingsExpression.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GlobalSettingsExpression.Invoke">
 <summary>
 Invokes the expression and returns entry value.
 </summary>
 <returns>Entry value.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GlobalSettingsExpression.ConvertValue(System.String,System.Type)">
 <summary>
 Converts the given string value to the given type.
 </summary>
 <param name="value">Value to convert.</param>
 <param name="valueType">Conversion type.</param>
 <returns>Converted value.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GlobalSettingsExpression.ConvertArray(System.String,System.Type)">
 <summary>
 Converts the given string value representing an array to the array with elements of the specified type.
 </summary>
 <param name="value">Comma-separated list of elements to convert ot array.</param>
 <param name="valueType">Conversion type.</param>
 <returns>Converted value.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GlobalSettingsExpression.ConvertArray(System.String[],System.Type)">
 <summary>
 Converts the given array elements to the given type.
 </summary>
 <param name="value">Array to convert.</param>
 <param name="valueType">Conversion type.</param>
 <returns>Converted value.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.SupportsEvaluate">
 <summary>
 Gets value indicating whether expression builder supports no-compile pages.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)">
 <summary>
 Returns an object that represents the parsed expression.
 </summary>
 <param name="expression">The value of the declarative expression.</param>
 <param name="propertyType">The type of the property bound to by the expression.</param>
 <param name="context">Contextual information for the evaluation of the expression.</param>
 <returns>An Object containing the parsed representation of the expression; otherwise, Nothing if ParseExpression is not implemented.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)">
 <summary>
 Returns code that is used during page execution to obtain the evaluated expression.
 </summary>
 <param name="entry">The object that represents information about the property bound to by the expression.</param>
 <param name="parsedData">The object containing parsed data as returned by ParseExpression. </param>
 <param name="context">Contextual information for the evaluation of the expression.</param>
 <returns>A CodeExpression that is used for property assignment.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)">
 <summary>
 Returns an object that represents an evaluated expression.
 </summary>
 <param name="target">The object containing the expression.</param>
 <param name="entry">The object that represents information about the property bound to by the expression.</param>
 <param name="parsedData">The object containing parsed data as returned by ParseExpression.</param>
 <param name="context">Contextual information for the evaluation of the expression.</param>
 <returns>An object that represents the evaluated expression; otherwise, Nothing if the inheritor does not implement EvaluateExpression.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.ParseFrom(System.String)">
 <summary>
 Loads the global settings expression from the given string.
 </summary>
 <param name="expression">Source expression (raw string).</param>
 <returns>Global settings expression object.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.GlobalSettingsExpressionBuilder.GetSetting``1(System.String)">
 <summary>
 Returns the value of the specified settings.
 </summary>
 <typeparam name="T">Value type.</typeparam>
 <param name="key">Setting key.</param>
 <returns>Setting value.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Design.LocalizableLabelConverter">
 <summary>
 Supports converting strings to instances of "LocalizableLabel" object (and vice versa).
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.LocalizableLabelConverter.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.LocalizableLabelConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
 <summary>
 Determines whether the converter can convert the value of a given type to a "LocalizableLabel" type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="sourceType">Source type.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.LocalizableLabelConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
 <summary>
 Converts a value of a custom type to "LocalizableLabel" type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="culture">Regional settings.</param>
 <param name="value">Value to convert.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.LocalizableLabelConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
 <summary>
 Determines whether the converter can convert the value of a type "LocalizableLabel" to a destination type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="destinationType">Destination type.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.LocalizableLabelConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
 <summary>
 Converts a value of a type "LocalizableLabel" to a destination type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="culture">Regional settings.</param>
 <param name="value">Value to convert.</param>
 <param name="destinationType">Destination type.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Design.OffsetConverter">
 <summary>
 Represents an offset converter.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.OffsetConverter.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.OffsetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
 <summary>
 Determines whether the converter can convert the value of a given type to a "LocalizableLabel" type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="sourceType">Source type.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.OffsetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
 <summary>
 Converts a value of a custom type to "LocalizableLabel" type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="culture">Regional settings.</param>
 <param name="value">Value to convert.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.OffsetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
 <summary>
 Determines whether the converter can convert the value of a type "LocalizableLabel" to a destination type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="destinationType">Destination type.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.OffsetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
 <summary>
 Converts a value of a type "LocalizableLabel" to a destination type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="culture">Regional settings.</param>
 <param name="value">Value to convert.</param>
 <param name="destinationType">Destination type.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Design.ContextMenuViewCollectionConverter">
 <summary>
 Supplies functionality to convert a property of type "String" into type "ContextMenuViewCollection" (and vice versa).
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.ContextMenuViewCollectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
 <summary>
 Determines whether the converter can convert the value of a given type to a "ContextMenuViewCollection" type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="sourceType">Source type.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.ContextMenuViewCollectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
 <summary>
 Converts a value of a custom type to "ContextmenuViewCollection" type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="culture">Regional settings.</param>
 <param name="value">Value to convert.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.ContextMenuViewCollectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
 <summary>
 Determines whether the converter can convert the value of a type "ContextMenuViewCollection" to a destination type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="destinationType">Destination type.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.ContextMenuViewCollectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
 <summary>
 Converts a value of a type "ContextmenuViewCollection" to a destination type.
 </summary>
 <param name="context">Descriptor context.</param>
 <param name="culture">Regional settings.</param>
 <param name="value">Value to convert.</param>
 <param name="destinationType">Destination type.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Design.TreeToolbarButtonCollectionEditor">
 <summary>
 Enables users modify "ToolbarButtons" collection of the Tree object at design time.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.TreeToolbarButtonCollectionEditor.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.TreeToolbarButtonCollectionEditor.CreateInstance(System.Type)">
 <summary>
 Creates new instance of the specified collection item type.
 </summary>
 <param name="itemType">Collection item type.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.TreeToolbarButtonCollectionEditor.GetDisplayText(System.Object)">
 <summary>
 Retrieves the display text for the given list item.
 </summary>
 <param name="value">List item.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Design.TreeToolbarButtonCollectionEditor.CreateNewItemTypes">
 <summary>
 Gets the data types this collection editor can contain.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.CustomSelector">
 <summary>
 Represents a number selector.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomSelector.RequestKey">
 <summary>
 Gets or sets the name of the request key used to retrieve control value from the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomSelector.Provider">
 <summary>
 Gets or sets value selection provider.
 </summary>
 <value>String representation of JavaScript callback function which provides select operation.</value>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomSelector.Value">
 <summary>
 Gets or sets the value.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomSelector.Text">
 <summary>
 Gets or sets the text.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomSelector.Width">
 <summary>
 Gets or sets the width of the selector (in pixels).
 </summary>
 <remarks>The default value is 0 pixels (width 100%).</remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomSelector.OnClientValueSelecting">
 <summary>
 Occurs when a value is selected in a CustomSelector control, but before the CustomSelector control sets the value.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks>If callback function changes event property 'Cancel' value to 'true' operations will be cancelled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomSelector.OnClientValueSelected">
 <summary>
 Occurs when a value is selected in a CustomSelector control, but after the CustomSelector control sets the value.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomSelector.OnClientValueRemoving">
 <summary>
 Occurs when a Remove button is clicked, but before the CustomSelector control removes the value.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks>If callback function changes event property 'Cancel' value to 'true' operations will be cancelled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomSelector.OnClientValueRemoved">
 <summary>
 Occurs when a Remove button is clicked, but after the CustomSelector control removes the value.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CustomSelector.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CustomSelector.#ctor(System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="value">The selected value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CustomSelector.#ctor(System.String,System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="value">The selected value.</param>
 <param name="text">The text representation of value.</param>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CustomSelector.SelectType">
 <summary>
 Gets or sets the value which indicates what kind of object can be selected.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CustomSelector.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListBackgroundImage">
 <summary>
 Represents a background image.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListBackgroundImage.BackgroundImageRepeat">
 <summary>
 Specifies how a background image fills the available space.
 </summary>
 <remarks>
 The enumerator contains values specifying how a background image fills the available space. 
 The values of this enumerator are used to set the BackgroundImage.Repeat property.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListBackgroundImage.ImageUrl">
 <summary>
 Gets or sets the URL of the image source for the BackgroundImage object.
 </summary>
 <value>A System.String value that specifies the location of an image. </value>
 <returns></returns>
 <remarks>The URL of the image source for the BackgroundImage object.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListBackgroundImage.ImageExpression">
 <summary>
 Gets or sets the JavaScript expression that will be called to fetch the image source for the BackgroundImage object.
 </summary>
 <value>A JavaScript expression that specifies the location of an image. </value>
 <returns></returns>
 <remarks>if ImageUrl and ImageExpression are defiened, will be used ImageExpression.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListBackgroundImage.IsEmpty">
 <summary>
 Gets a value that indicates whether this BackgroundImage object is initialized with the default values.
 </summary>
 <value>true if the BackgroundImage object is initialized with the default values; otherwise false. </value>
 <returns></returns>
 <remarks>A value that indicates whether this BackgroundImage object is initialized with the default values.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListBackgroundImage.Position">
 <summary>
 Gets or sets the alignment of the background image(s) within a container element.
 </summary>
 <value>
 A System.String value that specifies the image's position. 
 The default is String.Empty.
 </value>
 <returns></returns>
 <remarks>The alignment of the background image(s) within a container element.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListBackgroundImage.Repeat">
 <summary>
 Gets or sets a value that specifies how the background image fills the available space.
 </summary>
 <value>
 One of the BackgroundImageRepeat enumeration values.
 The default is BackgroundImageRepeat.Repeat.
 </value>
 <returns></returns>
 <remarks>A value that specifies how the background image fills the available space.</remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableList">
 <summary>
 Represents a editable list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.AllowEditing">
 <summary>
 Gets or sets a value that indicates whether editing is enabled.
 </summary>
 <value>true if editing is enabled; otherwise, false. The default value is true.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.AllowAddNewRow">
 <summary>
 Gets or sets a value that indicates whether adding a new row is enabled.
 </summary>
 <value>true if adding is enabled; otherwise, false. The default value is true.</value>
 <returns></returns>
 <remarks>This option is used only when AllowEditing is Enabled</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.AddNewRowCaption">
 <summary>
 Gets or sets a caption for the Add new row button.
 </summary>
</member>
<member name="P:Dynamicweb.Controls.EditableList.AllowPaging">
 <summary>
 Gets or sets a value that indicates whether paging is enabled.
 </summary>
 <value>true if paging is enabled; otherwise, false. The default value is false.</value>
 <returns></returns>
 <remarks>
 Paging allows you to display the contents of the EditableList control in page segments. 
 The number of items on a page is determined by the PageSize property. 
 If no value is specified for the PageSize property, the EditableList control will display 10 items on a page.
 </remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.AllowSorting">
 <summary>
 Gets or sets a value that indicates whether sorting is enabled.
 </summary>
 <value>true if sorting is enabled; otherwise, false. The default value is false.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.Personalize">
 <summary>
 Gets or sets value indicating whether to enable personal settings.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.DeleteColumnCaption">
 <summary>
 Gets or sets a delete column caption.
 </summary>    
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.AutoGenerateColumns">
 <summary>
 Gets or sets a value indicating whether columns are created automatically when the DataSource properties are set.
 </summary>
 <value>true if the columns should be created automatically; otherwise, false. The default is true.</value>
 <returns></returns>
 <remarks>
 Columns are automatically generated when this property is set to true and the DataSource properties are set or changed.
 Columns can also be automatically generated when the AutoGenerateColumns property is changed from false to true.
 </remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.Columns">
 <summary>
 Provides access to a EditableList's column collection.
 </summary>
 <value>A EditableListColumnCollection object that represents a collection of columns within the EditableList control. </value>
 <returns></returns>
 <remarks>The default is null.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.DataSource">
 <summary>
 Gets or sets the object from which the data-bound control retrieves its list of data items.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.Dialog">
 <summary>
 Gets or sets the caption for the edit dialog.
 </summary>
 <value>A System.String value that specifies the text displayed within the edit dialog's header. </value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.Pager">
 <summary>
 Get or sets the editable list's pager.
 </summary>
 <value>A EditableListPager value that provide navigation through EditableList data</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.RequestKey">
 <summary>
 Gets or sets the name of the request key used to retrieve control value from the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.OnClientRowCreating">
 <summary>
 Occurs when a row is created, but after EditableList control adds it.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks>If callback function changes event property 'Cancel' value to 'true' operations will be cancelled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.OnClientRowCreated">
 <summary>
 Occurs when a row is created, but after EditableList control adds it.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.OnClientRowDeleting">
 <summary>
 Occurs when a row's Delete button is clicked, but before the EditableList control deletes the row.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks>If callback function changes event property 'Cancel' value to 'true' operations will be cancelled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.OnClientRowDeleted">
 <summary>
 Occurs when a row's Delete button is clicked, but after the EditableList control deletes the row.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.OnClientRowUpdating">
 <summary>
 Occurs when a edit window "Ok" button is clicked, but before the EditableList control updates the row.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks>If callback function changes event property 'Cancel' value to 'true' operations will be cancelled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.OnClientRowUpdated">
 <summary>
 Occurs when a edit window "Ok" button is clicked, but after the EditableList control updates the row.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.OnClientDialogOpening">
 <summary>
 Occurs when a edit window is opening, but before it's rendered.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks>If callback function changes event property 'Cancel' value to 'true' operations will be cancelled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableList.OnClientDialogOpened">
 <summary>
 Occurs when a edit window is opening, but after it's rendered.
 </summary>
 <value>String representation of JavaScript callback function.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableList.#ctor">
 <summary>
 Initializes a new instance of the EditableList class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableList.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableList.CreateColumnSet(Dynamicweb.Controls.EditableListItemCollection)">
 <summary>
 Creates the set of columns to be used to build up the control hierarchy. 
 When AutoGenerateColumns is true, the columns are created to match the data source and are appended to the set of columns defined in the Columns collection.
 </summary>
 <param name="dataSource">The data source being used to create the control hierarchy.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListButtonColumn">
 <summary>
 Represents a list column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListButtonColumn.Action">
 <summary>
 Gets or sets the button click action.
 </summary>
 <value>A String type value which represents JavaScript function or function name.</value>
 <returns></returns>
 <remarks>The button click action.</remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListButtonColumn.#ctor">
 <summary>
 Initializes a new instance of the EditableListColumn class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListButtonColumn.#ctor(System.String)">
 <summary>
 Initializes a new instance of the EditableListColumn class using the specified column id.
 </summary>
 <param name="name">
 A string that represents the name of the column to be created. 
 If set to Nothing or an empty string (""), a default name will be specified when added to the columns collection.
 </param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListButtonColumn.#ctor(System.String,System.String)">
 <summary>
 Initializes a new instance of the EditableListColumn class using the specified column id.
 </summary>
 <param name="name">
 A string that represents the name of the column to be created. 
 If set to Nothing or an empty string (""), a default name will be specified when added to the columns collection.
 </param>
 <param name="action">A String type value which represents JavaScript function or function name.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListColumnOptions">
 <summary>
 Provides the style settings used to paint data cells.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnOptions.Caption">
 <summary>
 Gets or sets the caption.
 </summary>
 <value>A System.String value that specifies the text displayed. </value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnOptions.CssClass">
 <summary>
 Gets or sets the cascading style sheet (CSS) class rendered by the Web server control on the client.
 </summary>
 <value>The CSS class rendered by the Web server control on the client. The default is String.Empty.</value>
 <returns></returns>
 <remarks>Use the CssClass property to specify the CSS class to render on the client for the Web server control.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnOptions.Height">
 <summary>
 Gets or sets the height of the column.
 </summary>
 <value>
 A Unit that represents the height of the column. 
 The default is Empty, which indicates that this property is not set.
 </value>
 <returns></returns>
 <remarks>Use the Height property to specify or determine the height of the columnl.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnOptions.Index">
 <summary>
 Gets or sets a value indicating column index.
 </summary>
 <returns></returns>
 <remarks>A value indicating column index.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnOptions.Tooltip">
 <summary>
 Gets or sets the column header's tooltip text.
 </summary>
 <value>A string value that specifies the text displayed within the column header's tooltip. The default is String.Empty.</value>
 <returns></returns>
 <remarks>
 If the ToolTip property is specified, the tooltip is shown whenever the mouse pointer pauses over the column's header. 
 Otherwise, the tooltip isn't shown.
 </remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnOptions.Visible">
 <summary>
 Gets or sets a value that indicates whether a column is visible.
 </summary>
 <value>true if the column is visible; otherwise false.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnOptions.Width">
 <summary>
 Gets or sets the width of the column.
 </summary>
 <value>
 A Unit that represents the width of the column. 
 The default is Empty, which indicates that this property is not set.
 </value>
 <returns>Use the Width property to specify or determine the width of the column. </returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListColumnOptions.#ctor">
 <summary>
 Initializes a new instance of the EditableListCellStyle class.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListColumn">
 <summary>
 Represents a base class for list column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumn.CellOptions">
 <summary>
 Gets the style settings used to paint column cells.
 </summary>
 <value>A EditableListCellOptions object that contains the style settings used to paint column cells.</value>
 <returns></returns>
 <remarks>Use the EditableListCellOptions property to specify the appearance of cells within an individual column. </remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumn.Name">
 <summary>
 Gets or sets the unique programmatic identifier name for a column.
 </summary>
 <value>
 A string value that specifies the column's identifier.
 The default is String.Empty.
 </value>
 <returns></returns>
 <remarks>The unique programmatic identifier name for a column</remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListColumn.#ctor">
 <summary>
 Initializes a new instance of the EditableListColumn class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListColumn.#ctor(System.String)">
 <summary>
 Initializes a new instance of the EditableListColumn class, as type string, using the specified column id.
 </summary>
 <param name="name">
 A string that represents the name of the column to be created. 
 If set to Nothing or an empty string (""), a default id will be specified when added to the columns collection.
 </param>
 <remarks>By default, the id specific to a column becomes the Caption property value.</remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListColumnCollection">
 <summary>
 Represents the EditableList's column collection.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnCollection.IsEmpty">
 <summary>
 Gets a value indicating whether the collection is empty.
 </summary>
 <value>Type: Boolean</value>
 <returns>true if the collection is empty; otherwise, false.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListCellOptions">
 <summary>
 Represents a list column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListCellOptions.BackgroundImage">
 <summary>
 Gets the background image defined by the current style.
 </summary>
 <value>A BackgroundImage object that represents the background image. </value>
 <returns></returns>
 <remarks>Use the BackgroundImage property to access the settings of an image which should be 
 displayed as the background of the corresponding object which the current style applies to.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListCellOptions.HorizontalAlign">
 <summary>
 Gets or sets the horizontal alignment of the contents within its container.
 </summary>
 <value>
 One of the System.Web.UI.WebControls.HorizontalAlign enumeration values. 
 The default is HorizontalAlign.NotSet.
 </value>
 <returns></returns>
 <remarks>The horizontal alignment of the contents within its container.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListCellOptions.VerticalAlign">
 <summary>
 Gets or sets the vertical alignment of the contents in its container.
 </summary>
 <value>
 One of the System.Web.UI.WebControls.VerticalAlign enumeration values. 
 The default is VerticalAlign.NotSet.
 </value>
 <returns></returns>
 <remarks>Use the VerticalAlign property to specify the vertical alignment of the contents in its container.</remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListCellOptions.#ctor">
 <summary>
 Initializes a new instance of the EditableListCellStyle class.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListEditFormOptions">
 <summary>
 Provides settings of the editor that represent the current column within an Edit Form.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListEditFormOptions.Enabled">
 <summary>
 Gets or sets a value indicating whether column is enabled.
 </summary>
 <value>true if column is enabled; otherwise, false. The default is true.</value>
 <returns></returns>
 <remarks>A value indicating whether column is enabled.</remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListEditFormOptions.#ctor">
 <summary>
 Initializes a new instance of the EditableListCellStyle class.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListDataColumn">
 <summary>
 Represents a list column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListDataColumn.DataType">
 <summary>
 Gets or sets the type of data stored in the column.
 </summary>
 <value>A Type object that represents the column data type.</value>
 <returns></returns>
 <remarks>The type of data stored in the column. Can not be null.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListDataColumn.DefaultValue">
 <summary>
 Gets or sets the default value for the column when you are creating new rows.
 </summary>
 <value>A value appropriate to the column's DataType.</value>
 <returns></returns>
 <remarks>The default value for the column when new rows are created.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListDataColumn.EditorMetadata">
 <summary>
 Gets or sets a control that will edit the value on client side.
 </summary>
 <value>
 A value indicating what control will edit the value on client side.
 The default is null.
 </value>
 <returns></returns>
 <remarks>EditableList find apropriate control basing on DataType property in case if editor was not specified.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListDataColumn.EditFormOptions">
 <summary>
 Gets or sets the settings of the editor that corresponds to the current column within an Edit Form.
 </summary>
 <value>
 Type: OptionsColumnEditForm 
 The settings of the editor that corresponds to the current column within an Edit Form. 
 </value>
 <returns></returns>
 <remarks>EditableList find apropriate control basing on DataType property in case if editor was not specified.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListDataColumn.SortExpression">
 <summary>
 Gets or sets the JavaScript expression that will be called when a column is selected for sorting.
 </summary>
 <value>The JavaScript expression that will be called when a column is selected for sorting.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListDataColumn.Filterable">
 <summary>
 Gets or sets a value indicating whether the filtering is enabled.
 </summary>
 <value>true if filter is enabled; otherwise, false. The default is false.</value>
 <returns></returns>
 <remarks>A value indicating whether the filtering is enabled.</remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListDataColumn.#ctor">
 <summary>
 Initializes a new instance of the EditableListColumn class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListDataColumn.#ctor(System.String)">
 <summary>
 Initializes a new instance of the EditableListColumn class using the specified column id.
 </summary>
 <param name="name">
 A string that represents the name of the column to be created. 
 If set to Nothing or an empty string (""), a default name will be specified when added to the columns collection.
 </param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListDataColumn.#ctor(System.String,System.Type)">
 <summary>
 Initializes a new instance of the EditableListColumn class using the specified column id and data type.
 </summary>
 <param name="name">
 A string that represents the name of the column to be created. 
 If set to Nothing or an empty string (""), a default name will be specified when added to the columns collection.
 </param>
 <param name="dataType">A supported DataType.</param>
 <remarks>By default, the id specific to a column becomes the Caption property value.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnComboboxEditor.AllowAutocompletion">
 <summary>
 Gets or sets the value which indicates whether to use autocompletion for value searching.
 </summary>
 <value>The value which indicates whether to use autocompletion for value searching.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnComboboxEditor.AutocompleteExpression">
 <summary>
 Gets or sets the function which overrides the defualt autocmplete function.
 </summary>
 <value>A String type value which represents JavaScript function or function name.</value>
 <returns></returns>
 <remarks>The function which overrides the defualt autocmplete function</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnComboboxEditor.AllowEditing">
 <summary>
 Gets or sets a value that indicates whether editing is enabled.
 </summary>
 <value>true if editing is enabled; otherwise, false. The default value is true.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnComboboxEditor.EditExpression">
 <summary>
 Gets or sets a value which overrides the defualt editor.
 </summary>
 <value>A String type value which represents JavaScript function or function name.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnDateEditor.AllowEmpty">
 <summary>
 Gets or sets the value indicating whether user can choose time (in 24h notation).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnDateEditor.EditorTypeName">
 <summary>
 Gets the editor's class name.
 </summary>
 <value>A string value identifying the editor's class name.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnDateEditor.IncludeTime">
 <summary>
 Gets or sets the value indicating whether user can choose time (in 24h notation).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnListEditor.AllowMultiple">
 <summary>
 Gets or set the value which indicates that multiple options can be selected in the list. 
 If it is not specified, then only one option can be selected at a time.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListColumnEditor">
 <summary>
 Represents the base class of column editor.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnEditor.EditorTypeName">
 <summary>
 Gets the editor's class name.
 </summary>
 <value>A string value identifying the editor's class name.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnEditor.CssClass">
 <summary>
 Gets or sets the additional CSS class name to apply to editor.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnEditor.Enabled">
 <summary>
 Gets or sets a value indicating whether the editor is enabled.
 </summary>
 <value>true if editor is enabled; otherwise, false. The default is true.</value>
 <returns></returns>
 <remarks>A value indicating whether the editor is enabled.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnEditor.Width">
 <summary>
 Gets or sets the width of the selector field excluding the width of the calendar icon (in pixels).
 </summary>
 <remarks>The default value is 56 pixels.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnUserEditor.OnlyBackend">
 <summary>
 Gets or sets the value which indicates whether select only backend users.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnUserEditor.HideAdmins">
 <summary>
 Gets or sets the value which indicates whether hide admins.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnUserEditor.Select">
 <summary>
 Gets or sets the value which indicates what kind of User Managment object can be selected.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListColumnUserEditor.GetClientScriptBlock">
 <summary>
 JavaScripts from AjaxControl. This is method for module paragraph settings.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListContractResolver">
 <summary>
 JSON.Net serializes ALL properties of a class by default
 this class will tell JSON.NET to only serialize properties if they MATCH by name or type
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListDialog">
 <summary>
 Represent EditableList control's edit dialog settings.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListDialog.Caption">
 <summary>
 Gets or sets the caption for the dialog's header.
 </summary>
 <value>A System.String value that specifies the text displayed within the dialog's header. </value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListDialog.Width">
 <summary>
 Width of the dialog. 
 </summary>
 <remarks>Max is 600 px, min 200 px.</remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListDialog.#ctor">
 <summary>
 Initializes a new instance of the EditableListDialog class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListDialog.#ctor(System.String)">
 <summary>
 Initializes a new instance of the EditableListDialog class with specified caption.
 </summary>
 <param name="caption">The caption for the dialog's header</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableListPager">
 <summary>
 Represents a editable list's pager settings.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListPager.PageSize">
 <summary>
 Gets or sets the number of items to display on a single page of the EditableList control.
 </summary>
 <value>The number of items to display on a single page of the EditableList control. The default value is 10.</value>
 <returns></returns>
 <remarks>The number of items to display on a single page of the EditableList control.</remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListPager.Text">
 <summary>
 Gets or set the pager text.
 </summary>
 <value>
 The string value that provide pager information about it's state. 
 Can be used template.
 By default is "Page {current} of {end}".
 </value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableListPager.#ctor">
 <summary>
 Initializes a new instance of the EditableListPager class.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnListEditorItem.Text">
 <summary>
 Gets or sets the text displayed in a list control for the item represented by the Item.
 </summary>
 <value>The text displayed in a list control for the item represented by the Item control. The default value is String.Empty.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnListEditorItem.Value">
 <summary>
 Gets or sets the value associated with the Item.
 </summary>
 <value>The value associated with the Item. The default is String.Empty.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnListEditorItem.Selected">
 <summary>
 Gets or sets a value indicating whether the item is selected.
 </summary>
 <value>true if the item is selected; otherwise, false. The default is false.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnListEditorItem.CssClass">
 <summary>
 Gets or sets a css class of item.
 </summary>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnNumberEditor.AllowNegativeValues">
 <summary>
 Gets or sets value indicating whether negative numbers are allowed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnNumberEditor.AllowDecimalPoints">
 <summary>
 Gets or sets value indicating whether decimal numbers are allowed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnNumberEditor.DecimalPrecision">
 <summary>
 Gets or sets the decimal precision.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnNumberEditor.Culture">
 <summary>
 Gets or sets the culture to use.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnNumberEditor.MinValue">
 <summary>
 Gets or sets the minimum allowed value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnNumberEditor.MaxValue">
 <summary>
 Gets or sets the maximum allowed value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnNumberEditor.EditorTypeName">
 <summary>
 Gets the editor's class name.
 </summary>
 <value>A string value identifying the editor's class name.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnRadioEditor.Options">
 <summary>
 Gets or sets the radio options.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListColumnTextEditor.Required">
 <summary>
 Gets or sets the value which indicates wheather the editor can have empty value.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableListDialogLayout.CssClass">
 <summary>
 Gets or sets the additional CSS class name to apply to control container.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ModuleAdmin.ContentFrameSrc">
 <summary>
 Page to display in content frame. Default is about:blank.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.DropDownSource.FindByText(System.String)">
 <summary>
 Searches for the option by specified text.
 </summary>
 <param name="text">Option's text.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.DropDownSource.FindByValue(System.String)">
 <summary>
 Searches for the option by specified value.
 </summary>
 <param name="value">Option's value.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListFilterOptGroupCollection">
 <summary>
 Represents a collection of filter options.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilterOptGroupCollection.FindByText(System.String)">
 <summary>
 Searches for the option by specified text.
 </summary>
 <param name="text">Option's text.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilterOptGroupCollection.FindByValue(System.String)">
 <summary>
 Searches for the option by specified value.
 </summary>
 <param name="value">Option's value.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListFilterOptGroup">
 <summary>
 Represents a single filter option.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilterOptGroup.Label">
 <summary>
 Gets or sets the option text.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilterOptGroup.Options">
 <summary>
 Gets or sets the option text.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilterOptGroup.#ctor(System.String)">
 <summary>
 Initializes a new instance of a class.
 </summary>
 <param name="label">Option's group label.</param>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.CombineHandlerCompressionAlgorithm.None">
 <summary>
 No compression shold be applied.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.CombineHandlerCompressionAlgorithm.Gzip">
 <summary>
 Use "gzip" compression algorithm.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.CombineHandlerCompressionAlgorithm.Deflate">
 <summary>
 Use "deflate" compression algorithm.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.CombineHandlerContextException">
 <summary>
 Provides information about an exception that occured within combine handler context.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CombineHandlerContextException.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CombineHandlerContextException.#ctor(System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="message">Error message.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.CombineHandlerContext">
 <summary>
 Represents combine handler context.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CombineHandlerContext.Token">
 <summary>
 Gets the token associated with this context.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.CombineHandlerContext.Resources">
 <summary>
 Gets the list of resource files associated with this context.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CombineHandlerContext.#ctor">
 <summary>
 Initializes new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CombineHandlerContext.Create(System.String)">
 <summary>
 Creates new context.
 </summary>
 <param name="ext">Resource extension.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CombineHandlerContext.Create(System.String,System.String[])">
 <summary>
 Creates new context.
 </summary>
 <param name="ext">Resource extension.</param>
 <param name="data">List of resource URLs to use as the datasource.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CombineHandlerContext.Retrieve(System.String)">
 <summary>
 Retrieves specified context.
 </summary>
 <param name="token">Context token.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CombineHandlerContext.Delete(System.String)">
 <summary>
 Deletes specified context.
 </summary>
 <param name="token">Context token.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CombineHandlerContext.GenerateToken(System.String[])">
 <summary>
 Generates new token.
 </summary>
 <param name="data">List of resource URLs.</param>
 <returns>Generated token, or empty string if the token can't be generated.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.CombineHandlerContext.GetSessionEntryKey(System.String)">
 <summary>
 Retrieves a session entry key according to given token.
 </summary>
 <param name="token">Token to use.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.GenericResource">
 <summary>
 Represents a generic resource.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.GenericResource.Url">
 <summary>
 Gets or sets the URL of the resource.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.GenericResource.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.GenericResource.#ctor(System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="url">Resource URL.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.GenericResource.Embed(Dynamicweb.Controls.ControlResources,System.Web.UI.HtmlTextWriter)">
 <summary>
 Performs custom resource embedding.
 </summary>
 <param name="host">Resource manager containig this resource.</param>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> to write output into.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ResourceCollection">
 <summary>
 Represents a collection of resources.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.IRequestItem">
 <summary>
 Indicates that the control persists its value in the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.IRequestItem.RequestKey">
 <summary>
 Gets or sets the name of the request key used to retrieve control value from the current HTTP request.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.IResourceLoader">
 <summary>
 Defines the method control must implement in order to embed an additional resource into the page.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.IResourceLoader.LoadResources">
 <summary>
 Loads all control resources for current page.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.LocalizationState">
 <summary>
 Represents a localization state.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.LocalizationState.No">
 <summary>
 Do not localize.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.LocalizationState.Yes">
 <summary>
 Localize.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.LocalizationState.Inherit">
 <summary>
 Inherit the behavior from the parent.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.LocalizableLabel">
 <summary>
 Represents a localizable label.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.LocalizableLabel.Text">
 <summary>
 Gets or sets the text of the label.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.LocalizableLabel.Localize">
 <summary>
 Gets or sets value indicating whether to localize the label.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.LocalizableLabel.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.LocalizableLabel.#ctor(System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="text">Label text.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.LocalizableLabel.#ctor(System.String,Dynamicweb.Controls.LocalizationState)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="text">Label text.</param>
 <param name="localize">Value indicating whether to localize the label.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.LocalizableLabel.ToString">
 <summary>
 Returns a string representation of the current object.
 </summary>
 <returns>A string representation of the current object.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.LocalizableLabel.op_Implicit(System.String)~Dynamicweb.Controls.LocalizableLabel">
 <summary>
 Converts the given string to localizable label.
 </summary>
 <param name="text">String to convert.</param>
 <returns>Localizable label.</returns>
 <remarks></remarks>    
</member>
<member name="M:Dynamicweb.Controls.LocalizableLabel.op_Explicit(Dynamicweb.Controls.LocalizableLabel)~System.String">
 <summary>
 Converts the given localizable label to string.
 </summary>
 <param name="label">Localizable Label to convert.</param>
 <returns>Converted string.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ResourceConditionCriteria">
 <summary>
 Represents condition criteria.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ResourceConditionCriteria.StartsWith">
 <summary>
 Resource URL starts with specified value.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ResourceConditionCriteria.EndsWith">
 <summary>
 Resource URL ends with specified value.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ResourceConditionCriteria.Contains">
 <summary>
 Resource URL contains specified value.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ResourceConditionCriteria.Equals">
 <summary>
 Resource URL equals to specified value.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ResourceConditionResolution">
 <summary>
 Represents condition resolution.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ResourceConditionResolution.Default">
 <summary>
 Do not perform any special actions.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ResourceConditionResolution.KeepOriginal">
 <summary>
 Do not combine this resource with others, keep original link to it.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ResourceConditionResolution.Discard">
 <summary>
 Do not load this resource.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ResourceCondition">
 <summary>
 Represents resource condition.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ResourceCondition.#ctor">
 <summary>
 Initializes new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ResourceCondition.#ctor(System.String,Dynamicweb.Controls.ResourceConditionCriteria,Dynamicweb.Controls.ResourceConditionResolution)">
 <summary>
 Initializes new instance of an object.
 </summary>
 <param name="value">Test value.</param>
 <param name="criteria">Condition criteria.</param>
 <param name="resolution">Condition resolution.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ResourceCondition.GetResolution(System.String)">
 <summary>
 Retrieves a resolution for the given resource.
 </summary>
 <param name="resourceUrl">URL of the resource.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ResourceConditionCollection">
 <summary>
 Represents a collection of conditions.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ContainerStretchMode">
 <summary>
 Represents stretch mode.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ContainerStretchMode.VerticalOnly">
 <summary>
 Stretch vertically.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ContainerStretchMode.HorizontalOnly">
 <summary>
 Stretch horizontally.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ContainerStretchMode.Fill">
 <summary>
 Stretch both vertically and horizontally.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ContainerScrollMode">
 <summary>
 Represents scroll mode.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ContainerScrollMode.VerticalOnly">
 <summary>
 Only vertical scroll bars are allowed.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ContainerScrollMode.HorizontalOnly">
 <summary>
 Only horizontal scroll bars are allowed.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ContainerScrollMode.Auto">
 <summary>
 Both vertical and horizontal scroll bars are allowed.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ContainerScrollMode.Hidden">
 <summary>
 Do not show the scroll bars.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.StretchedContainer">
 <summary>
 Represents a container which is automatically stretched.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.StretchedContainer.Stretch">
 <summary>
 Gets or sets stretch mode.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.StretchedContainer.Scroll">
 <summary>
 Gets or sets scroll mode.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.StretchedContainer.Anchor">
 <summary>
 Gets or sets the element which defines how to stretch the container.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.OnLoad(System.EventArgs)">
 <summary>
 Handles <see cref="E:System.Web.UI.Control.Load">Load</see> event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends container content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on a client.
 </summary>
 <param name="writer"></param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.SaveProperties">
 <summary>
 Serializes control properties.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.LoadProperties(System.String)">
 <summary>
 Deserializes control properties.
 </summary>
 <param name="properties">String which represents serializes control properties.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.GetFieldDeclaration(System.String,System.String,System.Boolean)">
 <summary>
 Gets JSON field declaration.
 </summary>
 <param name="fieldName">Field name.</param>
 <param name="fieldValue">Field value.</param>
 <param name="isLast">Value indicating whether this is the last declaration in the current block.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.AreEqual(System.String,System.String)">
 <summary>
 Determines whether two strings are equal.
 </summary>
 <param name="str1">First string.</param>
 <param name="str2">Second string.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.EnumParse``1(System.String)">
 <summary>
 Parses enumeration value from the string.
 </summary>
 <typeparam name="T">Type of the enumeration.</typeparam>
 <param name="value">Enumeration value.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.GetOverflowStyle">
 <summary>
 Gets the "overflow" style declaration.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.SetRenderContentsMethodDelegate(System.Web.UI.RenderMethod)">
 <summary>
 Assigns an event handler delegate to render container content to its parent control.
 </summary>
 <param name="renderMethod">The information necessary to pass to the delegate so it can render container contents.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.LoadResources">
 <summary>
 Loads container resources.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Processes post-back data for the container.
 </summary>
 <param name="postDataKey">Data key associated with the container.</param>
 <param name="postCollection">Post collection.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.StretchedContainer.RaisePostDataChangedEvent">
 <summary>
 Signals the container to notify ASP.NET application that the state of the control has been changed.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ContextMenuButton">
 <summary>
 Represents a context menu button.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.ModuleSystemName">
 <summary>
 Get and set required module to see this item
 </summary>
 <value>A valid module system name</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.Version">
 <summary>
 Get and set minimum required version to use the button
 </summary>
 <value>String</value>
 <returns>Button text.</returns>
 <remarks>If empty it is allowed</remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.ChildItems">
 <summary>
 Collection of menu child items
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.Text">
 <summary>
 Gets or sets the button text.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.Icon">
 <summary>
 Stores and retrieves the predefined button icon. Icons wins over images!
 </summary>
 <value>KnownIcon</value>
 <returns>The predefined button icon.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.ImagePath">
 <summary>
 Gets or sets the button image path.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.ArrowImagePath">
 <summary>
 Gets or sets the arrow image path.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.Image">
 <summary>
 Gets or sets the button image (can be overriden with the "ImagePath" property).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.OnClientClick">
 <summary>
 Gets or sets the client-script which is executed when user clicks on a button.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.Divide">
 <summary>
 Gets or sets the button divider type.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.Checked">
 <summary>
 Gets or sets if the button is checked. Image and Imagepath is ignored when true.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.Views">
 <summary>
 Gets or sets the views associated with this button.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.Disabled">
 <summary>
 Gets or sets value indicating whether the button is disabled.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ContextMenuButton.Width">
 <summary>
 Gets or sets the context menu button width.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ContextMenuButton.Divider">
 <summary>
 Represents a context menu button divider type.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ContextMenuButton.Divider.None">
 <summary>
 No divider.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ContextMenuButton.Divider.Before">
 <summary>
 Put divider before the button.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ContextMenuButton.Divider.After">
 <summary>
 Put divider after the button.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenuButton.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders context menu button.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render context menu button into.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ContextMenuViewCollection">
 <summary>
 Represents a collection of views that specified button supports.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenuViewCollection.#ctor">
 <summary>
 Initializes new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenuViewCollection.#ctor(System.String)">
 <summary>
 Initializes new instance of an object.
 </summary>
 <param name="value">Comma-separated list of items.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenuViewCollection.#ctor(System.Collections.IEnumerable)">
 <summary>
 Initializes new instance of an object.
 </summary>
 <param name="items">Initial collection.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ContextMenuViewCollection.ToString">
 <summary>
 Returns a string representation of a collection.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.DateSelector.IncludeTime">
 <summary>
 Gets or sets a value indicating whether this control should show the minutes and seconds
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.DateSelector.AllowNeverExpire">
 <summary>
 Gets or sets a value indicating whether the Never Expire option should be available
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.DateSelector.ShowAsLabel">
 <summary>
 If set, the date is shown as a label instead of as dropdowns
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.DateSelector.AllowEmpty">
 <summary>
 Gets or sets the value indicating whether user can choose time (in 24h notation).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.DateSelector.OnClientChange">
 <summary>
 Gets or sets the javascript to be run on change
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Dialog">
 <summary>
 Represents a dialog.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.TranslateTitle">
 <summary>
 Gets or sets value indicating whether to translate the list title.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.ShowClose">
 <summary>
 Show close button in title bar.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.ShowOkButton">
 <summary>
 Show OK button. Will close dialog unless OkAction is overridden.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.OkAction">
 <summary>
 Javascript onclick action for OK button - default is dialog.hide('{0}');.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.ShowCancelButton">
 <summary>
 Show cancel button. Will close dialog unless CancelAction is overridden.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.CancelAction">
 <summary>
 Javascript onclick action for Cancel button - default is dialog.hide('{0}');.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.Title">
 <summary>
 Title of the dialog.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.Width">
 <summary>
 Width of the dialog - max is 600 px, min 200 px. 
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.Size">
 <summary>
 Size of the dialog (sm, md, lg), overrides the width
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.HidePadding">
 <summary>
 Expands the content of the dialog to the edges.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.OkText">
 <summary>
 Gets or sets the "OK" button text.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Dialog.CancelText">
 <summary>
 Gets or sets the "Cancel" button text.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Dialog.Control_OnLoad(System.Object,System.EventArgs)">
 <summary>
 Handles dialog "OnLoad" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Dialog.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders dialog.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render dialog into.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListAutomatedSearchFilter">
 <summary>
 Represents a text filter that executes automatically.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListAutomatedSearchFilter.OnClientChange">
 <summary>
 Gets or sets the client-side script that executes when a ListAutomatedSearchFilter control's text is changed.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListAutomatedSearchFilter.WaterMarkText">
 <summary>
 Gets or sets the watermark text for this filter.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListAutomatedSearchFilter.EnableQueryExpressions">
 <summary>
 Gets or sets value indicating whether to enable query expressions.
 </summary>
 <value></value>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListAutomatedSearchFilter.Width">
 <summary>
 Gets or sets the width of the text-box.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListAutomatedSearchFilter.TextFilter">
 <summary>
 Gets the reference to underlying <see cref="T:Dynamicweb.Controls.ListTextFilter">ListTextFilter</see> control.
 </summary>
 <value></value>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListAutomatedSearchFilter.Initialize(Dynamicweb.Controls.List)">
 <summary>
 Initializes a filter.
 </summary>
 <param name="owner">A reference to a <see cref="T:Dynamicweb.Controls.List">List</see> control which is current filter should be attached to.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListAutomatedSearchFilter.Create">
 <summary>
 Creates a filter.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListAutomatedSearchFilter.OnApply(Dynamicweb.Controls.ListFilterEventArgs)">
 <summary>
 Filters rows and fires "Apply" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListAutomatedSearchFilter.Search(Dynamicweb.Controls.ListRowCollection)">
 <summary>
 Searches within specified rows collection.
 </summary>
 <param name="source">Rows to search within.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListAutomatedSearchFilter.FilterRowsByExpression(Dynamicweb.Controls.ListRowCollection,Dynamicweb.Controls.QueryExpression)">
 <summary>
 Filters a rows collection by the given query expression.
 </summary>
 <param name="rows">Rows to filter.</param>
 <param name="expr">Expression to filter rows by.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListAutomatedSearchFilter.RowFound(Dynamicweb.Controls.ListRow)">
 <summary>
 Determines whether row sould be persisted in list rows collection.
 </summary>
 <param name="row">List row to examine.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.QueryExpressionCriteria">
 <summary>
 Represents comparison criteria.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.QueryExpressionCriteria.Equals">
 <summary>
 Equals to [value].
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.QueryExpressionCriteria.NotEquals">
 <summary>
 Not equals to [value].
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.QueryExpressionCriteria.GreaterThen">
 <summary>
 Greater then [value].
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.QueryExpressionCriteria.LessThen">
 <summary>
 Less then [value].
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.QueryExpressionAppliance">
 <summary>
 Represents expression appliance type.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.QueryExpressionAppliance.Include">
 <summary>
 Include results with specified expression.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.QueryExpressionAppliance.Exclude">
 <summary>
 Exclude results with specified expression.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.QueryExpression">
 <summary>
 Represents search query expression.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.QueryExpression.Pattern">
 <summary>
 Pattern that is used to parse search query.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.QueryExpression.Criteria">
 <summary>
 Gets or sets comparison criteria.
 </summary>
 <value></value>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.QueryExpression.Appliance">
 <summary>
 Gets or sets appliance type.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.QueryExpression.Field">
 <summary>
 Gets or sets target field.
 </summary>
 <value></value>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.QueryExpression.Value">
 <summary>
 Gets or sets field value.
 </summary>
 <value></value>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.QueryExpression.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.QueryExpression.#ctor(System.String,System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="field">Target field.</param>
 <param name="value">Field value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.QueryExpression.Parse(System.String)">
 <summary>
 Parses all expression from the given query.
 </summary>
 <param name="query">Query to analyze.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.QueryExpression.Normalize(System.String)">
 <summary>
 Strips all spaces and double quotes from the beginning and ending of the given query.
 </summary>
 <param name="query">Query to normalize.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.QueryExpression.ParseMatch(System.Text.RegularExpressions.Match)">
 <summary>
 Creates an expression from the given match.
 </summary>
 <param name="m">Match to analyze.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.QueryExpression.AreEqual(System.String,System.String)">
 <summary>
 Determines whether two strings are equal.
 </summary>
 <param name="strA">First string.</param>
 <param name="strB">Second string.</param>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListDateFilter.OnClientChange">
 <summary>
 Gets or sets the client-side script that executes when a ListDateFilter control's value is changed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListDateFilter.IncludeTime">
 <summary>
 Gets or sets value indicating whether time is shown.
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether time is shown.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListFilterOption">
 <summary>
 Represents a single filter option.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilterOption.Text">
 <summary>
 Gets or sets the option text.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilterOption.Value">
 <summary>
 Gets or sets some sensitive information for this option.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilterOption.Selected">
 <summary>
 Gets or sets value indicating whether option is selected.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilterOption.#ctor">
 <summary>
 Initializes a new instance of a class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilterOption.#ctor(System.String,System.String)">
 <summary>
 Initializes a new instance of a class.
 </summary>
 <param name="text">Option's text.</param>
 <param name="value">Option's value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilterOption.#ctor(System.String,System.String,System.Boolean)">
 <summary>
 Initializes a new instance of a class.
 </summary>
 <param name="text">Option's text.</param>
 <param name="value">Option's value.</param>
 <param name="selected">Value indicating whether option is selected.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListFilterOptionCollection">
 <summary>
 Represents a collection of filter options.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilterOptionCollection.FindByText(System.String)">
 <summary>
 Searches for the option by specified text.
 </summary>
 <param name="text">Option's text.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilterOptionCollection.FindByValue(System.String)">
 <summary>
 Searches for the option by specified value.
 </summary>
 <param name="value">Option's value.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListFlagFilter">
 <summary>
 Represents a flag filter.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFlagFilter.LabelFirst">
 <summary>
 Gets or sets the position of the label.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFlagFilter.IsSet">
 <summary>
 Gets or sets value indicating whether flag is set.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFlagFilter.OnClientChange">
 <summary>
 Gets or sets the client-side script that executes when a ListFlagFilter control's state is changed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFlagFilter.AutoPostBack">
 <summary>
 Gets or sets a value indicating whether a postback to the server automatically occurs when the user changes the flag state.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFlagFilter.Create">
 <summary>
 Creates a filter.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFlagFilter.GetOnChangeEventHandler">
 <summary>
 Retrieves an "onchange" event handler.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListDropDownListFilter">
 <summary>
 Represents a drop-down list filter.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListDropDownListFilter.Width">
 <summary>
 Gets or sets the width of the drop-down list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListDropDownListFilter.SelectedValue">
 <summary>
 Gets or sets the value currently selected in the drop-down list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListDropDownListFilter.Items">
 <summary>
 Gets or sets the collection of drop-down list items.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListDropDownListFilter.OnClientChange">
 <summary>
 Gets or sets the client-side script that executes when a ListDropDownFilter control's selection is changed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListDropDownListFilter.AutoPostBack">
 <summary>
 Gets or sets a value indicating whether a postback to the server automatically occurs when the user changes the drop-down list selection.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListDropDownListFilter.#ctor">
 <summary>
 Initializes a new instance of a class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListDropDownListFilter.Initialize(Dynamicweb.Controls.List)">
 <summary>
 Initializes a filter.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListDropDownListFilter.Create">
 <summary>
 Creates a filter.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListDropDownListFilter.SetSelectedItem">
 <summary>
 Sets currently selected item.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListDropDownListFilter.GetOnChangeEventHandler">
 <summary>
 Retrieves an "onchange" event handler.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListFilter">
 <summary>
 Represents a base class for all <see cref="T:Dynamicweb.Controls.List">List</see> control filters.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.ListFilter.Apply">
 <summary>
 Occurs when filter is about to be applied to the list rows.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilter.Name">
 <summary>
 Gets or sets the name of the filter.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilter.Label">
 <summary>
 Gets or sets the label for this filter.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilter.Owner">
 <summary>
 Gets or sets the reference to a <see cref="T:Dynamicweb.Controls.List">List</see> control that this filter is attached to.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilter.Priority">
 <summary>
 Gets or sets the priority of the filter.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilter.Enabled">
 <summary>
 Gets or sets value indicating whether filter is enabled.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilter.Divide">
 <summary>
 Gets or sets the divider type for this filter.
 </summary>
 <value></value>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilter.Initialize(Dynamicweb.Controls.List)">
 <summary>
 Initializes a filter.
 </summary>
 <param name="owner">A reference to a <see cref="T:Dynamicweb.Controls.List">List</see> control which is current filter should be attached to.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilter.ApplyTo(Dynamicweb.Controls.ListRowCollection)">
 <summary>
 Applies a filter to the specified list rows.
 </summary>
 <param name="rows">List rows that should be filtered.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilter.ApplyToCurrentList">
 <summary>
 Applies a filter to the current list.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilter.Create">
 <summary>
 Creates a filter.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilter.OnApply(Dynamicweb.Controls.ListFilterEventArgs)">
 <summary>
 Raises <see cref="E:Dynamicweb.Controls.ListFilter.Apply">Dynamicweb.Controls.ListFilter.Apply</see> event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilter.GetLabel">
 <summary>
 Retrieves a label that should be displayed for this filter.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilter.GetSubName(System.String)">
 <summary>
 Creates a sub-name for a filter control. The name is based on the filter's name.
 </summary>
 <param name="suffix">An additional suffix to be applied to the name.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilter.GetClientEventHandler(System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Generates the Javascript statement that can be used to executed filter's custom event handler.
 </summary>
 <param name="handlerName">The name of the function.</param>
 <param name="args">Event arguments.</param>
 <returns>Generated Javascript-statement.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilter.GetClientEventHandler(System.String,System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Generates the Javascript statement that can be used to executed filter's custom event handler.
 </summary>
 <param name="handlerName">The name of the function.</param>
 <param name="sender">Event sender.</param>
 <param name="args">Event arguments.</param>
 <returns>Generated Javascript-statement.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListFilterCollection">
 <summary>
 Represents a collection of list filters.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilterCollection.Owner">
 <summary>
 Gets the referente to a <see cref="T:Dynamicweb.Controls.List">Dynamicweb.Controls.List</see> control which these filters are attached to.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilterCollection.#ctor(Dynamicweb.Controls.List)">
 <summary>
 Initializes a new instance of a class.
 </summary>
 <param name="owner">A referente to a <see cref="T:Dynamicweb.Controls.List">Dynamicweb.Controls.List</see> control which all filters should be attached to.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilterCollection.Initialize">
 <summary>
 Initializes all filters that hasn't been initialized yet.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListFilterEventArgs">
 <summary>
 Provides data for the <see cref="E:Dynamicweb.Controls.ListFilter.Apply">Apply</see> event of a
 <see cref="T:Dynamicweb.Controls.ListFilter">ListFilter</see>.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListFilterEventArgs.Rows">
 <summary>
 Gets or sets the collection of list rows.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListFilterEventArgs.#ctor(Dynamicweb.Controls.ListRowCollection)">
 <summary>
 Initializes a new instance of a <see cref="T:Dynamicweb.Controls.ListFilterEventArgs">ListFilterEventArgs</see> class.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListSubmitFilterButton">
 <summary>
 Renders a button that submits the current filter settings
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListSubmitFilterButton.Text">
 <summary>
 Gets or sets the text on the button
 </summary>
 <value></value>
 <returns></returns>
 <remarks>The DoTranslate property controls if the text is translated to the current backend language</remarks>
</member>
<member name="P:Dynamicweb.Controls.ListSubmitFilterButton.DoTranslate">
 <summary>
 If set (default) the text on the button is translated to the current backend language
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListTextFilter">
 <summary>
 Represents a text filter.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListTextFilter.Text">
 <summary>
 Gets or sets the text entered in the text-box field.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListTextFilter.Width">
 <summary>
 Gets or sets the width of the text-box.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListTextFilter.ShowSubmitButton">
 <summary>
 Gets or sets value indicating whether to show "Submit" button.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListTextFilter.WaterMarkText">
 <summary>
 Gets or sets text that is displayed when nothing is entered into text-box.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListTextFilter.SubmitButtonIconPath">
 <summary>
 Gets or sets the virtual path to the custom "Submit" button icon.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListTextFilter.SubmitButtonIcon">
 <summary>
 Gets or sets the type of the "Submit" button icon.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListTextFilter.OnClientChange">
 <summary>
 Gets or sets the client-side script that executes when a ListTextFilter control's text is changed.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListTextFilter.Initialize(Dynamicweb.Controls.List)">
 <summary>
 Initializes a filter.
 </summary>
 <param name="owner">A reference to a <see cref="T:Dynamicweb.Controls.List">List</see> control which is current filter should be attached to.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListTextFilter.Create">
 <summary>
 Creates a filter.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListTextFilter.GetOnChangeEventHandler">
 <summary>
 Retrieves an "onchange" event handler.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListTextFilter.EncodeValue(System.String)">
 <summary>
 Encodes specified value so it can be passed as an attribute value.
 </summary>
 <param name="value">Value to encode.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListColumnCollection">
 <summary>
 Represents a collection of <see cref="T:Dynamicweb.Controls.List">List</see> columns.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListColumnCollection.Owner">
 <summary>
 Gets the referente to a <see cref="T:Dynamicweb.Controls.List">Dynamicweb.Controls.List</see> control which these columns belongs to.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListColumnCollection.#ctor(Dynamicweb.Controls.List)">
 <summary>
 Initializes a new instance of a class.
 </summary>
 <param name="owner">A referente to a <see cref="T:Dynamicweb.Controls.List">Dynamicweb.Controls.List</see> control which all columns should be attached to.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListColumnCollection.Initialize">
 <summary>
 Initializes all columns that hasn't been initialized yet.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListRowValueCopareOptions">
 <summary>
 Represents a row value compare options.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRowValueCopareOptions.Culture">
 <summary>
 Gets or sets the target culture.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRowValueCopareOptions.DateFormat">
 <summary>
 Gets or sets the date format.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListRowValueComparer">
 <summary>
 Represents a row value comparer.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRowValueComparer.FirstValueOptions">
 <summary>
 Gets or sets the first value's copare options.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRowValueComparer.SecondValueOptions">
 <summary>
 Gets or sets the second value's compare options.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRowValueComparer.Compare(System.String,System.String)">
 <summary>
 Compares two row values.
 </summary>
 <param name="firstValue">First row value.</param>
 <param name="secondValue">Second row value.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListSortDirection">
 <summary>
 Represents <see cref="T:Dynamicweb.Controls.List">List</see> column sort direction.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ListSortDirection.Ascending">
 <summary>
 Sort column ascending.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ListSortDirection.Descending">
 <summary>
 Sort column descending.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListSortEventArgs">
 <summary>
 Provides data for the <see cref="E:Dynamicweb.Controls.List.Sort">Sort</see> event of a
 <see cref="T:Dynamicweb.Controls.List">List</see>.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListSortEventArgs.Rows">
 <summary>
 Gets a collection of List rows.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListSortEventArgs.Column">
 <summary>
 Gets the reference to a <see cref="T:Dynamicweb.Controls.ListColumn">ListColumn</see> object that current list is sorted by.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListSortEventArgs.Direction">
 <summary>
 Gets a direction of the sort.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListSortEventArgs.#ctor(Dynamicweb.Controls.ListRowCollection,Dynamicweb.Controls.ListColumn,Dynamicweb.Controls.ListSortDirection)">
 <summary>
 Initializes a new instance of a class.
 </summary>
 <param name="rows">The collection of List rows to sort.</param>
 <param name="column">The list column to sort rows by.</param>
 <param name="direction">Sort direction.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Overlay">
 <summary>
 Represents an infobar.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Overlay.Message">
 <summary>
 Message to display.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Overlay.ShowWaitAnimation">
 <summary>
 Show close button in title bar.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Overlay.Control_OnLoad(System.Object,System.EventArgs)">
 <summary>
 Handles overlay "OnLoad" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Overlay.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders overlay.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render infobar into.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Extensibility.RibbonBarAddIn">
 <summary>
 Represents a <see cref="T:Dynamicweb.Controls.RibbonBar">RibbonBar</see> add-in.
 </summary>
 <remarks></remarks>
 <example>
 <code title="Ribbon bar addin" description="Extends ribbon with custom button" source="..\Dynamicweb\04 - Backend Building Blocks\Dynamicweb.Controls\Head\Dynamicweb.Controls.Examples\CustomPimProductEditRibbonBarAddin.cs" lang="CS"></code>
 </example>
</member>
<member name="P:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.AddInTypesByLocation">
 <summary>
 Gets the list of add-in types filtered by their target locations.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.Page">
 <summary>
 Gets an instance of <see cref="T:System.Web.UI.Page">Page</see> object that contains an add-in.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.Ribbon">
 <summary>
 Gets an instance of <see cref="T:Dynamicweb.Controls.RibbonBar">RibbonBar</see> object that contains an add-in.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.CanInstantiate">
 <summary>
 Gets value indicating whether add-in can be instantiated within the current container.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.Windows">
 <summary>
 Gets a list of all pop-up windows associated with this add-in.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.Trace">
 <summary>
 Gets a reference to a trace object that can be used to write trace information to the output.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.WindowsList">
 <summary>
 Gets the list of all pop-up windows associated with this add-in.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.#ctor(Dynamicweb.Controls.RibbonBar)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="ribbon">An instance of <see cref="T:Dynamicweb.Controls.RibbonBar">RibbonBar</see> object that contains an add-in.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.Load">
 <summary>
 Performs "Load" stage.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.Initialize">
 <summary>
 Performs "Initialize" stage.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends add-in's output to specified <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object.
 </summary>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object to send output to.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.RenderWindows(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends add-in windows' output to specified <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object.
 </summary>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object to send output to.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.AddWindow(Dynamicweb.Controls.Dialog)">
 <summary>
 Adds new pop-up window.
 </summary>
 <param name="window">An instance of <see cref="T:Dynamicweb.Controls.Dialog">Dialog</see> to add.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.RemoveWindow(Dynamicweb.Controls.Dialog)">
 <summary>
 Removes specified pop-up window.
 </summary>
 <param name="window">An instance of <see cref="T:Dynamicweb.Controls.Dialog">Dialog</see> to remove.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.RemoveWindow(System.String)">
 <summary>
 Removes specified pop-up window.
 </summary>
 <param name="windowID">An ID of the window.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.ContainsWindow(System.String)">
 <summary>
 Determines whether specified add-in contains specified pop-up window.
 </summary>
 <param name="windowID">An ID of the window.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.CreateDefaultContainer">
 <summary>
 Creates (or retrieves an existing instance) of the default add-ins group within the current <see cref="T:Dynamicweb.Controls.RibbonBar">RibbonBar</see> control.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.GetAddInTypesByPage(System.Web.UI.Page)">
 <summary>
 Retrieves the list of add-in types for the given instance of <see cref="T:System.Web.UI.Page">Page</see> object.
 </summary>
 <param name="page">An instance of <see cref="T:System.Web.UI.Page">Page</see> object to retrieve add-ins for.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.GetAddInTypesByLocation(System.String)">
 <summary>
 Retrieves the list of add-in types for a given location.
 </summary>
 <param name="path">The location path defined on an add-in.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.GetAllAddInTypes">
 <summary>
 Retrieves the list of all add-in types that are currently loaded into the app domain.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddIn.CreateAddInInstance(System.Type,Dynamicweb.Controls.RibbonBar)">
 <summary>
 Creates an instance of the specified RibbonBar add-in.
 </summary>
 <param name="addInType">The type of an add-in.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget">
 <summary>
 Provides paths to pages with the RibbonBar control.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.General">
 <summary>
 Provides paths of general purpose.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.General.AreaList">
 <summary>
 Gets the "Area list" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.General.AreaEdit">
 <summary>
 Gets the "Area edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.General.FrontendEdit">
 <summary>
 Gets the "Frontend edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.General.PageEdit">
 <summary>
 Gets the "Page edit" page.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.General.ItemEdit">
 <summary>
 Gets the "Item edit" page.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.General.ParagraphEdit">
 <summary>
 Gets the "Paragraph edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.General.ParagraphList">
 <summary>
 Gets the "Paragraph list" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.General.ImageEditor">
 <summary>
 Gets the "Image editor" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.General.UploadControl">
 <summary>
 Gets the "Upload" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.DataManagement">
 <summary>
 Provides paths for the "DataManagement" module.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.DataManagement.ConnectionEdit">
 <summary>
 Gets the "Connection edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.DataManagement.TableRowEdit">
 <summary>
 Gets the "Table row edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.DataManagement.FormEdit">
 <summary>
 Gets the "Form edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.DataManagement.PublishingEdit">
 <summary>
 Gets the "Publishing edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.DataManagement.ViewEdit">
 <summary>
 Gets the "View edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.eCom">
 <summary>
 Provides path for the "eCom" module.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.eCom.OrderList">
 <summary>
 Gets the "Order list" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.eCom.OrderEdit">
 <summary>
 Gets the "Order edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.eCom.ProductList">
 <summary>
 Gets the "Product list" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.eCom.ProductEdit">
 <summary>
 Gets the "Product edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.eCom.GroupEdit">
 <summary>
 Gets the "Group edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.eCom.ProductListEditing">
 <summary>
 Gets the "Product list editing" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.eCom.StatisticView">
 <summary>
 Gets the "Statistic view" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.UserManagement">
 <summary>
 Provides paths for the "UserManagement" module.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.UserManagement.GroupEdit">
 <summary>
 Gets the "Group edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.UserManagement.UserEdit">
 <summary>
 Gets the "User edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.PIM">
 <summary>
 Provides path for the "PIM" module.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.PIM.MultiEdit">
 <summary>
 Gets the "MultiEdit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.PIM.ProductList">
 <summary>
 Gets the "Product list" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Extensibility.RibbonBarAddInTarget.PIM.ProductEdit">
 <summary>
 Gets the "Product edit" page path.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Extensibility.RibbonBarAddInTrace">
 <summary>
 Provides tracing capabilities for the RibbonBar add-in.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Extensibility.RibbonBarAddInTrace.Messages">
 <summary>
 Gets the list of all messages currently collected.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Extensibility.RibbonBarAddInTrace.Owner">
 <summary>
 Gets the owner of this trace object.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Extensibility.RibbonBarAddInTrace.MessagesList">
 <summary>
 Gets the collection of all messages currently collected.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddInTrace.#ctor(Dynamicweb.Controls.Extensibility.RibbonBarAddIn)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="owner">The owner of this trace object.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddInTrace.Write(System.String)">
 <summary>
 Writes a single message to the output.
 </summary>
 <param name="message">Message to write.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddInTrace.Write(System.String,System.Object[])">
 <summary>
 Writes a single message specified by its format and arguments to the output.
 </summary>
 <param name="format">Message format.</param>
 <param name="args">Message arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddInTrace.ToString">
 <summary>
 Outputs all messages currently collected.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Extensibility.RibbonBarAddInTrace.FormatLabel(System.String)">
 <summary>
 Formats given label by making it width fixed.
 </summary>
 <param name="label">Label to format.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RibbonBarDataContext">
 <summary>
 Represents a data context under which the RibbonBar control is running.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.RibbonBarDataContext.Save">
 <summary>
 Occurs when the associated data object has been saved.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.RibbonBarDataContext.Delete">
 <summary>
 Occurs when the associated data object has been deleted.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarDataContext.DataSource">
 <summary>
 Gets the reference to a data object.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarDataContext.Owner">
 <summary>
 Gets the owner of this data context.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarDataContext.Page">
 <summary>
 Gets the reference to the current Dynamicweb page.
 </summary>
 <remarks>This property will return null (Nothing in Visual Basic) if page is not available under the current context.</remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarDataContext.#ctor(Dynamicweb.Controls.RibbonBar)">
 <summary>
 Initializes new instance of an object.
 </summary>
 <param name="owner">The owner of this data context.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarDataContext.Initialize(System.Object)">
 <summary>
 Initializes the data context.
 </summary>
 <param name="dataSource">Data object associated with this data context.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarDataContext.OnSave(Dynamicweb.Controls.RibbonBarDataContextEventArgs)">
 <summary>
 Raises "Save" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarDataContext.OnDelete(Dynamicweb.Controls.RibbonBarDataContextEventArgs)">
 <summary>
 Raises "Delete" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RibbonBarDataContextEventArgs">
 <summary>
 Provides information about the specified data object.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarDataContextEventArgs.Data">
 <summary>
 Gets a reference to a data object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarDataContextEventArgs.#ctor(System.Object)">
 <summary>
 Initializes new instance of an object.
 </summary>
 <param name="data">A reference to a data object.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Richselect">
 <summary>
 Represents a Richselect control.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Richselect.Height">
 <summary>
 Gets or sets the height of the select box. Default value is 30.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Richselect.Width">
 <summary>
 Gets or sets the width of the select box. Default value is 220.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Richselect.Itemheight">
 <summary>
 Gets or sets the min. height of the items for the select box. Default value is 30.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Richselect.Itemwidth">
 <summary>
 Gets or sets the width of the item list of the select box. Default value is 250.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Stretches to the width of the select box</remarks>
</member>
<member name="M:Dynamicweb.Controls.Richselect.Control_OnLoad(System.Object,System.EventArgs)">
 <summary>
 Handles Richselect "OnLoad" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Richselect.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders Richselect.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render Richselect into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Richselect.GetClientDefinition">
 <summary>
 Returns an object that is used to identify the control on the client.
 </summary>
 <returns>An object that is used to identify the control on the client.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Richselect.RenderClientObjectProperties(System.IO.TextWriter)">
 <summary>
 Renders client-side object property initialization.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RichselectItem">
 <summary>
 Represents a RichselectItem control.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RichselectItem.Html">
 <summary>
 Gets or sets the html displayed in a list control for the item represented by the ListItem.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RichselectItem.Value">
 <summary>
 Gets or sets the value associated with the ListItem.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.RichselectItem._Selected">
 <summary>
 Gets or sets a value indicating whether the item is selected.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.RichselectItem._OnClick">
 <summary>
 Gets or sets a client side click event handler.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RichselectItem.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders RichselectItem.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render RichselectItem into.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RoundedFrameColorScheme">
 <summary>
 Represents a color scheme of the rounded frame control.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.RoundedFrameColorScheme.Default">
 <summary>
 Default color scheme.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.RoundedFrameColorScheme.Grey">
 <summary>
 Grey color scheme.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.RoundedFrameColorScheme.Blue">
 <summary>
 Blue color scheme.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RoundedFrame">
 <summary>
 Wraps content with a rounded frame.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RoundedFrame.Width">
 <summary>
 Gets or sets the width of the frame.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RoundedFrame.Height">
 <summary>
 Gets or sets the height of the frame.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RoundedFrame.Title">
 <summary>
 Gets or sets frame title.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RoundedFrame.TranslateTitle">
 <summary>
 Gets or sets value indicating whether title must be translated.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RoundedFrame.Hint">
 <summary>
 Gets or sets frame title hint (can only be used together with title).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RoundedFrame.CssClass">
 <summary>
 Gets or sets the name of the custom CSS class to be applied to frame content.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RoundedFrame.CanCollapse">
 <summary>
 Gets or sets value indicating whether frame content can be collapsed by clicking on frame title.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RoundedFrame.IsCollapsed">
 <summary>
 Gets or sets value indicating whether frame content is collapsed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RoundedFrame.ColorScheme">
 <summary>
 Gets or sets the name of the custom color theme applied to the frame.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RoundedFrame.ClientInstanceName">
 <summary>
 Gets the unique name of the client-side object instance variable.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RoundedFrame.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends chart content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives chart control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RoundedFrame.RenderClientObject(System.IO.TextWriter)">
 <summary>
 Renders client-side object.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RoundedFrame.LoadResources">
 <summary>
 Loads control resources.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RulesEditor">
 <summary>
 Represents a rules expression editor.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RulesEditor.ClientInstanceName">
 <summary>
 Gets the unique name of the client-side object instance variable.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RulesEditor.Rules">
 <summary>
 Gets or sets the name of the request key used to retrieve values from the form/query-string.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RulesEditor.SimpleMode">
 <summary>
 Gets or sets is only simple rule combinations are allowed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RulesEditor.RulesRequestID">
 <summary>
 Gets the rules request ID.
 </summary>
 <value>
 The rules request ID.
 </value>
</member>
<member name="P:Dynamicweb.Controls.RulesEditor.Width">
 <summary>
 Gets or sets the width of the editable area.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RulesEditor.Height">
 <summary>
 Gets or sets height of the editable area.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RulesEditor.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter">System.Web.UI.HtmlTextWriter</see> object, that receives control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RulesEditor.RenderClientObject(System.IO.TextWriter)">
 <summary>
 Renders client-side object.
 </summary>
 <param name="output">Output stream.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RulesEditor.LoadResources">
 <summary>
 Loads control resources.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RulesEditor.WriteRules(System.Collections.Generic.IList{Dynamicweb.Modules.Searching.Rules.RuleField})">
 <summary>
 Returns the JSON block containing all the recognition rules available in the system.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TabControl">
 <summary>
		Draws a DW TabPage control
 </summary>
</member>
<member name="P:Dynamicweb.Controls.TabControl.Width">
 <summary>
		Sets the width of the control
 </summary>
</member>
<member name="P:Dynamicweb.Controls.TabControl.Tabs">
 <summary>
 
 </summary>
 <value></value>
 <remarks>
 </remarks>
 <history>
 	[mwl]	02-05-2006	Created
 </history>
</member>
<member name="P:Dynamicweb.Controls.TabControl.SelectedTab">
 <summary>
 
 </summary>
 <value></value>
 <remarks>
 </remarks>
 <history>
 	[mwl]	02-05-2006	Created
 </history>
</member>
<member name="P:Dynamicweb.Controls.TabControl.TranslateTabs">
 <summary>
 
 </summary>
 <value></value>
 <remarks>
 </remarks>
 <history>
 	[jea]	22-06-2009	Created
 </history>
</member>
<member name="T:Dynamicweb.Controls.TemplatedDropDownList">
 <summary>
 Represents a custom drop-down list.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.TemplatedDropDownList.SelectedIndexChanged">
 <summary>
 Occurs when selected index has been changed.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.TemplatedDropDownList.ItemDataBound">
 <summary>
 Occurs after an item in the drop-down list is data-bound but before it is rendered on the page.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.ItemTemplate">
 <summary>
 Gets or sets the ITemplate that defines how items in the drop-down list are displayed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.BoxTemplate">
 <summary>
 Gets or sets the ITemplate that defines how selected item in the drop-down list is displayed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.SelectedItemIndex">
 <summary>
 Gets or sets the 0-based index of the item that is currently selected.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.AutoPostBack">
 <summary>
 Gets or sets a value indicating whether a postback to the server automatically occurs when the user changes the drop-down list selection. 
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.ClientInstanceName">
 <summary>
 Gets the name of the object instance that can be used to refer to the drop-down list from the client script.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.OnClientSelectedIndexChanged">
 <summary>
 Gets or sets the Javascript handler which is executed when user changes the drop-down list selection.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.OnClientExpandedStateChanged">
 <summary>
 Gets or sets the Javascript handler which is executed when drop-down list is expanded or collapsed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.OnClientDataExchange">
 <summary>
 Gets or sets the Javascript handler which is executed at the time when 
 the data between drop-down list item and selected item can be exchanged.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.ItemsContainer">
 <summary>
 Get the reference to a &lt;div&gt; element that contains drop-down list items.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.SelectedItemContainer">
 <summary>
 Get the reference to a &lt;div&gt; element that contains currently selected item.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.ExpandableAreaWidth">
 <summary>
 Gets or sets the width of the expandable area.
 </summary>
 <remarks>The default value is "auto" (meaning that the area is wide enough to accept the content).</remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.ExpandableAreaHeight">
 <summary>
 Gets or sets the height of the expandable area.
 </summary>
 <remarks>The default value is 250 pixels (declared in the control stylesheet).</remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.ControlsCount">
 <summary>
 Gets or sets the controls count creatd during the last call to "CreateChildControls".
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.ControlWidth">
 <summary>
 Gets the width (in pixels) of the drop-down list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownList.ControlHeight">
 <summary>
 Gets the height (in pixels) of the drop-down list.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.LoadResources">
 <summary>
 Loads control resources.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Processes postback data.
 </summary>
 <param name="postDataKey">The key identifier for the control.</param>
 <param name="postCollection">The collection of all incoming name values.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.RaisePostDataChangedEvent">
 <summary>
 Signals the server control to notify the ASP.NET application that the state of the control has changed.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.RaisePostBackEvent(System.String)">
 <summary>
 Enables a server control to process an event raised when a form is posted to the server. 
 </summary>
 <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.OnSelectedIndexChanged(System.EventArgs)">
 <summary>
 Fires when user changes the selection in the drop-down list.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.OnItemDataBound(Dynamicweb.Controls.TemplatedDropDownListItemEventArgs)">
 <summary>
 Fires after an item in the drop-down list is data-bound but before it is rendered on the page.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.OnLoad(System.EventArgs)">
 <summary>
 Fires when control is loaded on the page.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.CreateChildControls(System.Collections.IEnumerable,System.Boolean)">
 <summary>
 Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls 
 they contain in preparation for posting back or rendering.
 </summary>
 <param name="dataSource">Value indicating whether data-binding process has been initiated.</param>
 <param name="dataBinding">Data source.</param>
 <returns>Number of controls created.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Sends server control content to a provided HtmlTextWriter object, which writes the content to be rendered on the client.
 </summary>
 <param name="writer">The HtmlTextWriter object that receives the server control content. </param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.CreateDropDownArea">
 <summary>
 Creates a &lt;div&gt; element that holds drop-down list contents.
 </summary>
 <returns>Created element.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.CreateBox">
 <summary>
 Creates an &lt;a&gt; element that holds always visible selection box.
 </summary>
 <returns>Created element.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.CreateClearFix">
 <summary>
 Creates &lt;div&gt; element that cancels floating.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.CreateItemsContainer">
 <summary>
 Creates a &lt;div&gt; element that holds drop-down list items.
 </summary>
 <returns>Created element.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.CreateSingleItemContainer(System.Int32)">
 <summary>
 Creates a &lt;li&gt; element that holds single drop-down list item.
 </summary>
 <param name="itemIndex">0-based drop-down item index.</param>
 <returns>Created element.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.CreateSelectedItemIndexField">
 <summary>
 Creates an &lt;input&gt; element that holds an 0-based index of currently selected item.
 </summary>
 <returns>Created element.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.SetDimensions(System.Web.UI.HtmlControls.HtmlGenericControl,System.Int32,System.Int32)">
 <summary>
 Sets dimensions on a specified element.
 </summary>
 <param name="control">Element to set dimensions on.</param>
 <param name="width">Width (in pixels).</param>
 <param name="height">Height (in pixels).</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.GetClientObjectInstance">
 <summary>
 Creates an instance of the object that can be used to refer to the drop-down list via Javascript (using ClientInstanceName).
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.ManageClientEvent(System.Text.StringBuilder,System.String,System.String)">
 <summary>
 Manages client-side object events.
 </summary>
 <param name="output">An instance of the StringBuilder to apply content to.</param>
 <param name="eventHandler">A string representing an event handler.</param>
 <param name="managingMethod">A method that is either adds or removes specified event handler.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownList.EnsureSelectedItemIsInRange(System.Int32)">
 <summary>
 Ensures that specified selected item index is in range of all drop-down list items.
 </summary>
 <param name="itemsCount">Drop-down list items count.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableGridRowEventArgs">
 <summary>
 Represents an EditableGrid row-related event arguments.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGridRowEventArgs.Row">
 <summary>
 Gets an instance of the GridViewRow whici is associated with this object.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGridRowEventArgs.RowID">
 <summary>
 Gets the ID of the row.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGridRowEventArgs.#ctor">
 <summary>
 Creates as new instance of a class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGridRowEventArgs.#ctor(System.Web.UI.WebControls.GridViewRow)">
 <summary>
 Creates as new instance of a class.
 </summary>
 <param name="row">An instance of the GridViewRow to be associated with this object.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGridRowEventArgs.#ctor(System.Int32,System.Web.UI.WebControls.GridViewRow)">
 <summary>
 Creates as new instance of a class.
 </summary>
 <param name="rowID">The ID of the row.</param>
 <param name="row">An instance of the GridViewRow to be associated with this object.</param>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.FileManager.FixFieldName">
 <summary>
 Gets or sets if the fieldname should be fiex. If set to true, it replaces “/” with “_” in the name of the input.
 </summary>
 <remarks>Default is false</remarks>
</member>
<member name="P:Dynamicweb.Controls.FileManager.ShowPreview">
 <summary>
 Gets or sets if preview of selected file should be possible
 </summary>
 <remarks>Default is true</remarks>
</member>
<member name="P:Dynamicweb.Controls.FileManager.AllowUpload">
 <summary>
 Gets or sets if upload should be possible
 </summary>
 <remarks>Default is false</remarks>
</member>
<member name="P:Dynamicweb.Controls.FileManager.OnChange">
 <summary>
 Gets or sets javascript function to be called when selection is changed.
 </summary>
</member>
<member name="P:Dynamicweb.Controls.FileManager.ShowNothingSelectedOption">
 <summary>
 Gets or sets if nothing selected option should be in the file list
 </summary>
 <remarks>Default is true</remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableGrid">
 <summary>
 Represents an editable grid.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableGrid.DraggableColumns">
 <summary>
 Represents a type of the row draggable behaviour.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.EditableGrid.DraggableColumns.First">
 <summary>
 Only first column is draggable.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.EditableGrid.DraggableColumns.All">
 <summary>
 All columns are draggable.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.EditableGrid.DraggableColumns.Last">
 <summary>
 Only last column is draggable.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableGrid.BlankContainer">
 <summary>
 Represents a blank naming container (needed when copying original control hierarchy).
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.BlankContainer.#ctor">
 <summary>
 Creates a new instance of a class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.BlankContainer.#ctor(System.String)">
 <summary>
 Creates a new instance of a class.
 </summary>
 <param name="controlID">The ID of the control.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableGrid.PostedRow">
 <summary>
 Represents a row information retrieved during the postback.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.PostedRow.RowID">
 <summary>
 Gets the ID of the row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.PostedRow.IsNew">
 <summary>
 Gets a value indicating whether this row was dynamically added since last page load.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.PostedRow.#ctor(System.String)">
 <summary>
 Creates a new instance of a class.
 </summary>
 <param name="valueItem">The string representing a posted row.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.EditableGrid.PostedRowCollection">
 <summary>
 Represents a collection of posted rows.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.PostedRowCollection.ParseItems(System.String)">
 <summary>
 Retrieves a posted rows information from the specified hidden field value.
 </summary>
 <param name="rowsValue">String representing posted rows.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.PostedRowCollection.GetNewRows">
 <summary>
 Retrieves a collection of rows which are marked as "New".
 </summary>
 <returns>A collection of rows which are marked as "New".</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.PostedRowCollection.IsNewRow(Dynamicweb.Controls.EditableGrid.PostedRow)">
 <summary>
 Retrieves a value indicating whether specified row is marked as "New".
 </summary>
 <param name="row">Row to examine.</param>
 <returns>Value indicating whether specified row is marked as "New".</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.PostedRowCollection.IsExistingRow(Dynamicweb.Controls.EditableGrid.PostedRow)">
 <summary>
 Retrieves a value indicating whether specified row exists in collection.
 </summary>
 <param name="row">Row to examine.</param>
 <returns>Value indicating whether specified row exists in collection.</returns>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.EditableGrid.NewRowInitialize">
 <summary>
 Asynchronously fired when a row which is being added to the grid needs to be initialized.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.EditableGrid.RestoreRowState">
 <summary>
 Fired on the post back when the state of the row needs to be restored.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.AllowAddingRows">
 <summary>
 Gets or sets a value indicating whether rows adding is allowed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.AllowDeletingRows">
 <summary>
 Gets or sets a value indicating whether rows deleting is allowed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.AllowSortingRows">
 <summary>
 Gets or sets a value indicating whether rows sorting is allowed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.EnableSmartNavigation">
 <summary>
 Gets or sets a value indicating whether to enable "smart navigation" feature.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.NoRowsMessage">
 <summary>
 Gets or sets a message which is displayed when there are no rows in the grid.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.AddNewRowMessage">
 <summary>
 Gets or sets a message which is displayed as a prompt for creating a new row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.DraggableColumnsMode">
 <summary>
 Gets or sets a grid row draggable mode.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.ClientInstanceName">
 <summary>
 Gets the Javascript object instance name for current grid.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.RowIDAttribute">
 <summary>
 Gets a row ID attribute name.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.IsProcessingAsyncRequest">
 <summary>
 Gets a value indicating whether grid is processing asynchronous request.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.CurrentRowID">
 <summary>
 Gets or sets a current row ID.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.EditableGrid.PostedRows">
 <summary>
 Gets a collection of the rows posted during the last post back.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.OnInit(System.EventArgs)">
 <summary>
 Raises the Dynamicweb.Controls.EditableGrid.Init event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.OnPagePreLoad(System.Object,System.EventArgs)">
 <summary>
 Raises the Dynamicweb.Controls.EditableGrid.PagePreLoad event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.OnLoad(System.EventArgs)">
 <summary>
 Raises the Dynamicweb.Controls.EditableGrid.Load event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.OnRowCreated(System.Web.UI.WebControls.GridViewRowEventArgs)">
 <summary>
 Raises the Dynamicweb.Controls.EditableGrid.RowCreated event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders grid.
 </summary>
 <param name="writer">The instance of System.Web.UI.HtmlTextWriter to render grid into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.CreateChildControls(System.Collections.IEnumerable,System.Boolean)">
 <summary>
 Creates the control hierarchy used to render Grid control using the specified data source.
 </summary>
 <param name="dataSource">Control data source.</param>
 <param name="dataBinding">Value indicating whether data binding is in progress.</param>
 <returns>The number of child controls created (or -1 if there was no need to create any child controls).</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.RaisePostBackEvent(System.String)">
 <summary>
 Processes grid events.
 </summary>
 <param name="eventArgument">The event argument.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.GetRowID(System.Web.UI.WebControls.GridViewRow)">
 <summary>
 Retrieves the ID of the given row.
 </summary>
 <param name="row">The row which ID should be retrieved.</param>
 <returns>The ID of the row.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.GetRowOutput(System.Web.UI.WebControls.GridViewRow,System.Int32)">
 <summary>
 Retrieves a complete HTML output of the specified row.
 </summary>
 <param name="row">The instance of a GridViewRow to render.</param>
 <param name="currentRowID">The current row ID.</param>
 <returns>Row output.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.GetRowByRowID(System.Int32)">
 <summary>
 Retrieves the row by its ID.
 </summary>
 <param name="rowID">The ID of the row.</param>
 <returns>Found row or Nothing if the row was not found.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.FindTable">
 <summary>
 Finds a reference to a System.Web.UI.WebControl.Table associated with the grid.
 </summary>
 <returns>Found table or Nothing if table was not found.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.CreateNewRow(System.Web.UI.WebControls.DataControlRowType)">
 <summary>
 Creates new row.
 </summary>
 <param name="type">Row type.</param>
 <returns>Created row.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.CreateNewRow(System.Web.UI.WebControls.DataControlRowType,System.Int32)">
 <summary>
 Creates new row.
 </summary>
 <param name="type">Row type.</param>
 <param name="rowIndex">Row index.</param>
 <returns>Created row.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.OnNewRowInitialize(Dynamicweb.Controls.EditableGridRowEventArgs)">
 <summary>
 Raises the Dynamicweb.Controls.EditableGrid.NewRowInitialize event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.OnRestoreRowState(Dynamicweb.Controls.EditableGridRowEventArgs)">
 <summary>
 Raises the Dynamicweb.Controls.EditableGrid.RestoreRowState event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.InitializeHeader(System.Web.UI.WebControls.GridViewRow)">
 <summary>
 Initializes the header row.
 </summary>
 <param name="row">Row to initialize.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.InitializeDataRow(System.Web.UI.WebControls.GridViewRow)">
 <summary>
 Initializes the data row.
 </summary>
 <param name="row">Row to initialize.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.InitializeFooter(System.Web.UI.WebControls.GridViewRow)">
 <summary>
 Initializes footer row.
 </summary>
 <param name="row">Row to initialize.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.SetStyles">
 <summary>
 Initializes grid styles.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.RestoreControlHierarchy(System.Web.UI.WebControls.GridView)">
 <summary>
 Builds a control hierarchy based on the current page.
 </summary>
 <param name="grid">The instance of the GridView to be placed into the created hierarchy.</param>
 <returns>Created hierarchy.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.GetModifiedDataSource(System.Collections.IEnumerable,System.Boolean)">
 <summary>
 Retrieves a new datasource according to dynamically changed rows count.
 </summary>
 <param name="dataSource">Initial datasource object.</param>
 <param name="isDataBinding">Value indicating whether databinding takes place.</param>
 <returns>Modified datasource.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.RenderAddedRow(System.Web.UI.HtmlTextWriter,System.Web.UI.Control)">
 <summary>
 Fired when row is being rendered.
 </summary>
 <param name="writer">The instance of System.Web.UI.HtmlTextWriter to render row into.</param>
 <param name="container">The instance of a GridViewRow which is being rendering.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.ExtractRow(System.String)">
 <summary>
 Retrieves the row output from the page output.
 </summary>
 <param name="output">The complete HTML of the page.</param>
 <returns>Extracted row.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.ExtractScripts(System.String,System.String)">
 <summary>
 Retrieves the row output with separated script clocks from HTML murk-up.
 </summary>
 <param name="pageOutput">The complete HTML of the page.</param>
 <param name="rowOutput">The HTML of the row</param>
 <returns>Extracted row.</returns>
 <remarks>Client-side scripts are cut from the row mark-up for appending as HTML comments (they will be parsed and evaluated on the client).</remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.GetScriptBlocks(System.String,System.Boolean)">
 <summary>
 Retrieves all script blocks from the page output.
 </summary>
 <param name="output">The complete HTML of the page.</param>
 <param name="stripTags">Value indicating whether to strip &lt;script&gt; tags.</param>
 <returns>An array of extracted script blocks.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.GetWrappedValidatorsDeclaration(System.String[])">
 <summary>
 Searches within specified list of Javascript code blocks and retrieves the wrapped validators declaration (if found).
 </summary>
 <param name="blocks">A list of Javascript code blocks to search in.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.GetValidatorsReferencingBlocks(System.String[])">
 <summary>
 Gets a list of Javascript code blocks that references to a page validators.
 </summary>
 <param name="blocks">A list of Javascript code blocks to process.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.GetValidatorIDs(System.String[],System.Boolean)">
 <summary>
 Gets the list of validator IDs parsed from the list of Javascript code blocks.
 </summary>
 <param name="blocks">A list of Javascript code blocks to search in.</param>
 <param name="quote">Value indicating whether to enclose each ID in a single quotes.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.IsValidatorsDeclarationBlock(System.String)">
 <summary>
 Gets value indicating whether specified Javascript code block declares page validators.
 </summary>
 <param name="block">Javascript code block to examine.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.RowFound(System.Web.UI.WebControls.TableRow)">
 <summary>
 Internally used to select row with specified ID from the others.
 </summary>
 <param name="row">Row to examine.</param>
 <returns>Value indicating whether row ID matches with searching ID.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.CreateEmptyTable">
 <summary>
 Creates as new child table for current grid.
 </summary>
 <returns>Created table.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.CreateNotFoundRow(System.Boolean)">
 <summary>
 Creates a new row with "Not found" messsage.
 </summary>
 <param name="showRow">Value indicating whether to show the row.</param>
 <returns>Created row.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.EditableGrid.GetRowControlID(System.Int32)">
 <summary>
 Retrieves the new ID for the row control.
 </summary>
 <param name="rowID">The ID of the row.</param>
 <returns>Generated ID.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.GroupBox">
 <summary>
 Draws a DW group box panel
 </summary>
 
</member>
<member name="P:Dynamicweb.Controls.GroupBox.Title">
 <summary>
		Panel title
 </summary>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[mwl]	02-05-2006	Created
 </history>
</member>
<member name="M:Dynamicweb.Controls.Icons.Icon.FlagPath(System.String,Dynamicweb.Controls.Icons.Icon.Size)">
 <summary>
 Gets the path to the national flag icon by the specified two-letter ISO country code.
 </summary>
 <param name="countryCode">Two-letter ISO country code.</param>
 <param name="size">Icon size.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Infobar">
 <summary>
 Represents an infobar.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Infobar.Message">
 <summary>
 Message to display.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Infobar.Title">
 <summary>
 Tooltip to display when mouse is over infobar.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Infobar.Action">
 <summary>
 Javascript action when clicking the infobar.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Infobar.OnClientClick">
 <summary>
 Javascript action when clicking the infobar.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Infobar.Type">
 <summary>
 Type of message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Infobar.ImagePath">
 <summary>
 Path of icon used - can be used to overwrite the built-in icons in the Type property
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Infobar.UseInlineStyles">
 <summary>
 Path of icon used - can be used to overwrite the built-in icons in the Type property
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Infobar.TranslateMessage">
 <summary>
 Gets or sets value indicating whether to automatically translate the message.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Infobar.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders infobar.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render infobar into.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Infobar.MessageType">
 <summary>
 Represents an infobar message type.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Infobar.MessageType.Warning">
 <summary>
 Warning message.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Infobar.MessageType.Information">
 <summary>
 Information message.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.Infobar.MessageType.Error">
 <summary>
 Error message.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.LinkManager">
 <summary>
		Generates a link chooser field, with an associated chooser dialog.
 </summary>
</member>
<member name="P:Dynamicweb.Controls.LinkManager.EnablePageSelector">
 <summary>
 Gets or sets a value indicating whether the page selector is enabled.
 </summary>
 <value><c>true</c> if page selector enabled; otherwise, <c>false</c>.</value>
</member>
<member name="P:Dynamicweb.Controls.LinkManager.DisableTyping">
 <summary>
 Gets or sets a value indicating whether typing is disabled.
 </summary>
 <value>
   <c>true</c> if typing is disabled; otherwise, <c>false</c>.
 </value>
</member>
<member name="P:Dynamicweb.Controls.LinkManager.Value">
 <summary>
		Sets and returns an URL as a String.
		Can return a # reference if not DisableParagraphSelector is False.
		Can return a /Files if not DisableFileArchive is False.
 </summary>
 <returns></returns>
 <remarks>
 </remarks>
</member>
<member name="P:Dynamicweb.Controls.LinkManager.DisableParagraphSelector">
 <summary>
		Permits the end-user to select a paragraph.
 </summary>
 <value></value>
 <remarks>
 </remarks>
</member>
<member name="P:Dynamicweb.Controls.LinkManager.DisableFileArchive">
 <summary>
		Permits the end-user to select a element in the file archive
 </summary>
 <value></value>
 <remarks>
 </remarks>
</member>
<member name="P:Dynamicweb.Controls.LinkManager.AreaID">
 <summary>
		Specifies the current area id.
 </summary>
 <value></value>
 <remarks>
 </remarks>
</member>
<member name="P:Dynamicweb.Controls.LinkManager.ClientAfterSelectCallback">
 <summary>
 Name of the callback function to be executed upon the completion of the request.
 </summary>
 <remarks>
 The control id and selected model will be the fuction parameters
 </remarks>
 <example>
 onLinkManagerSelect(controlId, model);
 </example>
</member>
<member name="M:Dynamicweb.Controls.LinkManager.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders the control to the specified HTML writer.
 </summary>
 <param name="writer">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the control content.</param>
</member>
<member name="M:Dynamicweb.Controls.LinkManager.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 When implemented by a class, processes postback data for an ASP.NET server control.
 </summary>
 <param name="postDataKey">The key identifier for the control.</param>
 <param name="postCollection">The collection of all incoming name values.</param>
 <returns>
 true if the server control's state changes as a result of the postback; otherwise, false.
 </returns>
</member>
<member name="M:Dynamicweb.Controls.LinkManager.RaisePostDataChangedEvent">
 <summary>
 When implemented by a class, signals the server control to notify the ASP.NET application that the state of the control has changed.
 </summary>
</member>
<member name="T:Dynamicweb.Controls.ListRowExpandEventArgs">
 <summary>
 Represents an event arguments to be sent when RowExpand event is occured.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRowExpandEventArgs.Row">
 <summary>
 Gets or sets the row which has been expanded.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRowExpandEventArgs.ChildList">
 <summary>
 Gets or sets the child list to be displayed under the expanded row.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.List">
 <summary>
 Represents a list of items.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.List.SessionRows">
 <summary>
 Represents a list rows stored in a session.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.SessionRows.CurrentID">
 <summary>
 Gets or sets the current row inner ID.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.SessionRows.Items">
 <summary>
 Gets or sets a list rows for current instance.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.SessionRows.#ctor(System.String)">
 <summary>
 Creates a new instance of a class.
 </summary>
 <param name="controlID">The id of the control which is using session items.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.SessionRows.Save">
 <summary>
 Saves all current items in a session.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.SessionRows.Add(Dynamicweb.Controls.ListRow)">
 <summary>
 Adds specified row to the session.
 </summary>
 <param name="row">Row to add.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.SessionRows.Clear">
 <summary>
 Clears session.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.SessionRows.GetSessionName(System.String)">
 <summary>
 Retrieves a session item name for current instance.
 </summary>
 <param name="subName">Additional sub item name to be added.</param>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.List.RowExpand">
 <summary>
 Ajax event which is fired when list row is being expanded.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.List.Sort">
 <summary>
 Occurs when the list is being sorted.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.List.FiltersApplied">
 <summary>
 Occurs when all filters are applied to the list rows.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.List.PageIndexChanging">
 <summary>
 Occurs when the page index is changing.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.List.PageIndexChanged">
 <summary>
 Occurs when page index has been changed.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.Columns">
 <summary>
 Gets the collection of list columns.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.Filters">
 <summary>
 Gets the collection of list filters.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.OnClientCollapse">
 <summary>
 Gets or sets the client site script that fires when the filters are collapsed (hidden)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.DoBlinkCollapseButton">
 <summary>
 If set, the CollapseButton will blink, notifying the user of e.g. non-standard filter settings
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.OnClientUnCollapse">
 <summary>
 Gets or sets the client site script that fires when the filters are uncollapsed (shown)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.ShowCollapseButton">
 <summary>
 When set, its possible to hide and show the filter area
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.StartCollapsed">
 <summary>
 When set, the filter area starts collapsed
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Set ShowCollapseButton to true to be able to show the filter area</remarks>
</member>
<member name="P:Dynamicweb.Controls.List.StretchContent">
 <summary>
 Gets or sets value indicating whether to stretch the list content to fit the parent container.
 </summary>
 <value></value>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.HasFilters">
 <summary>
 Gets value indicating whether list has any filters attached.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.HandlePagingManually">
 <summary>
 When set to true only fill the list with one page and set the page number manually
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.HandleSortingManually">
 <summary>
 When set to true only fill the list by already sorted collection
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.Title">
 <summary>
 Title of the list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.Footer">
 <summary>
 Footer of the list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.ContextMenuID">
 <summary>
 ID of Dynamicweb.Controls.Contextmenu to display on right click.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.NoItemsMessage">
 <summary>
 Message to display if the list has no items.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.Height">
 <summary>
 Width of the column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.Width">
 <summary>
 Width of the list.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.PageSize">
 <summary>
 Number of items per page.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.Count">
 <summary>
 Number of items in list - if set shown in title.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.PageCount">
 <summary>
 Number of pages.
 </summary>
 <remarks>Calculated.</remarks>
</member>
<member name="P:Dynamicweb.Controls.List.PageNumber">
 <summary>
 Current page.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.IsBeingSorted">
 <summary>
 Indicates whether this List is being sorted.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.FilterBy">
 <summary>
 Column to filter by.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.FilterString">
 <summary>
 Value to filter by.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.ItemCount">
 <summary>
 Number of items in total. Calculated based on added items, but can be overruled if only
 some items are added due to performance. PageNumber property to calculate how many to load.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.ShowTitle">
 <summary>
 Gets or sets value indicating whether to show list title.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.ShowPaging">
 <summary>
 Gets or sets value indicating whether to show paging area.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.ShowHeader">
 <summary>
 Gets or sets value indicating whether to show list header.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.ShowFooter">
 <summary>
 Gets or sets value indicating whether to show list footer.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.TranslateTitle">
 <summary>
 Gets or sets value indicating whether to translate the list title.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.AllowMultiSelect">
 <summary>
 Gets or sets value indicating whether to allow multi-select functionality.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.Personalize">
 <summary>
 Gets or sets value indicating whether to enable personal settings.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.RenderWithDiv">
 <summary>
 Gets or sets value indicating whether to render the list in divs for the new UI.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.VisibleColumns">
 <summary>
 Gets all visible columns of the current list.
 </summary>
 <value></value>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.SelectedRows">
 <summary>
 Gets selected rows.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.Selection">
 <summary>
 Gets or sets a Hashtable object which represents all selecter rows on all pages.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.SelectionSessionEntryName">
 <summary>
 Gets the session entry name for a row selection.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.HasExpandableRows">
 <summary>
 Gets value indicating whether list has expandable rows.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.LoadedRows">
 <summary>
 Gets an instance of a class which represents list rows loaded in a session.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.SortColumnIndex">
 <summary>
 Gets the column index (from the postback) that this list was sorted by.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.SortDirection">
 <summary>
 Gets the sort direction (from the postback).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.UseCountForPaging">
 <summary>
 If set to True, the List will show number of rows and pages according to the Count Property
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.ShowCount">
 <summary>
 If set to True, the List will show number of rows and pages according to the number of Rows added
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.#ctor">
 <summary>
 Initializes a new instance of a class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.Clear">
 <summary>
 Removes all rows from the list.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.AddRow(Dynamicweb.Controls.ListRow)">
 <summary>
 Adds a row to the list.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.RemoveRow(Dynamicweb.Controls.ListRow)">
 <summary>
 Removes a row from the list.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.RemoveRowAt(System.Int32)">
 <summary>
 Removes the row at the specified index
 </summary>
 <param name="index"></param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.RemoveRowRange(System.Int32,System.Int32)">
 <summary>
 Removes a range of Rows from the List
 </summary>
 <param name="startIndex">The zero based starting index of Rows to remove</param>
 <param name="count">The number of Rows to remove</param>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.List.RowCount">
 <summary>
 Gets the current count of rows in this List
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.OnInit(System.EventArgs)">
 <summary>
 Handles list "Init" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.OnLoad(System.EventArgs)">
 <summary>
 Handles list "Load" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.OnPreRender(System.EventArgs)">
 <summary>
 Handles list "PreRender" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders list.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render list into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.OnFiltersApplied(System.EventArgs)">
 <summary>
 Fires <see cref="E:Dynamicweb.Controls.List.FiltersApplied">FiltersApplied</see> event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.OnSort(Dynamicweb.Controls.ListSortEventArgs)">
 <summary>
 Fires <see cref="E:Dynamicweb.Controls.List.Sort">Sort</see> event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.OnPageIndexChanging(System.EventArgs)">
 <summary>
 Fires <see cref="E:Dynamicweb.Controls.List.PageIndexChanging">PageIndexChanging</see> event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.OnPageIndexChanged(System.EventArgs)">
 <summary>
 Fires <see cref="E:Dynamicweb.Controls.List.PageIndexChanged">PageIndexChanged</see> event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.RenderHeaderRow(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders list header.
 </summary>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> to render contents into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.RenderColumns(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders list columns.
 </summary>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> to render contents into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.GetSelectedRows">
 <summary>
 Retrieves all selected rows from current page.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.GetSelectedRowsFromAllPages">
 <summary>
 Retrieves all selected rows from all pages.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.GetViewFrame">
 <summary>
 Retrieves an array represeing a current view frame of the list.
 </summary>
 <returns></returns>
 <remarks>The first element in resulting array is a 1-based index of starting item, the second element - a 1-based index of ending item.</remarks>
</member>
<member name="M:Dynamicweb.Controls.List.RenderRows(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders list rows.
 </summary>
 <param name="output">The instance of the HtmLTextWriter to render list rows into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.InitializeFilters">
 <summary>
 Initialized all filters that hasn't been initialized yet.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.InitializeColumns">
 <summary>
 Initialized all columns that hasn't been initialized yet.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.ApplyAllFilters">
 <summary>
 Applies all existing filters to specified rows collection.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.CompareFilters(Dynamicweb.Controls.ListFilter,Dynamicweb.Controls.ListFilter)">
 <summary>
 Compares two filters by their priority values.
 </summary>
 <param name="f1">First filter.</param>
 <param name="f2">Second filter.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.RenderFilters(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders all existing filters to specified HtmlTextWriter.
 </summary>
 <param name="writer">An instance of HtmlTextWriter to render filters into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.RenderSortingMenu(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders "Sorting" context-menu.
 </summary>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object to render contents into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.RenderColumnSelectorMenu(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders "Column selector" context-menu.
 </summary>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object to render contents into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.CreateContextMenuButton(System.String,System.String,System.String,Dynamicweb.Core.UI.Icons.KnownIcon,System.String)">
 <summary>
 Creates new context-menu button.
 </summary>
 <param name="id">Button ID.</param>
 <param name="action">"OnClick" action.</param>
 <param name="imagePath">Path to the button image.</param>
 <param name="text">Button text.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.RaisePostBackEvent(System.String)">
 <summary>
 Processes list events.
 </summary>
 <param name="eventArgument">The event argument.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.SortRows(Dynamicweb.Controls.ListColumn,Dynamicweb.Controls.ListSortDirection)">
 <summary>
 Sorts list rows.
 </summary>
 <param name="column">A reference to a <see cref="T:Dynamicweb.Controls.ListColumn">ListColumn</see> object to sort rows by.</param>
 <param name="direction">Sorting direction.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.SortRows(System.Int32,Dynamicweb.Controls.ListSortDirection)">
 <summary>
 Sorts list rows.
 </summary>
 <param name="columnIndex">Zero-based index of the column to sort rows by.</param>
 <param name="direction">Sorting direction.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.SortRows(System.Int32,Dynamicweb.Controls.ListSortDirection,System.Boolean)">
 <summary>
 Sorts list rows.
 </summary>
 <param name="columnIndex">Zero-based index of the column to sort rows by.</param>
 <param name="direction">Sorting direction.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.ProcessSorting(System.String)">
 <summary>
 Processes "Sort" event.
 </summary>
 <param name="eventArgument">Event argument.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.ProcessRowExpandEvent(System.String)">
 <summary>
 Processes "RowExpand" event.
 </summary>
 <param name="eventArgument">Event argument.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.ProcessPageIndexChangedEvent(System.String)">
 <summary>
 Processes "PageIndexChanged" event.
 </summary>
 <param name="eventArgument">Event argument.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.List.ProcessPageIndexChangingEvent(System.String)">
 <summary>
 Processes "PageIndexChanged" event.
 </summary>
 <param name="eventArgument">Event argument.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListColumn">
 <summary>
 Represents a list column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListColumn.EnableSorting">
 <summary>
 Activates sorting and filter options for the column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListColumn.Width">
 <summary>
 Width of the column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListColumn.WidthPercent">
 <summary>
 Width of the column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListColumn.Name">
 <summary>
 Name of the header.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListColumn.TranslateName">
 <summary>
 Transalte the name.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListColumn.Owner">
 <summary>
 Gets the reference to a <see cref="T:Dynamicweb.Controls.List">Dynamicweb.Controls.List</see> control that this column belogs to.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListColumn.HideOnTablet">
 <summary>
 Gets or sets value indicating whether to hide column on tablet resolution(1280x768)
 </summary>
 <returns>The value indicating whether to hide column</returns>
 <remarks>If List has column personalization property will have no effect</remarks>
</member>
<member name="M:Dynamicweb.Controls.ListColumn.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders list column.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render list column into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListColumn.SetSortedState(Dynamicweb.Controls.ListSortDirection)">
 <summary>
 Sets the marker that indicates that the list was sorteb by this column.
 </summary>
 <param name="direction">Sort direction.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListColumn.ClearSortedState">
 <summary>
 Clears "Sorted" marker.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RowValue">
 <summary>
 Represents a value of a row cell.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RowValue.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RowValue.#ctor(System.Object)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="value">Row value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RowValue.Add(System.String)">
 <summary>
 Assigns a value to the row cell.
 </summary>
 <param name="Val">Value to assign.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RowValue.Add(System.Int32)">
 <summary>
 Assigns a value to the row cell.
 </summary>
 <param name="Val">Value to assign.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RowValue.Add(System.Double)">
 <summary>
 Assigns a value to the row cell.
 </summary>
 <param name="Val">Value to assign.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RowValue.Add(System.DateTime)">
 <summary>
 Assigns a value to the row cell.
 </summary>
 <param name="Val">Value to assign.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RowValue.Add(System.Boolean)">
 <summary>
 Assigns a value to the row cell.
 </summary>
 <param name="Val">Value to assign.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RowValue.Value">
 <summary>
 Retrieves a value.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RowValue.GetValue">
 <summary>
 Retrieves a string representation of a value.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListRow">
 <summary>
 Represents a list row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.Disabled">
 <summary>
 Gets or sets value indicating whether list row is disabled
 </summary>
 <returns></returns>
</member>
<member name="P:Dynamicweb.Controls.ListRow.Height">
 <summary>
 Gets or sets height of the row. 
 If value is 0, than height has default value.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.Item(System.Int32)">
 <summary>
 Gets or sets row value for the given column.
 </summary>
 <param name="index">Zero-based column index.</param>
 <returns>Row value for the given column.</returns>
 <exception cref="T:System.IndexOutOfRangeException"><paramref name="index">index</paramref> was outside of the bounds the row.</exception>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.SetWidth">
 <summary>
 Gets or sets value indicating whether to set width for each cell of this column.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.RowID">
 <summary>
 ID of the row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.ItemID">
 <summary>
 Item ID of the row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.ContextMenuID">
 <summary>
 ID of Dynamicweb.Controls.Contextmenu to display on right click.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.Active">
 <summary>
 Set to false if the row should be marked as inactive.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.OnClientDoubleClick">
 <summary>
 Gets or sets the client-side script which is executed when user double-clicks on a row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.OnClientClick">
 <summary>
 Gets or sets the client-side script which is executed when user clicks on a row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.Expandable">
 <summary>
 Gets or sets value indicating whether the row is expandable (has child rows).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.Tag">
 <summary>
 Gets or sets the custom information about the row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.Selected">
 <summary>
 Gets or sets value indicating whether row is selected.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.StoredInSelection">
 <summary>
 Gets value indicating whether row was selected and this state was stored across list pagination.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.Attributes">
 <summary>
 Gets the custom attributes associated with the row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.RenderEmptyColumn">
 <summary>
 Gets or sets value indicating whether to render an empty starting column.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.ListID">
 <summary>
 Gets or sets the client ID of the list control which contains current row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.InnerID">
 <summary>
 Gets or sets the inner ID of a row.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ListRow.Owner">
 <summary>
 Gets or sets the row container (List control).
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.String)">
 <summary>
 Adds new column with specified value to the row.
 </summary>
 <param name="Value">Column value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.String,System.Boolean)">
 <summary>
 Adds new column with specified value to the row.
 </summary>
 <param name="Value">Column value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.String,System.String)">
 <summary>
 Adds new column with specified value and action to the row.
 </summary>
 <param name="Value">Column value.</param>
 <param name="Action">Column action.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.String,System.String,System.Boolean)">
 <summary>
 Adds new column with specified value and action to the row.
 </summary>
 <param name="Value">Column value.</param>
 <param name="Action">Column action.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.String,System.String,System.String)">
 <summary>
 Adds new column with specified value and action to the row.
 </summary>
 <param name="Value">Column value.</param>
 <param name="Action">Column action.</param>
 <param name="Attributes">column attributes.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.Int32)">
 <summary>
 Adds new column with specified value to the row.
 </summary>
 <param name="Value">Column value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.Int32,System.String)">
 <summary>
 Adds new column with specified value and action to the row.
 </summary>
 <param name="Value">Column value.</param>
 <param name="Action">Column action.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.Double)">
 <summary>
 Adds new column with specified value to the row.
 </summary>
 <param name="Value">Column value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.Double,System.String)">
 <summary>
 Adds new column with specified value and action to the row.
 </summary>
 <param name="Value">Column value.</param>
 <param name="Action">Column action.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.DateTime)">
 <summary>
 Adds new column with specified value to the row.
 </summary>
 <param name="Value">Column value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.DateTime,System.String)">
 <summary>
 Adds new column with specified value and action to the row.
 </summary>
 <param name="Value">Column value.</param>
 <param name="Action">Column action.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.Boolean)">
 <summary>
 Adds new column with specified value to the row.
 </summary>
 <param name="Value">Column value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.Boolean,System.String)">
 <summary>
 Adds new column with specified value and action to the row.
 </summary>
 <param name="Value">Column value.</param>
 <param name="Action">Column action.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.Object)">
 <summary>
 Adds new column with specified value to the row.
 </summary>
 <param name="Value">Column value.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.AddColumn(System.Object,System.String)">
 <summary>
 Adds new column with specified value and action to the row.
 </summary>
 <param name="Value">Column value.</param>
 <param name="Action">Column action.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders list row.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render list row into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ListRow.GetRowIdentity">
 <summary>
 Retrieves row identity (a string that can be used to uniquely identify the row).
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ListRowCollection">
 <summary>
 Represents a collection of list rows.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ModuleSettings.Value">
 <summary>
 </summary>
 <value></value>
 <returns>Comma separated list of fields to be saved</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RadioButton.OnClientClick">
 <summary>
 Gets or sets the client script that is executed when the user clicks the radio-button.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RadioButton.Checked">
 <summary>
 Gets value indicating whether radio button is checked.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RibbonBarButton">
 <summary>
 Represents a Ribbonbar button.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.RibbonBarButton.Click">
 <summary>
 Server-side "OnClick" event.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.DoTranslate">
 <summary>
 If set to true (default) the Text is translated
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.ModuleSystemName">
 <summary>
 Get and set required module to see this item
 </summary>
 <value>A valid module system name</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.Version">
 <summary>
 Get and set minimum required version to use the button
 </summary>
 <value>String</value>
 <returns>Button text.</returns>
 <remarks>If empty it is allowed</remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.Text">
 <summary>
 Stores and retrieves button text.
 </summary>
 <value>String</value>
 <returns>Button text.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.ContextMenuId">
 <summary>
 ID of contextmenu linked to this button.
 </summary>
 <value>String</value>
 <returns>Button text.</returns>
 <remarks>When specified, the contextmenu with the provided id will be shown with options for the button.</remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.ImagePath">
 <summary>
 Stores and retrieves the path to the button image.
 </summary>
 <value>String</value>
 <returns>The path to the button image.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.OnClientClick">
 <summary>
 Gets or sets the client-side script which is executed when user clicks on a button.
 </summary>
 <value>String</value>
 <returns>The 'onclick' action.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.Hide">
 <summary>
 Stores and retrieves the value indicating whether not to show the button.
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether not to show the button.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.Active">
 <summary>
 Stores and retrieves the value indicating whether button is active (highlighted).
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether button is active.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.Disabled">
 <summary>
 Stores and retrieves the value indicating whether button is disabled.
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether button is disabled.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.Size">
 <summary>
 Stores and retrieves the size of the button image.
 </summary>
 <value>Icons.Icon.Size</value>
 <returns>The size of the button image.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.Image">
 <summary>
 Stores and retrieves the predefined button image.
 </summary>
 <value>Icons.Icon.Type</value>
 <returns>The predefined button image.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.Icon">
 <summary>
 Stores and retrieves the predefined button icon. Icons wins over images!
 </summary>
 <value>KnownIcon</value>
 <returns>The predefined button icon.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.EnableServerClick">
 <summary>
 Gets or sets value indicating whether to raize postback 'OnClick' event for this button.
 </summary>
 <value>String</value>
 <returns>Button text.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.PerformValidation">
 <summary>
 Gets or sets a value indicating whether to perform post back validation.
 </summary>
 <value><c>true</c> if [perform validation]; otherwise, <c>false</c>.</value>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.ShowWait">
 <summary>
 Gets or sets a value indicating whether a wait overlay will be displayed when button is clicked.
 </summary>
 <value><c>true</c> if [show wait]; otherwise, <c>false</c>.</value>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.WaitMessage">
 <summary>
 Gets or sets the wait message to show when button is pressed if <see cref="P:Dynamicweb.Controls.RibbonBarButton.ShowWait">ShowWait</see> is enabled.
 </summary>
 <value>The wait message. Default is nothing</value>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.WaitTimeout">
 <summary>
 Gets or sets the wait timeout in ms.
 </summary>
 <value>The wait timeout. Default is 0, meaning it will run untill stopped.</value>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.KeyboardShortcut">
 <summary>
 Gets or sets the keboard shortcut for button
 </summary>
 <value></value>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarButton.CssClass">
 <summary>
 Gets or sets the additional CSS class name to apply.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarButton.RenderControl(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders button.
 </summary>
 <param name="writer">The instance of HtmlTextWriter to render ribbonbar button into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarButton.GetItemSize">
 <summary>
 Returns button size.
 </summary>
 <returns>Button size.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarButton.GetOnClickEvent(System.Boolean)">
 <summary>
 Returns button's OnClick event
 </summary>
 <param name="getActionOnly">Get only action or add "onclick" string to it</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarButton.RaisePostBackEvent(System.String)">
 <summary>
 Enables a button to process an event raised when a form is posted to the server.
 </summary>
 <param name="eventArgument">A String that represents an optional event argument to be passed to the event handler.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RibbonBarCheckbox">
 <summary>
 Represents a Ribbonbar checkbox.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.ModuleSystemName">
 <summary>
 Get and set required module to see this item
 </summary>
 <value>A valid module system name</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.Version">
 <summary>
 Get and set minimum required version to use the button
 </summary>
 <value>String</value>
 <returns>Button text.</returns>
 <remarks>If empty it is allowed</remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.Text">
 <summary>
 Stores and retrieves checkbox text.
 </summary>
 <value>String</value>
 <returns>Checkbox text.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.Checked">
 <summary>
 Stores and retrieves value indicating whether checkbox is checked.
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether checkbox is checked.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.RenderAs">
 <summary>
 Stores and retrieves the checkbox visual style.
 </summary>
 <value>RibbonbarItem.ItemStyle</value>
 <returns>The checkbox visual style.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.Image">
 <summary>
 Stores and retrieves the predefined checkbox image.
 </summary>
 <value>Icons.Icon.Type</value>
 <returns>The predefined checkbox image.</returns>
 <remarks>Only visible if style is set to "RibbonbarItem.ItemStyle.Default".</remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.ImagePath">
 <summary>
 Stores and retrieves the path to the checkbox image.
 </summary>
 <value>String</value>
 <returns>The path to the checkbox image.</returns>
 <remarks>Only visible if style is set to "RibbonbarItem.ItemStyle.Default".</remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.Icon">
 <summary>
 Stores and retrieves the predefined button icon. Icons wins over images!
 </summary>
 <value>KnownIcon</value>
 <returns>The predefined button icon.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.IconColor">
 <summary>
 Stores and retrieves the predefined button iconColor.
 </summary>
 <value>KnownColor</value>
 <returns>The predefined button icon.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.Disabled">
 <summary>
 Stores and retrieves the value indicating whether checkbox is disabled.
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether checkbox is disabled.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.Size">
 <summary>
 Stores and retrieves the size of the checkbox button (takes effect only when Style set to "RibbonbarItem.Style.Default").
 </summary>
 <value>Icons.Icon.Size</value>
 <returns>The size of the checkbox button.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.OnClientClick">
 <summary>
 Stores and retrieves the 'onclick' action.
 </summary>
 <value>String</value>
 <returns>The 'onclick' action.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.Hide">
 <summary>
 Stores and retrieves value indicating whether to hide checkbox.
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether to hide checkbox.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarCheckbox.CssClass">
 <summary>
 Gets or sets the additional CSS class name to apply.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarCheckbox.Control_OnInit(System.Object,System.EventArgs)">
 <summary>
 Handles checkbox "OnInit" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarCheckbox.RenderControl(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders checkbox.
 </summary>
 <param name="writer">The instance of HtmlTextWriter to render checkbox into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarCheckbox.GetItemSize">
 <summary>
 Returns checkbox size.
 </summary>
 <returns>Checkbox size.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarCheckbox.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Processes postback data for the checkbox.
 </summary>
 <param name="postDataKey">The key identifier for the checkbox. </param>
 <param name="postCollection">The collection of all incoming name values. </param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RibbonBarItem">
 <summary>
 Represents a base class for all Ribbonbar controls.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RibbonBarItem.ItemStyle">
 <summary>
 Declares a different item styles.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.RibbonBarItem.ItemStyle.Default">
 <summary>
 Default style.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.RibbonBarItem.ItemStyle.FormControl">
 <summary>
 Forces the item to render as normal form control.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarItem.IndependentRenderingInGroup">
 <summary>
 If set to true item should render self in group independently
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarItem.GetItemSize">
 <summary>
 Retrieves the item size.
 </summary>
 <returns>The item size.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarItem.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Processes postback data for the item.
 </summary>
 <param name="postDataKey">The key identifier for the item. </param>
 <param name="postCollection">The collection of all incoming name values. </param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarItem.RaisePostDataChangedEvent">
 <summary>
 Signals the item to notify the ASP.NET application that the state of the item has changed.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarItem.RaisesEvent(System.String)">
 <summary>
 Determines whether the item is currently raising specified event.
 </summary>
 <param name="eventName">The name of the event (e.g. "Click").</param>
 <returns>Value indicating whether the item is currently raising specified event.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarItem.RaisesEvent(System.String,System.String)">
 <summary>
 Determines whether the item is currently raising specified event.
 </summary>
 <param name="eventName">The name of the event (e.g. "Click").</param>
 <param name="eventArgument">Event argument.</param>
 <returns>Value indicating whether the item is currently raising specified event.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarItem.KeyboardShortcutAppend(System.Web.UI.HtmlTextWriter,System.String,System.String)">
 <summary>
 Appends keyboard shortcut to a ribbon bar item
 </summary>
 <param name="writer"></param>
 <param name="action">Action to perform on shortcut fires</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RibbonBarPanel">
 <summary>
 Represents a Ribbonbar panel.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarPanel.ModuleSystemName">
 <summary>
 Get and set required module to see this item
 </summary>
 <value>A valid module system name</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarPanel.Version">
 <summary>
 Get and set minimum required version to use the button
 </summary>
 <value>String</value>
 <returns>Button text.</returns>
 <remarks>If empty it is allowed</remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarPanel.Hide">
 <summary>
 Stores and retrieves value indicating whether to hide panel.
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether to hide panel.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarPanel.ExcludeMarginImage">
 <summary>
 Stores and retrieves value indicating whether to exclude the margin image from the panel.
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether to exclude the margin image from the panel.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarPanel.RenderControl(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders panel.
 </summary>
 <param name="writer">The instance of HtmlTextWriter to render panel into.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RibbonBarRadioButton">
 <summary>
 Represents a Ribbonbar radio button.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.ModuleSystemName">
 <summary>
 Get and set required module to see this item
 </summary>
 <value>A valid module system name</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.Version">
 <summary>
 Get and set minimum required version to use the button
 </summary>
 <value>String</value>
 <returns>Button text.</returns>
 <remarks>If empty it is allowed</remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.DoTranslate">
 <summary>
 If set to true (default) the Text is translated
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.Text">
 <summary>
 Stores and retrieves radio button text.
 </summary>
 <value>String</value>
 <returns>Radio button text.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.Group">
 <summary>
 Stores and retrieves radio button group name.
 </summary>
 <value>String</value>
 <returns>Radio button group name.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.Value">
 <summary>
 Stores and retrieves radio button value.
 </summary>
 <value>String</value>
 <returns>Radio button value.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.Checked">
 <summary>
 Stores and retrieves value indicating whether radio button is checked.
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether radio button is checked.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.RenderAs">
 <summary>
 Stores and retrieves the radio button visual style.
 </summary>
 <value>RibbonbarItem.ItemStyle</value>
 <returns>The radio button visual style.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.Image">
 <summary>
 Stores and retrieves the predefined radio button image.
 </summary>
 <value>Icons.Icon.Type</value>
 <returns>The predefined radio button image.</returns>
 <remarks>Only visible if style is set to "RibbonbarItem.ItemStyle.Default".</remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.ImagePath">
 <summary>
 Stores and retrieves the path to the radio button image.
 </summary>
 <value>String</value>
 <returns>The path to the radio button image.</returns>
 <remarks>Only visible if style is set to "RibbonbarItem.ItemStyle.Default".</remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.Icon">
 <summary>
 Stores and retrieves the predefined button icon. Icons wins over images!
 </summary>
 <value>KnownIcon</value>
 <returns>The predefined button icon.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.Disabled">
 <summary>
 Stores and retrieves the value indicating whether radio button is disabled.
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether radio button is disabled.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.Size">
 <summary>
 Stores and retrieves the size of the radio button (takes effect only when Style set to "RibbonbarItem.Style.Default").
 </summary>
 <value>Icons.Icon.Size</value>
 <returns>The size of the radio button.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.OnClientClick">
 <summary>
 Stores and retrieves the 'onclick' action.
 </summary>
 <value>String</value>
 <returns>The 'onclick' action.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.Hide">
 <summary>
 Stores and retrieves value indicating whether to hide radio button.
 </summary>
 <value>Boolean</value>
 <returns>Value indicating whether to hide radio button.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarRadioButton.CssClass">
 <summary>
 Gets or sets the additional CSS class name to apply.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarRadioButton.Control_OnInit(System.Object,System.EventArgs)">
 <summary>
 Handles radio button "OnInit" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarRadioButton.RenderControl(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders radio button.
 </summary>
 <param name="writer">The instance of HtmlTextWriter to render radio button into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarRadioButton.GetItemSize">
 <summary>
 Returns radio button size.
 </summary>
 <returns>Radio button size.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarRadioButton.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Processes postback data for the radio button.
 </summary>
 <param name="postDataKey">The key identifier for the radio button. </param>
 <param name="postCollection">The collection of all incoming name values. </param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RibbonBar">
 <summary>
 Represents a ribbonbar control.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBar.ActiveTab">
 <summary>
 Stores and retrieves the current active tab number.
 </summary>
 <value>Integer</value>
 <returns>The current active tab number.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBar.HelpKeyword">
 <summary>
 Gets or sets the help keyword.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBar.AddIns">
 <summary>
 Gets the list of add-ins for the current control.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBar.DataContext">
 <summary>
 Gets or sets the data context under which the current instance is running.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBar.DisableAddIns">
 <summary>
 Gets or sets value indicating whether to disable all add-ins.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBar.ShowTrace">
 <summary>
 Gets or sets value indicating whether to output the trace information next to the RibbonBar control output.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBar.CanCollapse">
 <summary>
 Gets or sets value indicating whether Ribbon area can be collapsed by the user.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBar.Disabled">
 <summary>
 Gets or sets value indication whether ribbon area is disabled
 </summary>
 <returns></returns>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.Control_OnInit(System.Object,System.EventArgs)">
 <summary>
 Handles ribbonbar "OnInit" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.Control_OnLoad(System.Object,System.EventArgs)">
 <summary>
 Handles ribbonbar "OnLoad" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders ribbonbar.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render ribbonbar into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.InitializeAddIns">
 <summary>
 Initiates the "Initialize" stage of an add-ins.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.LoadAddIns">
 <summary>
 Initiates the "Load" stage of an add-ins.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.HasTab(System.String)">
 <summary>
 Determines whether tab with the given name is declared.
 </summary>
 <param name="tabName">Name of the tab.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.HasGroup(System.String,System.String)">
 <summary>
 Determines whether group with the given name is declared within the given tab.
 </summary>
 <param name="tabName">Name of the tab.</param>
 <param name="groupName">Name of the group.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.AddTab(Dynamicweb.Controls.RibbonBarTab)">
 <summary>
 Adds new tab.
 </summary>
 <param name="tab">Tab to add.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.InsertTab(Dynamicweb.Controls.RibbonBarTab,System.Int32)">
 <summary>
 Inserts the given tab into the given position.
 </summary>
 <param name="tab">Tab to insert.</param>
 <param name="index">0-based position of the tab.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.AddGroup(System.String,Dynamicweb.Controls.RibbonBarGroup)">
 <summary>
 Adds new group.
 </summary>
 <param name="tabName">Tab to place group onto.</param>
 <param name="group">Group to add.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.InsertGroup(System.String,Dynamicweb.Controls.RibbonBarGroup,System.Int32)">
 <summary>
 Inserts the given group onto the given tab with the given position.
 </summary>
 <param name="tabName">Tab to place group onto.</param>
 <param name="group">Group to insert.</param>
 <param name="index">0-based position of the group.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.GetTabByName(System.String)">
 <summary>
 Retrieves tab by its name.
 </summary>
 <param name="tabName">Name of the tab.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.GetGroupByName(System.String,System.String)">
 <summary>
 Retrieves group by its name and by the name of the corresponding tab.
 </summary>
 <param name="tabName">Name of the tab.</param>
 <param name="groupName">Name of the group.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.CreateTab(System.String)">
 <summary>
 Creates new tab.
 </summary>
 <param name="tabName">Name of the tab.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.CreateGroup(System.String,System.String)">
 <summary>
 Creates new group.
 </summary>
 <param name="tabName">Name of the containing tab.</param>
 <param name="groupName">Name of the group.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.UpdateTabs(Dynamicweb.Controls.RibbonBarTab)">
 <summary>
 Updates state of all tabs according to provided active tab.
 </summary>
 <param name="activeTab">Current active tab.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBar.RaisePostBackEvent(System.String)">
 <summary>
 Processes ribbon postback events.
 </summary>
 <param name="eventArgument">The event argument.</param>
</member>
<member name="T:Dynamicweb.Controls.RibbonBarGroup">
 <summary>
 Represents a Ribbonbar group.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarGroup.ModuleSystemName">
 <summary>
 Get and set required module to see this item
 </summary>
 <value>A valid module system name</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarGroup.Version">
 <summary>
 Get and set minimum required version to use the button
 </summary>
 <value>String</value>
 <returns>Button text.</returns>
 <remarks>If empty it is allowed</remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarGroup.Active">
 <summary>
 Stores and retrieves the value indicating whether group is active.
 </summary>
 <value>Boolean</value>
 <returns>The value indicating whether group is active.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarGroup.Name">
 <summary>
 Stores and retrieves the name of the group.
 </summary>
 <value>String</value>
 <returns>The name of the group.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarGroup.Columns">
 <summary>
 Stores and retrieves the nuber of columns in row for small items.
 </summary>
 <value>Integer</value>
 <returns>The number of columns.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarGroup.Disabled">
 <summary>
 Gets or sets value indication whether ribbon group is disabled
 </summary>
 <returns></returns>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarGroup.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders ribbonbar tab.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render ribbonbar tab into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarGroup.AddItem(Dynamicweb.Controls.RibbonBarItem)">
 <summary>
 Adds new item to the group.
 </summary>
 <param name="item">An item to add.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarGroup.UpdateRadioButtons(Dynamicweb.Controls.RibbonBarRadioButton)">
 <summary>
 Updates states of all group radio buttons according to provided checked radio button.
 </summary>
 <param name="activeButton">Current checked radio button.</param>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarGroup.DoNotSetActive">
 <summary>
 Do not set default active/checked button in group.
 </summary>
</member>
<member name="T:Dynamicweb.Controls.ControlResources">
 <summary>
 Implements control resource loader.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ControlResources.PredefinedResource">
 <summary>
 Defines the standard resource types.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.PrototypeJS">
 <summary>
 Prototype JavaScript library.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.jQuery">
 <summary>
 jQuery JavaScript library.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.MaxLength">
 <summary>
 MaxLength JavaScript library.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.DynamicwebScreen">
 <summary>
 Dynamicweb Screen JavaScript library.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.ScriptaculousJS">
 <summary>
 Scriptaculous JavaScript library.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.UIStylesheet">
 <summary>
 Modern UI styles.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.DynamicwebAjaxJS">
 <summary>
 Dynamicweb AJAX client-side library.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.DynamicwebWatcherJS">
 <summary>
 Dynamicweb Watcher client-side library.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.DynamicwebControlResources">
 <summary>
 Control Resources client-side library.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.Observable">
 <summary>
 Observable objects.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.Utilities">
 <summary>
 Utility classes.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ControlResources.PredefinedResource.RequireJS">
 <summary>
 JavaScript file and module loader.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ControlResources.ResourceUrlHelper">
 <summary>
 Provides helper methods to operate with resource URLs.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.ResourceUrlHelper.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.ResourceUrlHelper.GetUniqueExtensions(System.String[])">
 <summary>
 Retrieves unique extensions.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.ResourceUrlHelper.GetQueryStringItemValue(System.String,System.String)">
 <summary>
 Returns the value of the specified query string parameter.
 </summary>
 <param name="url">Complete URL.</param>
 <param name="itemName">Query string parameter name.</param>
 <returns>Query string parameter value for a given parameter.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.ResourceUrlHelper.CollectQueryString(System.String[],System.String)">
 <summary>
 Collects query-string for all resources with the given extension.
 </summary>
 <param name="data">List of resources.</param>
 <param name="ext">Extension to use.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.ResourceUrlHelper.GetResourcesByExtensions(System.String[],System.String[])">
 <summary>
 Retrieves a list of resource files for the specified source by a given list of file extensions.
 </summary>
 <param name="data">List of resources to process.</param>
 <param name="extensions">A list of file extensions to perform the search by.</param>
 <returns>A list of matched resource.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.ResourceUrlHelper.GetResourceType(System.String)">
 <summary>
 Returns resource type for a given resource.
 </summary>
 <param name="resource">Resource to examine.</param>
 <returns>Resource type of a given resource.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.ResourceUrlHelper.NormalizeExtension(System.String)">
 <summary>
 Normalizes resource extension (converts it to lower case and removes any spaces and dots).
 </summary>
 <param name="ext">Resource extension to normalize.</param>
 <returns>Normalized extension.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.ResourceUrlHelper.SortResources(System.String[])">
 <summary>
 Performs sorting of resources.
 </summary>
 <param name="data">Resources to sort.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.ResourceUrlHelper.PopUpResource(System.String[],System.Collections.Generic.List{System.String})">
 <summary>
 Moves specified resource on top of the list.
 </summary>
 <param name="urlParts">URL parts that defines the resource.</param>
 <param name="list">List containing the resource.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.ResourceUrlHelper.GetResourceIndex(System.String[],System.String[])">
 <summary>
 Retrieves resource index by the given URL parts.
 </summary>
 <param name="data">An array to search in.</param>
 <param name="urlParts">URL parts that defines the resource.</param>
 <returns>0-based index or -1 if no occurence was found.</returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ControlResources.CodeBlockInfo">
 <summary>
 Represents code block information.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.CodeBlockInfo.Type">
 <summary>
 Gets or sets the type of the the block contents.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.CodeBlockInfo.Text">
 <summary>
 Gets or sets block text.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.CodeBlockInfo.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.CodeBlockInfo.#ctor(System.String,System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="type">Block content type.</param>
 <param name="text">Block content.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ControlResources.ConditionHandler">
 <summary>
 Executes tasks that are required to satisfy specified condition.
 </summary>
 <param name="resourceUrl">URL of the resource.</param>
 <param name="writer">Control output.</param>
 <param name="afterRender">Value indicating whether main output of the control has been created.</param>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.Resources">
 <summary>
 Gets or sets the list of resource URLs that will be embedded into the current response.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.Blocks">
 <summary>
 Gets or sets the collection of text blocks mapped to their identifiers.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.RenderedDataKeys">
 <summary>
 Gets or sets the collection of rendered data keys (resource URLs and text blocks).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.UrlHelper">
 <summary>
 Gets the URL helper.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.IncludePrototype">
 <summary>
 Gets or sets value indicating whether to include Prototype Javascript library.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.IncludejQuery">
 <summary>
 Gets or sets value indicating whether to include jQuery Javascript library.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.IncludeMaxLength">
 <summary>
 Gets or sets value indicating whether to include MaxLength Javascript library.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.IncludeDynamicwebScreen">
 <summary>
 Gets or sets value indicating whether to include Dynamicweb Screen Javascript library.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.IncludeScriptaculous">
 <summary>
 Gets or sets value indicating whether to include Scriptaculous Javascript library.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.IncludeUIStylesheet">
 <summary>
 Gets or sets value indicating whether to include main UI stylesheet.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.IncludeRequireJS">
 <summary>
 Gets or sets value indicating whether to include RequireJS Javascript library.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.IncludeClientSideSupport">
 <summary>
 Gets or sets value indicating whether to include client-side support for this object.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.IncludeUtilities">
 <summary>
 Gets or sets value indicating whether to include library with utility classes for this object.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.CombineOutput">
 <summary>
 Gets or sets value indicating whether to combine and compress output.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.MergeOutput">
 <summary>
 Gets or sets value indicating whether to merge control output with output from previous calls to the same control (even using different control instances).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.Items">
 <summary>
 Gets the collection of resources that should be appended to the output of this instance.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.Conditions">
 <summary>
 Gets the collection of conditions that specifies how to handle particular resources.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ControlResources.IsPageInstance">
 <summary>
 Gets value indicating whether the current control instance is the page instance.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.OnInit(System.EventArgs)">
 <summary>
 Raises "Init" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.RenderControl(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders control.
 </summary>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> to write output into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.EmbedRange(Dynamicweb.Controls.ResourceCollection,System.Web.UI.HtmlTextWriter)">
 <summary>
 Embeds a set of resources into the page.
 </summary>
 <param name="items">Resources to embed.</param>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> to write output into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.Embed(Dynamicweb.Controls.GenericResource,System.Web.UI.HtmlTextWriter)">
 <summary>
 Embeds new resource into the page.
 </summary>
 <param name="resource">Resource to embed.</param>
 <param name="writer">An instance of <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> to write output into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.GetPageInstance">
 <summary>
 Returns an instance of the handler defined on a current page.
 </summary>
 <returns>An instance of the handler defined on a current page.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.AddResourceFile(System.String)">
 <summary>
 Adds new resource file to the current request.
 </summary>
 <param name="resourceFile">Resource file to be added.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.AddPredefinedResource(Dynamicweb.Controls.ControlResources.PredefinedResource)">
 <summary>
 Adds new predefined resource to the current request.
 </summary>
 <param name="resource">Resource type to be added.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.AddPredefinedResource(Dynamicweb.Controls.ControlResources.PredefinedResource,System.String)">
 <summary>
 Adds new predefined resource to the current request.
 </summary>
 <param name="resource">Resource type to be added.</param>
 <param name="parameters">Query string parameters to be passed to resource.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.GetResourceLocation(Dynamicweb.Controls.ControlResources.PredefinedResource)">
 <summary>
 Retrieves resource location path.
 </summary>
 <param name="resource">Resource type.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.ClearOutput(System.String)">
 <summary>
 Removes any resource includes from the entry page output.
 </summary>
 <param name="html">HTML output of the page.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.AddScriptBlock(System.String,System.String)">
 <summary>
 Adds new &lt;script&gt; block to the current page output.
 </summary>
 <param name="key">String identifier of the target block.</param>
 <param name="contents">Javascript code block contents.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.AddStyleBlock(System.String,System.String)">
 <summary>
 Adds new &lt;style&gt; block to the current page output.
 </summary>
 <param name="key">String identifier of the target block.</param>
 <param name="contents">Style block contents.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.AddContentBlock(System.String,System.String)">
 <summary>
 Adds new block of raw content to the current page output.
 </summary>
 <param name="key">String identifier of the target block.</param>
 <param name="contents">Block contents.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.BlockResources(System.Type)">
 <summary>
 Prevents all the instances of the given control from loading resources.
 </summary>
 <param name="controlType">Control type.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.AddBlock(System.String,System.String,System.String)">
 <summary>
 Adds new block to the current page output.
 </summary>
 <param name="key">String identifier of the target block.</param>
 <param name="type">Block type.</param>
 <param name="contents">Block contents.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.CheckConditions(Dynamicweb.Controls.ResourceConditionResolution,System.Web.UI.HtmlTextWriter,Dynamicweb.Controls.ControlResources.ConditionHandler,System.Boolean)">
 <summary>
 Performs check of the given resolution on all resources.
 </summary>
 <param name="checkResolution">Resolution to check.</param>
 <param name="writer">Control output.</param>
 <param name="handler">Handler to be executed for all matched resources.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.DiscardResolutionHandler(System.String,System.Web.UI.HtmlTextWriter,System.Boolean)">
 <summary>
 Prevents resource from being embedded into the page.
 </summary>
 <param name="resourceUrl">Resource URL.</param>
 <param name="writer">Control output.</param>
 <param name="afterRender">Value indicating whether the function called after main rendering.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.KeepOriginalResolutionHandler(System.String,System.Web.UI.HtmlTextWriter,System.Boolean)">
 <summary>
 Renders original link to the specified resource.
 </summary>
 <param name="resourceUrl">Resource URL.</param>
 <param name="writer">Control output.</param>
 <param name="afterRender">Value indicating whether the function called after main rendering.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.RenderResourceReference(System.String,System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders resource reference.
 </summary>
 <param name="resourceUrl">Resource URL.</param>
 <param name="writer">Control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.RenderResourceReference(System.String,System.Web.UI.HtmlTextWriter,System.String)">
 <summary>
 Renders resource reference.
 </summary>
 <param name="resourceUrl">Resource URL.</param>
 <param name="writer">Control output.</param>
 <param name="forceResourceType">Specifies the desired resource type.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.CheckIfRendered(System.String,System.Boolean)">
 <summary>
 Checks whether the resource referenced by the given key has already been rendered.
 </summary>
 <param name="key">Resource key.</param>
 <param name="autoAdd">Value indicating whether to automatically register resource as rendered if it's not yet.</param>
 <returns>Value indicating whether the resource referenced by the given key has already been rendered.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.GetResources">
 <summary>
 Returns a list of resources to be rendered.
 </summary>
 <returns>A list of resources to be rendered.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.GetTextBlocks">
 <summary>
 Returns all text blocks to be rendered.
 </summary>
 <returns>A list of all text blocks to be rendered.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.RenderTextBlocks(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders resource reference.
 </summary>
 <param name="writer">Control output.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.HasResolution(System.String,Dynamicweb.Controls.ResourceConditionResolution)">
 <summary>
 Determines whether specified resolution is defined on a specified resource.
 </summary>
 <param name="resourceUrl">Resource URL.</param>
 <param name="resolution">Resolution to check.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ControlResources.CheckProperties">
 <summary>
 Checks control properties and adds corresponding predefined resources.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.RibbonBarTab">
 <summary>
 Represents a Ribbonbar tab.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarTab.Active">
 <summary>
 Stores and retrieves the value indicating whether tab is active.
 </summary>
 <value>Boolean</value>
 <returns>The value indicating whether tab is active.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarTab.Name">
 <summary>
 Stores and retrieves the name of the tab.
 </summary>
 <value>String</value>
 <returns>The name of the tab.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarTab.OnClientClick">
 <summary>
 Gets or sets the client-side script which is executed when user clicks on a tab.
 </summary>
 <value>String</value>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarTab.Disabled">
 <summary>
 Gets or sets value indication whether ribbon tab is disabled
 </summary>
 <returns></returns>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarTab.TabID">
 <summary>
 Stores and retrieves the tab number (1-based) for current tab.
 </summary>
 <value>Integer</value>
 <returns>The tab number (1-based) for current tab.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RibbonBarTab.ClassName">
 <summary>
 Gets or sets the additional css class name on a tab.
 </summary>
 <value>String</value>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarTab.RenderTab(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders ribbonbar tab.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render ribbonbar tab into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RibbonBarTab.RenderTabArea(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders ribbonbar tab contents.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render ribbonbar tab contents into.</param>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TabHeader.SelectedTabIndex">
 <summary>Sets the active tab. Default is 1 - the first tag. The value can be set using a querystring parameter &amp;Tab=</summary>
 <example>
    <para><font size="2"><font size="2">TabHeader1.SelectedTabIndex =
    2</font></font></para>
 </example>
 <remarks>Index is 1 based</remarks>
 <isnew>13-12-2007</isnew>
</member>
<member name="T:Dynamicweb.Controls.TabPage">
 <summary>
		Represents a Tab page in TabControl
 </summary>
 <remarks>
 </remarks>
 <Example>See TabControl</Example>
 <history>
 	[mwl]	02-05-2006	Created
 </history>
</member>
<member name="P:Dynamicweb.Controls.TabPage.Visible">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[mwl]	02-05-2006	Created
 </history>
</member>
<member name="P:Dynamicweb.Controls.TabPage.Disabled">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[mwl]	02-05-2006	Created
 </history>
</member>
<member name="P:Dynamicweb.Controls.TabPage.Selected">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[mwl]	02-05-2006	Created
 </history>
</member>
<member name="P:Dynamicweb.Controls.TabPage.Title">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[mwl]	02-05-2006	Created
 </history>
</member>
<member name="P:Dynamicweb.Controls.TabPage.Index">
 <summary>
 
 </summary>
 <returns></returns>
 <remarks>
 </remarks>
 <history>
 	[mwl]	02-05-2006	Created
 </history>
</member>
<member name="F:Dynamicweb.Controls.Tab._Name">
 <summary>
 Name of the tab.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.TabStrip._Title">
 <summary>
 Title of the tabstrip.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.TabStrip._width">
 <summary>
 Width of the tab - unless default size. Default is 600.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TemplatedDropDownListItemType">
 <summary>
 Represents a drop-down list item type.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.TemplatedDropDownListItemType.SelectedItem">
 <summary>
 Selected item (an item that appears in a selection box).
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.TemplatedDropDownListItemType.Item">
 <summary>
 Normal item.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TemplatedDropDownListItem">
 <summary>
 Represents a drop-down list item.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownListItem.DataItem">
 <summary>
 Gets or sets the data item that bound to the drop-down list item.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownListItem.DataItemIndex">
 <summary>
 Gets the index of a data item that bound to the drop-down list item.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownListItem.DisplayIndex">
 <summary>
 Gets the position of the data item.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownListItem.ItemType">
 <summary>
 Gets the item type.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownListItem.DataItemContract">
 <summary>
  Gets the data item that bound to the drop-down list item.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownListItem.#ctor(System.Int32,Dynamicweb.Controls.TemplatedDropDownListItemType)">
 <summary>
 Initializes a new instance of a TemplatedDropDownListItem class.
 </summary>
 <param name="itemIndex">The index of a data item that bound to the drop-down list item.</param>
 <param name="itemType">Item type.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TemplatedDropDownListItemEventArgs">
 <summary>
 Represents an event arguments that used when specified event occurs on a TemplatedDropDownList control.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TemplatedDropDownListItemEventArgs.Item">
 <summary>
 Gets an instance of a TemplatedDropDownListItem that is associated with an event.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TemplatedDropDownListItemEventArgs.#ctor(Dynamicweb.Controls.TemplatedDropDownListItem)">
 <summary>
 Initializes a new instance of the TemplatedDropDownListItemEventArgs class.
 </summary>
 <param name="item">An instance of a TemplatedDropDownListItem that is associated with an event.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Toolbar">
 <summary>
 Represents a toolbar.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Toolbar.Buttons">
 <summary>
 Gets a collection of toolbar buttons.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Toolbar.ShowStart">
 <summary>
 Gets or sets a value indicating whether to show the start graphics.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Toolbar.ShowEnd">
 <summary>
 Gets or sets a value indicating whether to show the end graphics.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Toolbar.ShowAsRibbon">
 <summary>
 Gets or sets a value indicating whether the toolbar should be rendered as a ribbon.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Toolbar.Control_OnLoad(System.Object,System.EventArgs)">
 <summary>
 Handles toolbar "OnLoad" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Toolbar.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders toolbar.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render toolbar into.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ToolbarButton">
 <summary>
 Represents a toolbar button.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.ShowText">
 <summary>
 Gets or sets a value indicating whether to show button text.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.Translate">
 <summary>
 Gets or sets a value indicating whether to translate button text.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.ShowOptions">
 <summary>
 Gets or sets a value indicating whether to show button "Options" arrow.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.ShowOptionsOnClick">
 <summary>
 Gets or sets a Javascript handler which is executed when user clicks on a button options.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.ShowOptionsSeparator">
 <summary>
 Gets or sets value indicating whether to render a vertical line between the button text and "Options" arrow.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.Text">
 <summary>
 Gets or sets a button text.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.ImagePath">
 <summary>
 Gets or sets a button image path.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.Image">
 <summary>
 Gets or sets a button image (can be overrided with "ImagePath" property).
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.Icon">
 <summary>
 Stores and retrieves the predefined button icon. Icons wins over images!
 </summary>
 <value>KnownIcon</value>
 <returns>The predefined button icon.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.OnClientClick">
 <summary>
 Gets or sets a Javascript handler which is executed when user clicks on a button.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.Divide">
 <summary>
 Gets or sets button division type.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.Disabled">
 <summary>
 Gets or sets value indicating whether button is disabled.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.Size">
 <summary>
 Stores and retrieves the size of the button image.
 </summary>
 <value>Icons.Icon.Size</value>
 <returns>The size of the button image.</returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.ModuleSystemName">
 <summary>
 Get and set required module to see this item
 </summary>
 <value>A valid module system name</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.Version">
 <summary>
 Get and set minimum required version to use the button
 </summary>
 <value>String</value>
 <returns>Button text.</returns>
 <remarks>If empty it is allowed</remarks>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.ShowWait">
 <summary>
 Gets or sets a value indicating whether a wait overlay will be displayed when button is clicked.
 </summary>
 <value><c>true</c> if [show wait]; otherwise, <c>false</c>.</value>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.WaitMessage">
 <summary>
 Gets or sets the wait message to show when button is pressed if <see cref="P:Dynamicweb.Controls.ToolbarButton.ShowWait">ShowWait</see> is enabled.
 </summary>
 <value>The wait message. Default is nothing</value>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.WaitTimeout">
 <summary>
 Gets or sets the wait timeout in ms.
 </summary>
 <value>The wait timeout. Default is 0, meaning it will run untill stopped.</value>
</member>
<member name="P:Dynamicweb.Controls.ToolbarButton.KeyboardShortcut">
 <summary>
 Gets or sets the keboard shortcut for button
 </summary>
 <value></value>
</member>
<member name="T:Dynamicweb.Controls.ToolbarButton.Divider">
 <summary>
 Represents a toolbar button divider type.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ToolbarButton.Divider.None">
 <summary>
 No divider.
 </summary>F
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ToolbarButton.Divider.Before">
 <summary>
 Put divider before the button.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.ToolbarButton.Divider.After">
 <summary>
 Put divider after the button.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ToolbarButton.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ToolbarButton.#ctor(System.String,System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="id">Control ID.</param>
 <param name="text">Button text.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ToolbarButton.#ctor(System.String,System.String,System.String,System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="id">Control ID.</param>
 <param name="text">Button text.</param>
 <param name="imagePath">Button image path.</param>
 <param name="onClientClick">Script that is executed when the button is clicked.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ToolbarButton.#ctor(System.String,System.String,Dynamicweb.Controls.Icons.Icon.Type,System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="id">Control ID.</param>
 <param name="text">Button text.</param>
 <param name="image">Button image.</param>
 <param name="onClientClick">Script that is executed when the button is clicked.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ToolbarButton.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders toolbar button.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render button into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.ToolbarButton.KeyboardShortcutAppend(System.Web.UI.HtmlTextWriter,System.String,System.String)">
 <summary>
 Appends keyboard shortcut to a toolbar button
 </summary>
 <param name="writer"></param>
 <param name="action">Action to perform on shortcut fires</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.ToolbarButtonCollection">
 <summary>
 Represents a collection of toolbar buttons.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TreeNodeExpandedEventArgs">
 <summary>
 Represents an event arguments to be sent when "OnExpand" event occured.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNodeExpandedEventArgs.Node">
 <summary>
 Gets or sets the expanded node.
 </summary>
 <value>Expanded node.</value>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNodeExpandedEventArgs.ChildNodes">
 <summary>
 Gets or sets the collection of nodes to be displayed as children of the expanded node.
 </summary>
 <value>A collection of nodes to be displayed as children of the expanded node.</value>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNodeExpandedEventArgs.CustomArgument">
 <summary>
 Gets or sets a custom attribute that the OnNodeExpand can use
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeNodeExpandedEventArgs.#ctor">
 <summary>
 Creates a new instance of a class.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeNodeExpandedEventArgs.#ctor(Dynamicweb.Controls.TreeNode)">
 <summary>
 Creates a new instance of a class.
 </summary>
 <param name="node">Expanded node.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TreeNodeEditEventArgs">
 <summary>
 Provides information about edited tree node.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNodeEditEventArgs.Name">
 <summary>
 Gets the new name of the node.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNodeEditEventArgs.Node">
 <summary>
 Gets the node that is being edited.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeNodeEditEventArgs.#ctor(Dynamicweb.Controls.TreeNode,System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <param name="node">Tree node that is being edited.</param>
 <param name="name">New name of the node.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.Tree">
 <summary>
 Represents a tree.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.Tree.NodeExpand">
 <summary>
 Asynchronously fired when a tree node is being expanded.
 </summary>
 <remarks></remarks>
</member>
<member name="E:Dynamicweb.Controls.Tree.NodeEdit">
 <summary>
 Occurs after the tree node's name has been edited.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.EnableControlMenu">
 <summary>
 Gets or sets value indicating whether to enable context menu in the sub-title of the tree.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.TranslateTitle">
 <summary>
 Gets or sets value indicating whether to automatically translate tree title.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.TranslateSubTitle">
 <summary>
 Gets or sets value indicating whether to automatically translate tree sub-title.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.DragAndDrop">
 <summary>
 Gets drag and drop settings.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.ToolbarButtons">
 <summary>
 Gets the collection of toolbar buttons for this tree.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.IsProcessingEvents">
 <summary>
 Gets value indicating whether tree is processing its events.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.ControlMenu">
 <summary>
 Gets an instance of <see cref="T:Dynamicweb.Controls.ContextMenu">ContextMenu</see> object that corresponds to the control menu from the list sub-title.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.NodeCount">
 <summary>
 Number of nodes - if specified it is displayed in the Navigation title.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.ContextMenuID">
 <summary>
 ID of Dynamicweb.Controls.Contextmenu to display on right click of the navigation area.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.ShowRoot">
 <summary>
 Show root node.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.ShowTitle">
 <summary>
 Gets or sets value indicating whether to show title.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.ShowSubTitle">
 <summary>
 Gets or sets value indicating whether to show sub-title.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.OpenTo">
 <summary>
 ID of node that the tree should open the path to.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.OpenAll">
 <summary>
 Expands all tree nodes.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.UseStatusText">
 <summary>
 Displays node names in the statusbar instead of the url.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.InOrder">
 <summary>
 If parent nodes are always added before children, setting this to true speeds up the tree.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.CloseSameLevel">
 <summary>
 Only one node within a parent can be expanded at the same time. openAll() and closeAll() functions do not work when this is enabled. 
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.UseIcons">
 <summary>
 Tree is drawn with icons. 
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.UseLines">
 <summary>
 Tree is drawn with lines.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.UseCookies">
 <summary>
 The tree uses cookies to rember it's state. 
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.UseSelection">
 <summary>
 Nodes can be selected (highlighted). 
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.FolderLinks">
 <summary>
 Should folders be links.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.Target">
 <summary>
 Target for all the nodes. Can be overridden on the TreeNode.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.Title">
 <summary>
 Title of the tree.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.SubTitle">
 <summary>
 Subtitle of the tree.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.InstanceID">
 <summary>
 ID that should be set when using more than one tree on a page - must be unique. 
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.LoadOnDemand">
 <summary>
 Gets or sets value indicating whether to load tree levels on-the-fly.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.LoadedNodesStorageName">
 <summary>
 Gets the session item name for the loaded on demand tree nodes.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.LoadedNodes">
 <summary>
 Gets or sets tree nodes loaded on demand.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.ClientNodeComparator">
 <summary>
 javascript sort comparator of the tree nodes.
 </summary>
 <remarks>the function prototype is: function(a, b) where a,b is node ids, use tree.aNodesIndex.selectById to get node by id</remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.CanRenderControlMenu">
 <summary>
 Gets value indicating whether control menu should be rendered.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.ImageOpenPath">
 <summary>
 Path of icon used - can be used to overwrite the built-in icons in the ImageOpen property.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.ImageClosePath">
 <summary>
 Path of icon used - can be used to overwrite the built-in icons in the ImageClose property.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.ImagePath">
 <summary>
 Path of icon used - can be used to overwrite the built-in icons in the Image property.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.Tree.AfterClientCheck">
 <summary>
 Occurs after client checked tree node.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Tree.Control_OnLoad(System.Object,System.EventArgs)">
 <summary>
 Handles tree "OnLoad" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Tree.Control_PreRender(System.Object,System.EventArgs)">
 <summary>
 Handles tree "PreRender" event.
 </summary>
 <param name="sender">Event sender.</param>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Tree.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders tree.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render tree into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Tree.OnNodeEdit(Dynamicweb.Controls.TreeNodeEditEventArgs)">
 <summary>
 Raises "NodeEdit" event.
 </summary>
 <param name="e">Event arguments.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Tree.RegisterAsDynamic(Dynamicweb.Controls.TreeNode[])">
 <summary>
 Registers specified nodes as "dynamic" nodes (loaded by demand).
 </summary>
 <param name="nodes">Nodes to register.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Tree.RaisePostBackEvent(System.String)">
 <summary>
 Fires when postback event is occured.
 </summary>
 <param name="eventArgument">Event argument passed from the client.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Tree.ProcessNodeEdit(System.String)">
 <summary>
 Processes node edit request.
 </summary>
 <param name="eventArgument">Event argument.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Tree.GetSerializedNodes(Dynamicweb.Controls.TreeNodeCollection,System.Int32)">
 <summary>
 Retrieves JSON representation of the tree nodes.
 </summary>
 <param name="nodes">Nodes to be precessed.</param>
 <param name="parentID">The parent ID of all nodes.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Tree.JSONValue(System.String)">
 <summary>
 Retrieves JSON-safe value.
 </summary>
 <param name="value">Value to be precessed.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Tree.NodeFound(Dynamicweb.Controls.TreeNode)">
 <summary>
 Determines whether specified node meets requirements. 
 </summary>
 <param name="node">Node to be examined.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.Tree.GetParentNodes(Dynamicweb.Controls.TreeNode)">
 <summary>
 Get parents of node from root of tree
 </summary>
 <param name="node">Node to find in tree.</param>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TreeDragDropPermission">
 <summary>
 Represents drag and drop permissions.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.TreeDragDropPermission.Allow">
 <summary>
 Allow action.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.TreeDragDropPermission.Deny">
 <summary>
 Deny action.
 </summary>
 <remarks></remarks>
</member>
<member name="F:Dynamicweb.Controls.TreeDragDropPermission.Inherit">
 <summary>
 Inherit permissions from the parent.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TreeDragDropExtendedSettings">
 <summary>
 Provides methods and properties to support extended drag and drop functionality.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeDragDropExtendedSettings.OnClientDragStart">
 <summary>
 Gets or sets additional client-side script that executes when drag operation is initiated.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeDragDropExtendedSettings.OnClientDragOver">
 <summary>
 Gets or sets additional client-side script that executes when drag source moves over drop target.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeDragDropExtendedSettings.OnClientDrop">
 <summary>
 Gets or sets additional client-side script that executes when drop operation is occured.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeDragDropExtendedSettings.OnClientDragEnd">
 <summary>
 Gets or sets additional client-side script that executes when drag operation is finished.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeDragDropExtendedSettings.ToString">
 <summary>
 Gets the JSON string representing a settings.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeDragDropExtendedSettings.DeclareMethod(System.String)">
 <summary>
 Gets the JSON method declaration.
 </summary>
 <param name="method">Method to declare.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TreeDragDropSettings">
 <summary>
 Provides methods and properties to support basic drag and drop functionality.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeDragDropSettings.AllowDrag">
 <summary>
 Gets or sets value indicating whether element accepts drag operation.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeDragDropSettings.AllowDrop">
 <summary>
 Gets or sets value indicating whether element accepts drop operation.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeDragDropSettings.AllowAutoExpand">
 <summary>
 Gets or sets value indicating whether to expand the node when the draggable is placed over it.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeDragDropSettings.ToString">
 <summary>
 Gets the JSON string representing a settings.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeDragDropSettings.EscapeQuotes(System.String)">
 <summary>
 Escapes all double quotes in a string.
 </summary>
 <param name="str">String to examine.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TreeNode">
 <summary>
 Represents a tree node.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.NodeID">
 <summary>
 ID of the node.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.ItemID">
 <summary>
 Custom ItemID that can be used to set a unique reference to an object.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.Href">
 <summary>
 Href or link for the node.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeNode.SetAttribute(System.String@,System.String@)">
 <summary>
 Additional attributes for the tree node. 
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.Title">
 <summary>
 Title for the node.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.ContextMenuID">
 <summary>
 ID of Dynamicweb.Controls.Contextmenu to display on right click.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.Target">
 <summary>
 Target for the href. 
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.Open">
 <summary>
 Is the node open.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.Checked">
 <summary>
 Is the node checked.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.Checkable">
 <summary>
 Gets or sets value indicating whether to enable check box in node.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.ParentID">
 <summary>
 The parent ID of the node. Should be an ID that is in the tree or -1 for Root.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.Name">
 <summary>
 Name of the node.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.AdditionalCssClass">
 <summary>
 Additioanl class of the node.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.ImageOpenPath">
 <summary>
 Path of icon used - can be used to overwrite the built-in icons in the ImageOpen property.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.ImageClosePath">
 <summary>
 Path of icon used - can be used to overwrite the built-in icons in the ImageClose property.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.ImagePath">
 <summary>
 Path of icon used - can be used to overwrite the built-in icons in the Image property.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.ImageOpen">
 <summary>
 Image file to use as the open icon. Uses Folder if not specified. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.ImageClose">
 <summary>
 Image file to use as the close icon. Uses FolderClosed if not specified. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.Image">
 <summary>
 Image file to use as the icon. Uses default if not specified.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.HasChildren">
 <summary>
 Gets or sets value indicating whether this node has child nodes and should have 'Expand' icon.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.Disabled">
 <summary>
 Sets or gets whether this TreeNodes icon should be dimmed
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.OnDoubleClick">
 <summary>
 Sets or gets the ondblclick event on this node
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.DragAndDrop">
 <summary>
 Gets drag and drop settings.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.Icon">
 <summary>
 Icon
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeNode.IconColor">
 <summary>
 Icon color
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeNode.Render(System.Web.UI.HtmlTextWriter)">
 <summary>
 Renders tree node.
 </summary>
 <param name="writer">The instance of the HtmLTextWriter to render tree node into.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeNode.CopyFrom(Dynamicweb.Controls.TreeNode)">
 <summary>
 Copies property values from the given node to the current node.
 </summary>
 <param name="node">Source node.</param>
 <exception cref="T:System.ArgumentNullException"><paramref name="node">node</paramref> is null.</exception>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TreeNodeCollection">
 <summary>
 Represents a collection of tree nodes.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TreeToolbarButton">
 <summary>
 Represents a tree toolbar button.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeToolbarButton.Title">
 <summary>
 Gets or sets the title of the button.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeToolbarButton.TranslateTitle">
 <summary>
 Gets or sets value indicating whether to automatically translate button's title.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeToolbarButton.CssClass">
 <summary>
 Gets or sets the CSS class to be applied to this button.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeToolbarButton.OnClientClick">
 <summary>
 Gets or sets client-side script that executes when button's "Click" event is raised.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeToolbarButton.Icon">
 <summary>
 Gets or sets the "Normal" state icon.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeToolbarButton.IconOver">
 <summary>
 Gets or sets the "Over" state icon.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeToolbarButton.IconPress">
 <summary>
 Gets or sets the "Press" state icon.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeToolbarButton.IconPath">
 <summary>
 Gets or sets the "Normal" state icon path.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeToolbarButton.IconOverPath">
 <summary>
 Gets or sets the "Over" state icon path.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.TreeToolbarButton.IconPressPath">
 <summary>
 Gets or sets the "Press" state icon path.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeToolbarButton.RenderControl(System.Web.UI.HtmlTextWriter)">
 <summary>
 Outputs button content to a provides <see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object.
 </summary>
 <param name="writer"><see cref="T:System.Web.UI.HtmlTextWriter">HtmlTextWriter</see> object that receives control content.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeToolbarButton.CreateEventHandlers(System.Web.UI.HtmlControls.HtmlButton)">
 <summary>
 Creates client-side event handler for specified image tag.
 </summary>
 <param name="button">Button tag to create client-side event handlers for.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeToolbarButton.GetIconPath(Dynamicweb.Controls.Icons.Icon.Type,System.String)">
 <summary>
 Retrieves icon path for specified icon.
 </summary>
 <param name="iconType">Icon type.</param>
 <param name="customIcon">Custom icon (if specified).</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.TreeToolbarButton.GetEventCallback(System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Regrieves button event callback.
 </summary>
 <param name="eventType">Event type.</param>
 <param name="arguments">Event arguments.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.TreeToolbarButtonCollection">
 <summary>
 Represents a collection of tree toobar buttons.
 </summary>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.DNSLookup">
 <summary>
 Represent DNS lookup 
 </summary>
</member>
<member name="M:Dynamicweb.Controls.DNSLookup.DnsQuery(System.String,System.UInt16,System.UInt32,System.UInt32,System.IntPtr@,System.UInt32)">
 <summary>
 Dll Entrypoint for DNS Services
 </summary>
 <param name="lpstrName">Name of the LPSTR.</param>
 <param name="wType">Type of the w.</param>
 <param name="fOptions">The f options.</param>
 <param name="t1">The t1.</param>
 <param name="prr">The PRR.</param>
 <param name="t3">The t3.</param><returns></returns>
</member>
<member name="M:Dynamicweb.Controls.DNSLookup.LookupMX(System.String,System.String@)">
 <summary>
 Lookups the MX records.
 </summary>
 <param name="strDomain">The domain.</param><returns></returns>
</member>
<member name="M:Dynamicweb.Controls.DNSLookup.LookupMXRecords(System.String,System.String@)">
 <summary>
 Lookups the MX records.
 </summary>
 <param name="strDomain">The domain.</param>
 <param name="errorMsg">The error message.</param>
 <returns>True if the domain is valid, otherwise False</returns>
</member>
<member name="M:Dynamicweb.Controls.DNSLookup.Lookup(System.String@,System.UInt16,System.UInt32,System.String@)">
 <summary>
 Used to verify a domain for any type of record
 </summary>
 <param name="strDomain"></param>
 <returns></returns>
</member>
<member name="M:Dynamicweb.Controls.DNSLookup.GetData(System.IntPtr,Dynamicweb.Controls.DNSLookup.DNS_RECORD@,System.Object@)">
 <summary>
 Gets the data.
 </summary>
 <param name="pointer">The pointer.</param>
 <param name="dnsRecord">The DNS record.</param>
 <param name="Data">The data.</param>
</member>
<member name="T:Dynamicweb.Controls.DNSLookup.DNS_RECORD">
 <summary>
 Structure for the actual DNS Record
 </summary>
</member>
<member name="T:Dynamicweb.Controls.DNSLookup.DNS_WRAPPER">
 <summary>
 Structure for the DNS_WRAPPER
 </summary>
</member>
<member name="T:Dynamicweb.Controls.DNSLookup.DNS_MX_DATA">
 <summary>
 Structure for the DNS_MX_DATA
 </summary>
</member>
<member name="T:Dynamicweb.Controls.DNSLookup.DNSTypes">
 <summary>
 Structure for the DNSTypes
 </summary>
</member>
<member name="F:Dynamicweb.Controls.DNSLookup.DNSTypes.DNS_TYPE_MX">
 <summary>
 Various DNS record types
 </summary>
</member>
<member name="F:Dynamicweb.Controls.DNSLookup.DNSTypes.DNS_QUERY_STANDARD">
 <summary>
 Various DNS query types
 </summary>
</member>
<member name="P:Dynamicweb.Controls.RecipientInfo.ID">
 <summary>
 Gets or sets the ID of recipient
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RecipientInfo.Name">
 <summary>
 Gets or sets recipient name.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RecipientInfo.Email">
 <summary>
 Gets or sets recipient e-mail address.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RecipientInfo.ErrorMessage">
 <summary>
 Gets or sets error message.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RecipientInfo.RemovePermission">
 <summary>
 Gets or sets value which indicate whether this recipient has permission to send email or not.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.RecipientInfo.IsHidden">
 <summary>
 Gets or sets value which indicate whether this recipient is hidden or not.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RecipientInfo.#ctor">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.RecipientInfo.#ctor(System.String,System.String,System.String)">
 <summary>
 Initializes a new instance of an object.
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.PagePermissionTree.ObjectType">
 <summary>
 Gets or sets which type of object to view page permissions for
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.PagePermissionTree.ObjectID">
 <summary>
 Gets or sets the ID of the object to view page permissions for
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:Dynamicweb.Controls.UserGroupListFilter">
 <summary>
 A user group ListFilter
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.UserGroupListFilter.CompatibleWithOldExtranet">
 <summary>
 When set to True, the GroupSelector can only choose groups from the group 'Extranet' (ID 255) and down.
 Default is False.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.UserGroupListFilter.GroupID">
 <summary>
 Gets or sets the groupID of the selected group
 </summary>
</member>
<member name="P:Dynamicweb.Controls.UserGroupListFilter.ShowSubmitButton">
 <summary>
 Gets or sets value indicating whether to show "Submit" button.
 </summary>
</member>
<member name="P:Dynamicweb.Controls.UserGroupListFilter.WaterMarkText">
 <summary>
 Gets or sets text that is displayed when no group is selected
 </summary>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.UserGroupListFilter.CachedUsers">
 <summary>
 Set this UserCollection to all the users you want the filter to find. If this is not set the general API will be used to fetch users
 </summary>
 <value></value>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.UserGroupListFilter.Initialize(Dynamicweb.Controls.List)">
 <summary>
 Initializes a filter.
 </summary>
 <param name="owner">A reference to a <see cref="T:Dynamicweb.Controls.List">List</see> control which is current filter should be attached to.</param>
 <remarks></remarks>
</member>
<member name="P:Dynamicweb.Controls.UserSelector.DiscoverHiddenItems">
 <summary>
 Gets or sets value indicating whether user can expand long list of users/groups by clicking "Show more" link.
 </summary>
 <remarks>Setting this property to "True" will override the value of the "AdditionalTextLink" property.</remarks>
</member>
<member name="P:Dynamicweb.Controls.UserSelector.IsProcessingEvents">
 <summary>
 Gets value indicating whether control is processing either synchronous or asynchronous events.
 </summary>
 <remarks></remarks>
 
</member>
<member name="P:Dynamicweb.Controls.UserSelector.HideAdmins">
 <summary>
 If set to True, then the admins ('Admin' and 'Administrator') can not be selected in this UserSelector
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.UserSelector.LoadResources">
 <summary>
 Loads control resources.
 </summary>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.UserSelector.RaisePostBackEvent(System.String)">
 <summary>
 Raises postback event.
 </summary>
 <param name="eventArgument">Event argument.</param>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.UserSelector.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
 <summary>
 Processes postback data for an ASP.NET server control.
 </summary>
 <param name="postDataKey">The key identifier for the control.</param>
 <param name="postCollection">The collection of all incoming name values.</param>
 <returns>true if the server control's state changes as a result of the postback; otherwise, false.</returns>
 <remarks></remarks>
</member>
<member name="M:Dynamicweb.Controls.UserSelector.RaisePostDataChangedEvent">
 <summary>
 Signals the server control to notify the ASP.NET application that the state of the control has changed.
 </summary>
 <remarks></remarks>
</member>
</members>
</doc>
