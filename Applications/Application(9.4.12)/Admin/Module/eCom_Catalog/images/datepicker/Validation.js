/*  Basic Frame Inc. 2004-2005. All rights are reserved. Unauthorized use prohibited. Visit http://www.basicdatepicker.com/ for more info. Version 1.1.1959  */function BasicGetSelectedDate(bdpId, controlType){if(controlType == "BasicFrame.WebControls.BasicDatePicker"){var bdp = BasicDatePickerLoadControl(bdpId);var date = bdp.getSelectedDate();return date;}else{var bdp = BDPLiteLoadControl(bdpId);var date = bdp.getSelectedDate();return date;}}function BasicCompareValidatorEvaluateIsValid(val){var date1 = BasicGetSelectedDate(val.controltovalidate, val.controltype);var value;if (date1 == null)value = "";else value = (date1.getMonth()+1) + "/" + date1.getDate() + "/" + date1.getFullYear();var compareTo = "";if (null == document.all[val.controltocompare]){compareTo = val.valuetocompare;}else{var date2 = BasicGetSelectedDate(val.controltocompare, val.controltocomparetype);if (date2 == null)compareTo = "";else compareTo = (date2.getMonth()+1) + "/" + date2.getDate() + "/" + date2.getFullYear();}return BasicValidatorCompare(value, compareTo, val.operator, val);}function BasicValidatorCompare(operand1, operand2, operator, val){var dataType = val.type;var op1 = ValidatorConvert(operand1, dataType, val);var op2 = ValidatorConvert(operand2, dataType, val);if(op1 == null && op2 == null || operator == "DataTypeCheck")return true;switch (operator){case "NotEqual":return (op1 != op2);case "GreaterThan":return (op1 > op2);case "GreaterThanEqual":return (op1 >= op2);case "LessThan":return (op1 < op2);case "LessThanEqual":return (op1 <= op2);default:return (op1 == op2);            }}function BasicDifferenceValidatorEvaluateIsValid(val){var date = BasicGetSelectedDate(val.controltovalidate, val.controltype);var date2 = BasicGetSelectedDate(val.controltocompare, val.controltocomparetype);if(date == null && date2 == null)return true;else if(date == null || date2 == null)return false;var dayAsMs = 1000 * 60 * 60 * 24;var dateAsMs = date.getTime();var date2AsMs = date2.getTime();var days = Math.round((date2AsMs - dateAsMs)/dayAsMs) + ""; /* needs to be a string for regex */var compareTo = val.difference;return ValidatorCompare(days, compareTo, val.operator, val);}function BasicCustomValidatorEvaluateIsValid(val){var date = BasicGetSelectedDate(val.controltovalidate);if(date == null)return true;var args = { Value:date, IsValid:true };if(typeof(val.clientvalidationfunction) == "string")eval(val.clientvalidationfunction + "(date, args) ;");return args.IsValid;}function BasicRegularExpressionValidatorEvaluateIsValid(val){var value = document.getElementById(val.controltovalidate + "_textBox").value;if(ValidatorTrim(value).length == 0)return true;var rx = new RegExp(val.validationexpression);var matches = rx.exec(value);return (matches != null && value == matches[0]);}function BasicRequiredFieldValidatorEvaluateIsValid(val){var selectedDate = BasicGetSelectedDate(val.controltovalidate, val.controltype);return (!(selectedDate == null));}function BasicRangeValidatorEvaluateIsValid(val){var date = BasicGetSelectedDate(val.controltovalidate, val.controltype);if (date == null) return true;var value = (date.getMonth()+1) + "/" + date.getDate() + "/" + date.getFullYear();return (ValidatorCompare(value, val.minimumvalue, "GreaterThanEqual", val) && ValidatorCompare(value, val.maximumvalue, "LessThanEqual", val));}