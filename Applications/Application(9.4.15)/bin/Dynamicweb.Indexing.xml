<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dynamicweb.Indexing</name>
    </assembly>
    <members>
        <member name="T:Dynamicweb.Indexing.Balancing.LastUpdated">
            <summary>
            Represents ActivePassive index balancer class
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Balancing.LastUpdated.Index">
            <summary>
            Gets or sets index
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Balancing.LastUpdated.GetInstance">
            <summary>
            Gets index provider instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Balancing.LastUpdated.SetInstance(System.String)">
            <summary>
            Sets active instance
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Dynamicweb.Indexing.Balancing.LastUpdated.Type">
            <summary>
            Gets the fullname of the type
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Balancing.ActivePassive">
            <summary>
            Represents ActivePassive index balancer class
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Balancing.ActivePassive.Index">
            <summary>
            Gets or sets index
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Balancing.ActivePassive.GetInstance">
            <summary>
            Gets index provider instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Balancing.ActivePassive.SetInstance(System.String)">
            <summary>
            Sets active instance
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Dynamicweb.Indexing.Balancing.ActivePassive.Type">
            <summary>
            Gets the fullname of the type
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification">
            <summary>
            The Class IndexBuilderNotification represents index builder notification
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification.NotificationType">
            <summary>
            Notification type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification.Recipients">
            <summary>
            List of notification recipients
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification.SenderEmail">
            <summary>
            Notification sender email
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification.SenderName">
            <summary>
            Notification sender name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification.Subject">
            <summary>
            Notification subject
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification.Template">
            <summary>
            Notification template
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification.SendLog">
            <summary>
            Send log file in the notification
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification"/> class.
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification.#ctor(System.Xml.Linq.XElement)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification"/> class.
            </summary>
            <param name="element">The element.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification.#ctor(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotification"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="T:Dynamicweb.Indexing.Builders.Notifications.IndexBuilderNotificationType">
            <summary>
            /// <summary>
            The enum IndexBuilderNotificationType represents index builder notification type
            </summary>
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Builders.SqlIndexBuilder">
            <summary>
            Represents Sql Index Builder
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Builders.SqlIndexBuilder.SupportedActions">
            <summary>
            List of supported actions
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Builders.SqlIndexBuilder.DefaultSettings">
            <summary>
            Gets default settings collection
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Builders.SqlIndexBuilder.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Builders.SqlIndexBuilder.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Creates new object using settings data
            </summary>
            <param name="settings"></param>
        </member>
        <member name="M:Dynamicweb.Indexing.Builders.SqlIndexBuilder.GetFields">
            <summary>
            Gets index builder fields
            </summary>
            <returns>Set of key-value pairs</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Builders.SqlIndexBuilder.Build(Dynamicweb.Indexing.IIndexWriter,Dynamicweb.Diagnostics.Tracking.Tracker)">
            <summary>
            Builds current sql index
            </summary>
            <param name="writer"></param>
            <param name="tracker"></param>
        </member>
        <member name="T:Dynamicweb.Indexing.IIndexBuilderExtender`1">
            <summary>
            Defines Index builder extender operations
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexBuilderExtender`1.ExtendDocument(Dynamicweb.Indexing.IndexDocument)">
            <summary>
            Defines Extend document operation
            </summary>
            <param name="indexDocument">IndexDocument object instance</param>
        </member>
        <member name="T:Dynamicweb.Indexing.IIndexBuilderNotification">
            <summary>
            Defines Index builder notification
            </summary>	
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilderNotification.SenderName">
            <summary>
            Notification sender name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilderNotification.SenderEmail">
            <summary>
            Notification sender email
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilderNotification.Recipients">
            <summary>
            List of notification recipients
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilderNotification.Subject">
            <summary>
            Notification subject
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilderNotification.Template">
            <summary>
            Notification template
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilderNotification.SendLog">
            <summary>
            Send log file in the notification
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilderNotification.NotificationType">
            <summary>
            Notification type
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.IIndexSchemaExtender">
            <summary>
            Defines operations which are specific for Index Schema Extender
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.IndexBuilderBase">
            <summary>
            Defines index builder base operations
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexBuilderBase.Name">
            <summary>
            Index builder name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexBuilderBase.Type">
            <summary>
            Index builder type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexBuilderBase.Action">
            <summary>
            Index builder action
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexBuilderBase.Settings">
            <summary>
            Settings
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexBuilderBase.Meta">
            <summary>
            Meta information
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexBuilderBase.Extenders">
            <summary>
            List of Index builder extenders
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexBuilderBase.Schema">
            <summary>
            Schema
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexBuilderBase.SupportedActions">
            <summary>
            List of supported actions
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexBuilderBase.Build(Dynamicweb.Indexing.IIndexWriter,Dynamicweb.Diagnostics.Tracking.Tracker)">
            <summary>
            
            </summary>
            <param name="writer"></param>
            <param name="tracker"></param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexBuilderBase.GetFields">
            <summary>
            Defines GetFields required operation
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexBuilderBase.Notification">
            <summary>
            Gets or sets notification
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexBuilderBase.DefaultSettings">
            <summary>
            Default settings
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.IndexBuilderExtenderBase`1">
            <summary>
            Base class for IndexBuilderExtender types
            </summary>
            <typeparam name="T">Type of IndexBuilder</typeparam>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexBuilderExtenderBase`1.ExtendDocument(Dynamicweb.Indexing.IndexDocument)">
            <summary>
            Extends document
            </summary>
            <param name="indexDocument">Index document instance</param>
        </member>
        <member name="T:Dynamicweb.Indexing.IndexHelper">
            <summary>
            Class provides auxiliary methods
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.LoadIndex(Dynamicweb.Indexing.IIndexService,System.String,Dynamicweb.Indexing.RepositoryFileFormat)">
            <summary>
            Loads index
            </summary>
            <param name="indexService">Index service instance</param>
            <param name="filename">Index file name</param>
            <param name="fileFormat">Index file format</param>
            <returns>Index object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.SaveIndex(Dynamicweb.Indexing.IIndexService,System.String,Dynamicweb.Indexing.IIndex,Dynamicweb.Indexing.RepositoryFileFormat)">
            <summary>
            Saves index
            </summary>
            <param name="indexService">Index service instance</param>
            <param name="fileName">Index file name</param>
            <param name="index">Index instance</param>
            <param name="fileFormat">Index file format</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.ConvertToIndex(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Converts json object to index
            </summary>
            <param name="obj">Json data</param>
            <returns>IIndex based object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.ConvertToIndex(System.Xml.Linq.XElement)">
            <summary>
            Converts json object to index
            </summary>
            <param name="obj">Xml data</param>
            <returns>IIndex based object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.ConvertToJson(Dynamicweb.Indexing.IIndex)">
            <summary>
            Converts index to json format
            </summary>
            <param name="index">Index object instance</param>
            <returns>Json data of object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.ConvertToXml(Dynamicweb.Indexing.IIndex)">
            <summary>
            Converts index instance data to xml element
            </summary>
            <param name="index">Index instance</param>
            <returns><see cref="T:System.Xml.Linq.XElement"/> instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.Merge(Newtonsoft.Json.Linq.JObject,Dynamicweb.Indexing.IIndex)">
            <summary>
            Merges json data to index
            </summary>
            <param name="json">Json data</param>
            <param name="index">Index instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.Merge(System.Xml.Linq.XElement,Dynamicweb.Indexing.IIndex)">
            <summary>
            Merges XElement data to index
            </summary>
            <param name="element">XElement instance</param>
            <param name="index">Index instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.IsInstanceAvailable(Dynamicweb.Indexing.IIndexProvider)">
            <summary>
            Shows if instance available
            </summary>
            <param name="instance">IndexProvider Instance</param>
            <returns>True if instance is available</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.GetInstanceLatestStatus(System.String,System.String,System.String)">
            <summary>
            Gets instance last build status
            </summary>
            <param name="repository">Repository name</param>
            <param name="index">Index name</param>
            <param name="instance">Instance name</param>
            <returns>Last build status. Null if build was not ever made</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.IsInstanceAvailable(System.String,System.String,System.String)">
            <summary>
            Shows if instance available
            </summary>
            <param name="repository">Repository name</param>
            <param name="index">Index name</param>
            <param name="instance">Instance name</param>
            <returns>True if instance is available</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.SendIndexBuildFinishedNotification(Dynamicweb.Diagnostics.Tracking.Tracker,Dynamicweb.Indexing.IIndexBuilderNotification)">
            <summary>
            Sends index build finished notification
            </summary>
            <param name="tracker">The tracker</param>
            <param name="notificationSettings">The notification settings</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexHelper.CheckOldVersionTypeName(System.Type,System.String@)">
            <summary>
            Checks the older versions types and assigns the correct type
            </summary>
            <param name="currentType">Current type instance</param>
            <param name="typeName">Old version type name</param>
        </member>
        <member name="T:Dynamicweb.Indexing.IndexLocationResolver">
            <summary>
            Resolves index instance location based on specific interface class
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexLocationResolver.ResolveLocation(Dynamicweb.Indexing.IIndex)">
            <summary>
            Resolves index instance location
            </summary>
            <param name="index"><see cref="T:Dynamicweb.Indexing.IIndex"/> class</param>
            <returns>Specified index location</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.IndexProviderBase">
            <summary>
            Base index provider class
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexProviderBase.Index">
            <summary>
            Index provided by index provider
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexProviderBase.Name">
            <summary>
            Index provider name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexProviderBase.Type">
            <summary>
            Index provider type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexProviderBase.Settings">
            <summary>
            Index provider settings
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexProviderBase.IsAvailable">
            <summary>
            Shows if index is available
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexProviderBase.SupportedAnalyzers">
            <summary>
            List of supported analyzers
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexProviderBase.CreateWriter">
            <summary>
            Defines create writer operation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.IResumable">
            <summary>
            Defines "resume" behavior
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IResumable.Resume">
            <summary>
            Resumes operation
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Notifications.Index.IndexBuildFinished">
            <summary>
            Occurs when the item is being saved.
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Notifications.Index.IndexBuildFinishedArgs">
            <summary>
            Provides the information about the finished index build
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Notifications.Index.IndexBuildFinishedArgs.#ctor(Dynamicweb.Diagnostics.Tracking.Tracker,Dynamicweb.Indexing.IIndexBuilderNotification)">
            <summary>
            Initializes a new instance of an object.
            </summary>
            <param name="tracker">Build tracker.</param>
            <param name="notificationSettings">Build notification settings.</param>
            <remarks>Must be public due to calls from other project</remarks>
        </member>
        <member name="P:Dynamicweb.Indexing.Notifications.Index.IndexBuildFinishedArgs.NotificationSettings">
            <summary>
            Gets the build notification settings
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Notifications.Index.IndexBuildFinishedArgs.Tracker">
            <summary>
            Gets the build tracker
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.CodeExpression.DisplayValue">
            <summary>
            Gets the value to be shown on the UI page
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.CodeExpression.Type">
            <summary>
            Gets the type of the value.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.CodeExpression.TypeName">
            <summary>
            Gets the type of the value.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.CodeExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Querying.Expressions.CodeExpression"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.CodeExpression.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Querying.Expressions.CodeExpression"/> class by parsing the provided valueString and typeString.
            </summary>
            <param name="valueString">The value string to be parsed into the <see cref="P:Dynamicweb.Indexing.Querying.Expressions.CodeExpression.Type" /> defined by the typeString parameter.</param>
            <param name="typeString">The type string that defines the <see cref="P:Dynamicweb.Indexing.Querying.Expressions.CodeExpression.Type" /> of the valueString.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.CodeExpression.GetValue">
            <summary>
            Gets expression value
            </summary>
            <returns>The value</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.CodeExpression.ToString">
            <summary>
            Converts expression to string
            </summary>
            <returns>String representation of expression</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.FullTextSearchExpression">
            <summary>
            The Class FullTextSearchExpression represents text search expression.
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.FullTextSearchExpression.Fields">
            <summary>
            Gets or sets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.FullTextSearchExpression.SearchText">
            <summary>
            Gets or sets the search text.
            </summary>
            <value>
            The search text.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.FullTextSearchExpression.WildcardType">
            <summary>
            Gets or sets the type of wildcard search.
            </summary>
            <value>
            The type of wildcard search.
            </value>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.FullTextSearchExpression.#ctor(System.String[],System.String,Dynamicweb.Indexing.Querying.Expressions.FullTextSearchWildcardTypes)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Querying.Expressions.FullTextSearchExpression"/> class.
            </summary>
            <param name="fields">The field.</param>
            <param name="searchText">The source.</param>
            <param name="wildcardType">The type of wildcard search</param>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.FullTextSearchWildcardTypes">
            <summary>
            The wildcard search types enumeration.
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression">
            <summary>
            The Class BinaryExpression represents binary expression 
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression.Left">
            <summary>
            Gets or sets the left expression.
            </summary>
            <value>
            The left expression.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression.Right">
            <summary>
            Gets or sets the right expression.
            </summary>
            <value>
            The right expression.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression.Operator">
            <summary>
            Gets the operator.
            </summary>
            <value>
            The operator.
            </value>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression.#ctor(Dynamicweb.Indexing.Querying.Expressions.OperatorType,Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression"/> class.
            </summary>
            <param name="op">The operator.</param>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression.ToString">
            <summary>
            Converts expression to string type
            </summary>
            <returns>String expression in format "(Left Operator Right)"</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression">
            <summary>
            The Class ConstantExpression represents constant value expression 
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression.DataValue">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression.DisplayValue">
            <summary>
            Gets the value to be shown on the UI page
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression.Type">
            <summary>
            Gets the type of the value.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression.ValueType">
            <summary>
            Gets the type of the value.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression"/> class by parsing the provided valueString and typeString.
            </summary>
            <param name="valueString">The value string to be parsed into the <see cref="P:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression.Type" /> defined by the typeString parameter.</param>
            <param name="typeString">The type string that defines the <see cref="P:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression.Type" /> of the valueString.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression.GetValue">
            <summary>
            Gets expression value
            </summary>
            <returns>The value</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression.ToString">
            <summary>
            Converts expression to string
            </summary>
            <returns>String representation of expression</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.Expression">
            <summary>
            The Class Expression represents common expressions
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.Expression.Class">
            <summary>
            Gets expression type name
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.GreaterThan(Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the GreaterThan operator.
            </summary>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.GreaterThanOrEqual(Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the GreaterThanOrEqual operator.
            </summary>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.LessThan(Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the LessThan operator.
            </summary>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.LessThanOrEqual(Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the LessThanOrEqual operator.
            </summary>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Equal(Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the Equal operator.
            </summary>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.MatchAny(Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the MatchAny operator.
            </summary>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.MatchAll(Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the MatchAll operator.
            </summary>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Contains(Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the Contains operator.
            </summary>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.ContainsExtended(Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the Contains operator.
            </summary>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.In(Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the In operator.
            </summary>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Between(Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the Between operator.
            </summary>
            <param name="left">The left expression.</param>
            <param name="right">The right expression.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.And(System.Collections.Generic.IList{Dynamicweb.Indexing.Querying.Expressions.Expression})">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.GroupExpression" /> with the And operator.
            </summary>
            <param name="expressions">The expressions grouped by this <see cref="T:Dynamicweb.Indexing.Querying.Expressions.GroupExpression" />.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Or(System.Collections.Generic.IList{Dynamicweb.Indexing.Querying.Expressions.Expression})">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.GroupExpression" /> with the Or operator.
            </summary>
            <param name="expressions">The expressions grouped by this <see cref="T:Dynamicweb.Indexing.Querying.Expressions.GroupExpression" />.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Constant(System.Object)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.ConstantExpression" /> with the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Field(System.String,System.String)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.FieldExpression" /> with the specified values.
            </summary>
            <param name="fieldName">The field.</param>
            <param name="source">The source.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Parameter(System.String)">
            <summary>
            Creates a <see cref="T:Dynamicweb.Indexing.Querying.Expressions.ParameterExpression" /> with the specified parameter name.
            </summary>
            <param name="parameterName">Name of the variable.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Macro(System.String)">
            <summary>
            Creates a <see cref="T:Dynamicweb.Indexing.Querying.Expressions.MacroExpression" /> with the specified macro string.
            </summary>
            <param name="macroValue">The macro string for the value.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Term(System.Object)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.TermExpression" /> with the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Code(System.String)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.CodeExpression" /> with the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>Result expression</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Group(System.Boolean,Dynamicweb.Indexing.Querying.Expressions.OperatorType,System.Collections.Generic.List{Dynamicweb.Indexing.Querying.Expressions.Expression})">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.GroupExpression" /> with the specified value.
            </summary>
            <param name="negate">if set to <c>true</c> [negate].</param>
            <param name="op">The <see cref="T:Dynamicweb.Indexing.Querying.Expressions.OperatorType" />.</param>
            <param name="expressions">The expressions.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.Binary(Dynamicweb.Indexing.Querying.Expressions.OperatorType,Dynamicweb.Indexing.Querying.Expressions.Expression,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.BinaryExpression" /> with the specified value.
            </summary>
            <param name="op">The <see cref="T:Dynamicweb.Indexing.Querying.Expressions.OperatorType" />.</param>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.Expression.FullTextSearch(System.String[],System.String,Dynamicweb.Indexing.Querying.Expressions.FullTextSearchWildcardTypes)">
            <summary>
            Creates an <see cref="T:Dynamicweb.Indexing.Querying.Expressions.FullTextSearchExpression" /> with the specified search text, fields to look in and wildcard type.
            </summary>
            <param name="fields">The fields. If set to null searches in all fields.</param>
            <param name="searchText">The source.</param>
            <param name="wildcardType">The type of wildcard search</param>
            <returns></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.ExpressionHelper">
            <summary>
            The Class ExpressionHelper helps to work with expressions
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.ExpressionHelper.SerializeToXml(System.Xml.Linq.XElement,Dynamicweb.Indexing.Querying.Expressions.Expression)">
            <summary>
            Serializes an expression into xml element
            </summary>
            <param name="element">Xml element to be serialized into</param>
            <param name="expression">The expression to be serialized</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.ExpressionHelper.DeserializeFromJson(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Deserialize json object into expression
            </summary>
            <param name="element">Json element</param>
            <returns>Expression instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.ExpressionHelper.DeserializeFromXml(System.Xml.Linq.XElement)">
            <summary>
            Deserialize xml element into expression
            </summary>
            <param name="element">Xml element</param>
            <returns>Expression instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.ExpressionHelper.GetOperatorTypeSymbol(Dynamicweb.Indexing.Querying.Expressions.OperatorType)">
            <summary>
            Gets operator symbol
            </summary>
            <param name="operatorType">The operator</param>
            <returns>String representation of the operator</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.FieldExpression">
            <summary>
            The Class FieldExpression represents field based expression 
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.FieldExpression.Field">
            <summary>
            Gets or sets the field.
            </summary>
            <value>
            The field.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.FieldExpression.FieldName">
            <summary>
            Gets or sets the field.
            </summary>
            <value>
            The field.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.FieldExpression.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.FieldExpression.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Querying.Expressions.FieldExpression"/> class.
            </summary>
            <param name="fieldName">The field.</param>
            <param name="source">The source.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.FieldExpression.ToString">
            <summary>
            Converts field expression to string
            </summary>
            <returns>String representation of the field expression based on</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.GroupExpression">
            <summary>
            The Class FieldExpression represents expression which is actually is group of inner expressions combined by some rule
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.GroupExpression.Expressions">
            <summary>
            Gets collection of inner expressions
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.GroupExpression.Operator">
            <summary>
            Gets or sets expression operator
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.GroupExpression.Negate">
            <summary>
            Gets or sets value indicates if expression should be consider opposite
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.GroupExpression.ToString">
            <summary>
            Converts expression to string
            </summary>
            <returns>String representation of the group expression if it contains any inner expressions</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.JsonStringTypeConverter">
            <summary>
            The Class QueryJsonConverter represents json converter specified for string output
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.JsonStringTypeConverter.CanConvert(System.Type)">
            <summary>
            Indicates whether converter can convert the type
            </summary>
            <param name="objectType">Type of object</param>
            <returns>True if converter can convert the Type, otherwise - false</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.JsonStringTypeConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads json into string
            </summary>
            <param name="reader">Json writer</param>
            <param name="objectType">Type of object</param>
            <param name="existingValue">Existing value</param>
            <param name="serializer">Json serializer</param>
            <returns>Type object of reader value</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.JsonStringTypeConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes value using json writer
            </summary>
            <param name="writer">Json writer</param>
            <param name="value">The value to be written</param>
            <param name="serializer">Json serializer</param>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.MacroExpression">
            <summary>
            The Class MacroExpression represents Macro value expression 
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.MacroExpression.LookupString">
            <summary>
            Gets or sets the macro string for the value.
            </summary>
            <value>
            The macro.
            </value>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.MacroExpression.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Querying.Expressions.MacroExpression"/> class.
            </summary>
            <param name="lookupString">The macro.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.MacroExpression.GetValue">
            <summary>
            Gets the value associated with the Macro string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.MacroExpression.ToString">
            <summary>
            Converts macro expression to string
            </summary>
            <returns>String representation of the look up string expression based on</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.OperatorType">
            <summary>
            Expression operator enumeration
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.GreaterThan">
            <summary>
            An operator representing a "greater than" numeric comparison.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.GreaterThanOrEqual">
            <summary>
            An operator representing a "greater than or equal" numeric comparison.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.LessThan">
            <summary>
            An operator representing a "less than" numeric comparison.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.LessThanOrEqual">
            <summary>
            An operator representing a "less than or equal" numeric comparison.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.Equal">
            <summary>
            An operator representing an equality comparison.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.MatchAny">
            <summary>
            An operator representing a "match any" operator.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.MatchAll">
            <summary>
            An operator representing a "match all" operator.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.Contains">
            <summary>
            An operator representing a "containing" comparison.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.ContainsExtended">
            <summary>
            An operator representing a "containing" comparison with a leading *.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.In">
            <summary>
            An operator representing an inclusion comparison.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.Between">
            <summary>
            An operator representing a "between" comparison.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.And">
            <summary>
            An operator representing a logical AND operation.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.Or">
            <summary>
            An operator representing a logical OR operation.
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Expressions.OperatorType.IsEmpty">
            <summary>
            An operator representing a check for if the selected field is empty
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.ParameterExpression">
            <summary>
            The Class ParameterExpression represents parameter expression 
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.ParameterExpression.VariableName">
            <summary>
            Gets or sets variable name expression based on
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.ParameterExpression.ToString">
            <summary>
            Converts parameter expression to string
            </summary>
            <returns>String representation of the variable name string expression based on</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.TermExpression">
            <summary>
            The Class TermExpression represents a term value expression 
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.TermExpression.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.TermExpression.DisplayValue">
            <summary>
            Gets the value to be shown on the UI page
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Expressions.TermExpression.Type">
            <summary>
            Gets the type of the value.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.TermExpression.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Querying.Expressions.TermExpression"/> class.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.TermExpression.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Dynamicweb.Indexing.Querying.Expressions.TermExpression"/> class by parsing the provided valueString and typeString.
            </summary>
            <param name="valueString">The value string to be parsed into the <see cref="P:Dynamicweb.Indexing.Querying.Expressions.TermExpression.Type" /> defined by the typeString parameter.</param>
            <param name="typeString">The type string that defines the <see cref="P:Dynamicweb.Indexing.Querying.Expressions.TermExpression.Type" /> of the valueString.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.TermExpression.GetValue">
            <summary>
            Gets expression value
            </summary>
            <returns>The value</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.TermExpression.ToString">
            <summary>
            Converts expression to string
            </summary>
            <returns>String representation of expression</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Expressions.ValueExpression">
            <summary>
            The Class ValueExpression represents value expression
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Expressions.ValueExpression.GetValue">
            <summary>
            Gets the value that this ValueExpression represents.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Faceting.Facet">
            <summary>
            The Class Facet represents a facet used for splitting query results 
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.Facet.Name">
            <summary>
            Gets or sets facet name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.Facet.Type">
            <summary>
            Gets or sets facet type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.Facet.TypeName">
            <summary>
            Gets or sets facet type name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.Facet.QueryParameter">
            <summary>
            Gets or sets facet query parameter
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.Facet.Field">
            <summary>
            Gets or sets facet field
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.Facet.Options">
            <summary>
            Gets or sets facet options collection
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.Facet.Source">
            <summary>
            Gets or sets the source of the facet field
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Faceting.FacetGroup">
            <summary>
            The Class FacetGroup represents group of facets
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroup.FileName">
            <summary>
            Gets or sets facet group file name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroup.Name">
            <summary>
            Gets or sets facet group name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroup.Type">
            <summary>
            Gets or sets facet group type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroup.SubType">
            <summary>
            Gets or sets facet group sub type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroup.Description">
            <summary>
            Gets or sets description
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroup.Meta">
            <summary>
            Gets or sets meta information
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroup.Settings">
            <summary>
            Gets or sets settings collection
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroup.Source">
            <summary>
            Gets or sets facet group source
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroup.Items">
            <summary>
            Gets or sets containing facets
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroup.FieldsTermsCount">
            <summary>
            Gets or sets facets field terms count
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroup.#ctor">
            <summary>
            Initializes new instance of facet group
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Faceting.FacetGroupHelper">
            <summary>
            The Class FacetGroupHelper helps to work with facet groups
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupHelper.LoadFacets(Dynamicweb.Indexing.Querying.IQueryService,System.String,Dynamicweb.Indexing.Querying.Faceting.RepositoryFileFormat)">
            <summary>
            Loads facet group
            </summary>
            <param name="queryService">Query service instance</param>
            <param name="fileName">Path to query file in file system</param>
            <param name="fileFormat">Format of query</param>
            <returns>Query facet group</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupHelper.SaveFacets(Dynamicweb.Indexing.Querying.IQueryService,System.String,Dynamicweb.Indexing.Querying.Faceting.IFacetGroup,Dynamicweb.Indexing.Querying.Faceting.RepositoryFileFormat)">
            <summary>
            Saves facet group
            </summary>
            <param name="queryService">Query service instance</param>
            <param name="fileName">Path to query file in file system</param>
            <param name="facets">The facet group</param>
            <param name="fileFormat">Format of query</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupHelper.ConvertToFacets(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Converts json object into facet group
            </summary>
            <param name="obj">The object to be converted into facet group</param>
            <returns>Facet group instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupHelper.ConvertToFacets(System.Xml.Linq.XElement)">
            <summary>
            Converts xml element into facet group
            </summary>
            <param name="obj">The element to be converted into facet group</param>
            <returns>Facet group instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupHelper.ConvertToJson(Dynamicweb.Indexing.Querying.Faceting.IFacetGroup)">
            <summary>
            Converts facet group into json object
            </summary>
            <param name="facets">The facet group to be converted</param>
            <returns>Facet group in json object representation</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupHelper.ConvertToXml(Dynamicweb.Indexing.Querying.Faceting.IFacetGroup)">
            <summary>
            Converts facet group into xml element
            </summary>
            <param name="facets">The facet group to be converted</param>
            <returns>Facet group in xml element representation</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupHelper.Merge(Newtonsoft.Json.Linq.JObject,Dynamicweb.Indexing.Querying.Faceting.IFacetGroup)">
            <summary>
            Merges facet group to json object
            </summary>
            <param name="json">Json object instance</param>
            <param name="facets">Facet group instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupHelper.Merge(System.Xml.Linq.XElement,Dynamicweb.Indexing.Querying.Faceting.IFacetGroup)">
            <summary>
            Merges facet group to xml element
            </summary>
            <param name="element">Xml element instance</param>
            <param name="facets">Facet group instance</param>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Faceting.FacetGroupJsonConverter">
            <summary>
            The Class FacetGroupJsonConverter represents json converter specified for facet group
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroupJsonConverter.CanWrite">
            <summary>
            Gets value indicates whether converter can write
            </summary>  
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupJsonConverter.Create(System.Type,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Creates facet group from json object
            </summary>
            <param name="objectType">Type of object</param>
            <param name="jObject">Json object as base for facet group</param>
            <returns>Facet group instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes value using json writer
            </summary>
            <param name="writer">Json writer</param>
            <param name="value">The value to be written</param>
            <param name="serializer">Json serializer</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads json into facet group
            </summary>
            <param name="reader">Json writer</param>
            <param name="objectType">Type of object</param>
            <param name="existingValue">Existing value</param>
            <param name="serializer">Json serializer</param>
            <returns>Facet group as object</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupJsonConverter.CanConvert(System.Type)">
            <summary>
            Indicates whether converter can convert the type
            </summary>
            <param name="objectType">Type of object</param>
            <returns>True if converter can convert the Type, otherwise - false</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Faceting.FacetGroupResult">
            <summary>
            The Class FacetGroupResult represents query result for a facet group
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetGroupResult.FacetGroupName">
            <summary>
            Gets or sets name of related facet group
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupResult.#ctor">
            <summary>
            Initialize new instance of facet group result
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupResult.AddFacetResult(System.String,Dynamicweb.Indexing.Querying.Faceting.FacetResult)">
            <summary>
            Adds the facet result to the list of facet results for the given facet name.
            </summary>
            <param name="facetName">Name of the facet.</param>
            <param name="facetResult">The facet result.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupResult.ContainsFacetResults(System.String)">
            <summary>
            Determines whether a set of facet results exist for the specified facet name.
            </summary>
            <param name="facetName">Name of the facet.</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetGroupResult.GetFacetResults(System.String)">
            <summary>
            Gets the facet results.
            </summary>
            <param name="facetName">Name of the facet.</param>
            <returns></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Faceting.FacetOption">
            <summary>
            The Class FacetOption represents options of facet
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetOption.Name">
            <summary>
            Gets or sets facet option name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetOption.Value">
            <summary>
            Gets or sets facet option value
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Faceting.FacetResult">
            <summary>
            The Class FacetResult represents query result for a facet
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetResult.Name">
            <summary>
            Gets or sets name of facet result
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetResult.Label">
            <summary>
            Gets or sets label for facet result
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetResult.Value">
            <summary>
            Gets or sets value of facet result
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetResult.Selected">
            <summary>
            Gets or sets value indicates if the facet result is selected
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetResult.Count">
            <summary>
            Gets or sets facet result count
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetResult.Sort">
            <summary>
            Gets or sets the sort value for this option in the facet results.
            </summary>
            <value>A number indicating its sort order. 0 if not specified</value>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Faceting.FacetResultLabelComparer">
            <summary>
            The Class FacetResultLabelComparer used for comparing results based on facet result label 
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetResultLabelComparer.#ctor">
            <summary>
            Initializes new instance of facet result label comparer
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetResultLabelComparer.#ctor(System.Collections.Generic.IList{System.String})">
            <summary>
            Initializes new instance of facet result label comparer
            </summary>
            <param name="orderToMatch">Collection used for define priority between comparing results</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetResultLabelComparer.Compare(Dynamicweb.Indexing.Querying.Faceting.FacetResult,Dynamicweb.Indexing.Querying.Faceting.FacetResult)">
            <summary>
            Compares two instances of facet results
            </summary>
            <param name="x">First instance to be compared</param>
            <param name="y">Second instance to be compared</param>
            <returns>0 if labels are equal, 1 if first instance is greater, otherwise -1</returns>
            <remarks>if any instance equal null then returns 0</remarks>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Faceting.FacetResultLabelComparer.Compare(System.Object,System.Object)">
            <summary>
            Compares two instances of facet results as object
            </summary>
            <param name="x">First object to be compared</param>
            <param name="y">Second object to be compared</param>
            <returns>0 if labels are equal, 1 if first instance is greater, otherwise -1</returns>
            <remarks>if any instance equal null or cannot be casted to <see cref="T:Dynamicweb.Indexing.Querying.Faceting.FacetResult"/> then returns 0</remarks>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Faceting.FacetSource">
            <summary>
            The Class FacetSource represents source object of facet
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetSource.Repository">
            <summary>
            Gets or sets facet repository name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.FacetSource.Item">
            <summary>
            Gets or sets facet source name
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Faceting.IFacetGroup">
            <summary>
            The Interface IFacetGroup defines basic facet group model
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.IFacetGroup.FileName">
            <summary>
            Gets or sets facet group file name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.IFacetGroup.Name">
            <summary>
            Gets or sets facet group name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.IFacetGroup.Type">
            <summary>
            Gets or sets facet group type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.IFacetGroup.SubType">
            <summary>
            Gets or sets facet group sub type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.IFacetGroup.Description">
            <summary>
            Gets or sets description
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.IFacetGroup.Meta">
            <summary>
            Gets or sets meta information
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.IFacetGroup.Settings">
            <summary>
            Gets or sets settings collection
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.IFacetGroup.Source">
            <summary>
            Gets or sets facet group source
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.IFacetGroup.Items">
            <summary>
            Gets or sets containing facets
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Faceting.IFacetGroup.FieldsTermsCount">
            <summary>
            Gets or sets facets field terms count
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.IQuery">
            <summary>
            The Interface IQuery defines basic query model
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.ID">
            <summary>
            Gets or sets Query ID
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.FileName">
            <summary>
            Gets or sets Query file name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.Name">
            <summary>
            Gets or sets Query name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.Type">
            <summary>
            Gets or sets Query type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.SubType">
            <summary>
            Gets or sets Query sub type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.Description">
            <summary>
            Gets or sets Query description text
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.Meta">
            <summary>
            Get or sets meta information
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.Settings">
            <summary>
            Gets or sets settings collection
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.SortOrder">
            <summary>
            Gets or sets query sort order
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.Parameters">
            <summary>
            Gets or sets query parameters
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.Imports">
            <summary>
            Gets or sets query imports
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.References">
            <summary>
            Gets or sets query references
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.Source">
            <summary>
            Gets or sets query source
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.Expression">
            <summary>
            Gets or sets query expression
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.ViewFields">
            <summary>
            Gets or sets query view fields
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQuery.ViewLanguages">
            <summary>
            Gets or sets query view languages
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.IQueryProvider">
            <summary>
            The Interface IQueryProvider defines basic query provider model
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.IQueryProvider.Query(Dynamicweb.Indexing.Querying.IQuery,Dynamicweb.Indexing.Querying.QuerySettings)">
            <summary>
            Executes the Query
            </summary>
            <param name="query">The Query</param>
            <param name="settings">Query settings</param>
            <returns>Query result</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.IQueryResult">
            <summary>
            The Interface IQueryResult defines basic query result model
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQueryResult.QueryResult">
            <summary>
            Gets or sets query result as collection of objects
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQueryResult.FacetGroupResult">
            <summary>
            Gets or sets facet groups result
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQueryResult.Count">
            <summary>
            Gets or sets results count
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQueryResult.TotalCount">
            <summary>
            Gets or sets total hits of result
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.IQueryResult.DebugInfo">
            <summary>
            Gets or sets debugging information related to the execution of the query that produced this <see cref="T:Dynamicweb.Indexing.Querying.IQueryResult">result</see>
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.IQueryService">
            <summary>
            The Interface IQueryService defines basic query service model
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.IQueryService.LoadQuery(System.String,System.String)">
            <summary>
            Loads query
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Query name</param>
            <returns>Query instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.IQueryService.LoadQuery(System.String)">
            <summary>
            Loads query
            </summary>
            <param name="fileName">Path to query file in file system</param>
            <returns>Query instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.IQueryService.SaveQuery(System.String,System.String,Dynamicweb.Indexing.Querying.IQuery)">
            <summary>
            Saves query
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <param name="query">The query</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.IQueryService.SaveQuery(System.String,Dynamicweb.Indexing.Querying.IQuery)">
            <summary>
            Saves query
            </summary>
            <param name="fileName">Path to query file in file system</param>
            <param name="query">The query</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.IQueryService.LoadFacets(System.String,System.String)">
            <summary>
            Loads facet group
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <returns>Query facet group</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.IQueryService.LoadFacets(System.String)">
            <summary>
            Loads facet group
            </summary>
            <param name="fileName">Path to query file in file system</param>
            <returns>Query facet group</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.IQueryService.SaveFacets(System.String,System.String,Dynamicweb.Indexing.Querying.Faceting.IFacetGroup)">
            <summary>
            Saves facet group
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <param name="facets">The facet group</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.IQueryService.SaveFacets(System.String,Dynamicweb.Indexing.Querying.Faceting.IFacetGroup)">
            <summary>
            Saves facet group
            </summary>
            <param name="fileName">File name</param>
            <param name="facets">The facet group</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.IQueryService.Query(Dynamicweb.Indexing.Querying.IQuery,Dynamicweb.Indexing.Querying.QuerySettings)">
            <summary>
            Executes query
            </summary>
            <param name="query">The query</param>
            <param name="settings">Query settings</param>
            <returns>Query result</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Linq.LinqDataSource">
            <summary>
            The Class LinqDataSource represents linq data source
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Linq.LinqDataSource.Model">
            <summary>
            Gets or sets data model of the source
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Linq.LinqDataSource.References">
            <summary>
            Gets or sets collection of references
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Linq.LinqDataSource.Imports">
            <summary>
            Gets or sets collection of imports
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Linq.LinqDataSource.EntityName">
            <summary>
            Gets or sets entity name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Linq.LinqDataSource.EntityNamespace">
            <summary>
            Gets or sets entity namespace
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Linq.LinqDataSource.EntityReference">
            <summary>
            Gets or sets entity reference
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Linq.LinqRepositoryProvider">
            <summary>
            The Class LinqRepositoryProvider represents object provides operations to work with repository
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Linq.LinqRepositoryProvider.GetRepositories">
            <summary>
            Get all the repositories
            </summary>
            <returns>Collection of repositories</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Linq.LinqRepositoryProvider.GetRepositoryItems(System.String)">
            <summary>
            Gets repository items
            </summary>
            <param name="repository">Repository name</param>
            <returns>Set of repository items</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Linq.LinqRepositoryProvider.GetDataSources(System.String)">
            <summary>
            Gets repository data sources
            </summary>
            <param name="repository">Repository name</param>
            <returns>Set of datasources</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Linq.LinqRepositoryProvider.GetDataModel(System.String,System.String)">
            <summary>
            Gets data model of the specified data source in the repository
            </summary>
            <param name="repository">Target repository name</param>
            <param name="name">Data source name</param>
            <returns>Data model instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Linq.LinqRepositoryProvider.GetDataParameters(System.String,System.String)">
            <summary>
            Gets data parameters for specific data source
            </summary>
            <param name="repository">Target repository name</param>
            <param name="name">Data source name</param>
            <returns>Collection of data parameters</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Query">
            <summary>
            The Class Query represents query object used for getting results from repository indexes
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.ID">
             <summary>
             Gets or sets the unique ID of the smart search.
            </summary>
             <remarks></remarks>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.FileName">
            <summary>
            Gets or sets Query file name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.Name">
            <summary>
            Gets or sets Query name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.Type">
            <summary>
            Gets or sets Query type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.SubType">
            <summary>
            Gets or sets Query sub type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.Description">
            <summary>
            Gets or sets Query description text
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.Meta">
            <summary>
            Get or sets meta information
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.Settings">
            <summary>
            Gets or sets settings collection
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.SortOrder">
            <summary>
            Gets or sets query sort order
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.Parameters">
            <summary>
            Gets or sets query parameters
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.Imports">
            <summary>
            Gets or sets query imports
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.References">
            <summary>
            Gets or sets query references
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.Source">
            <summary>
            Gets or sets query source
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.Expression">
            <summary>
            Gets or sets query expression
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.ViewFields">
            <summary>
            Gets or sets query view fields
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Query.ViewLanguages">
            <summary>
            Gets or sets query view languages
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.Query.#ctor">
            <summary>
            Initialize new query instance
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.QueryHelper">
            <summary>
            The Class QueryHelper helps to work with queries
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.LoadQuery(Dynamicweb.Indexing.Querying.IQueryService,System.String,Dynamicweb.Indexing.Querying.RepositoryFileFormat)">
            <summary>
            Loads query
            </summary>
            <param name="queryService">Query service instance</param>
            <param name="fileName">Path to query file in file system</param>
            <param name="fileFormat">Format of query</param>
            <returns>Query instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.SaveQuery(Dynamicweb.Indexing.Querying.IQueryService,System.String,Dynamicweb.Indexing.Querying.IQuery,Dynamicweb.Indexing.Querying.RepositoryFileFormat)">
            <summary>
            Saves query
            </summary>
            <param name="queryService">Query service instance</param>
            <param name="fileName">Path to query file in file system</param>
            <param name="query">The query</param>
            <param name="fileFormat">Format of query</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.ConvertToQuery(Newtonsoft.Json.Linq.JObject)">
            <summary>
            Converts json object into query
            </summary>
            <param name="obj">The object to be converted into query</param>
            <returns>Query instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.ConvertToQuery(System.Xml.Linq.XElement)">
            <summary>
            Converts xml object into query
            </summary>
            <param name="obj">The object to be converted into query</param>
            <returns>Query instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.ConvertToJson(Dynamicweb.Indexing.Querying.IQuery)">
            <summary>
            Converts query into json object
            </summary>
            <param name="query">The query to be converted</param>
            <returns>Query in json object representation</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.ConvertToXml(Dynamicweb.Indexing.Querying.IQuery)">
            <summary>
            Converts query into xml element
            </summary>
            <param name="query">The query to be converted</param>
            <returns>Query in xml element representation</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.Merge(Newtonsoft.Json.Linq.JObject,Dynamicweb.Indexing.Querying.IQuery)">
            <summary>
            Merges query to json object
            </summary>
            <param name="json">Json object instance</param>
            <param name="query">Query instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.Merge(System.Xml.Linq.XElement,Dynamicweb.Indexing.Querying.IQuery)">
            <summary>
            Merges query to xml element
            </summary>
            <param name="element">Xml element instance</param>
            <param name="query">Query instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.GetTypeName(System.Object)">
            <summary>
            Gets type name of object
            </summary>
            <param name="obj">The object</param>
            <returns>Name of object type including assembly name</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.GetTypeNameFromObject(System.Object)">
            <summary>
            Gets type name of object
            </summary>
            <param name="value">The object</param>
            <returns>Name of object type including assembly name</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.GetElementFromJObject``1(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Gets specific json object element
            </summary>
            <param name="obj">The json object</param>
            <param name="element">Name of needed element</param>
            <returns>The element as specified type</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryHelper.GetAllQueries">
            <summary>
            Get all queries
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.QueryImport">
            <summary>
            The Class QueryImport represents object used for query import
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QueryImport.Name">
            <summary>
            Get or sets query import name
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.QueryJsonConverter">
            <summary>
            The Class QueryJsonConverter represents json converter specified for queries
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QueryJsonConverter.CanWrite">
            <summary>
            Gets value indicates whether converter can write
            </summary>        
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryJsonConverter.Create(System.Type,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Creates query from json object
            </summary>
            <param name="objectType">Type of object</param>
            <param name="jObject">Json object as base for query</param>
            <returns>Query instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes value using json writer
            </summary>
            <param name="writer">Json writer</param>
            <param name="value">The value to be written</param>
            <param name="serializer">Json serializer</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads json into query
            </summary>
            <param name="reader">Json writer</param>
            <param name="objectType">Type of object</param>
            <param name="existingValue">Existing value</param>
            <param name="serializer">Json serializer</param>
            <returns>Query as object</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryJsonConverter.CanConvert(System.Type)">
            <summary>
            Indicates whether converter can convert the type
            </summary>
            <param name="objectType">Type of object</param>
            <returns>True if converter can convert the Type, otherwise - false</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.QueryParameter">
            <summary>
            The Class QueryParameter represents parameters object used for query
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QueryParameter.Name">
            <summary>
            Gets or sets name of the parameter
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QueryParameter.Type">
            <summary>
            Gets or sets type of the parameter
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QueryParameter.TypeName">
            <summary>
            Gets or sets type of the parameter
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QueryParameter.DefaultValue">
            <summary>
            Gets or sets default value of the parameter
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.QueryReference">
            <summary>
            The Class QueryReference represents reference object used for query
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QueryReference.Name">
            <summary>
            Gets or sets name of the reference
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QueryReference.Type">
            <summary>
            Gets or sets type of the reference
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QueryReference.TypeName">
            <summary>
            Gets or sets type of the reference
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.RepositoryItems.QueryRepositoryProvider">
            <summary>
            The Class QueryRepositoryProvider represents repository provider for queries
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.RepositoryItems.QueryRepositoryProvider.GetRepositories">
            <summary>
            Gets all the repositories
            </summary>
            <returns>The repositories</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.RepositoryItems.QueryRepositoryProvider.GetRepositoryItems(System.String)">
            <summary>
            Gets query items including facets from specific repository
            </summary>
            <param name="repository">Repository name</param>
            <returns>Collection of repository items</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.RepositoryItems.QueryRepositoryProvider.GetDataSources(System.String)">
            <summary>
            Gets query data sources for specific repository
            </summary>
            <param name="repository">Repository name</param>
            <returns>Collection of data sources</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.RepositoryItems.QueryRepositoryProvider.GetDataModel(System.String,System.String)">
            <summary>
            Gets data model for specific query
            </summary>
            <param name="repository">Query repository name</param>
            <param name="name">Query name</param>
            <returns>Data model instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.RepositoryItems.QueryRepositoryProvider.GetDataParameters(System.String,System.String)">
            <summary>
            Gets data parameters for specific query
            </summary>
            <param name="repository">Query repository name</param>
            <param name="name">Query name</param>
            <returns>Collection of data parameters</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.QueryService">
            <summary>
            The Class QueryService represents service for common operations with queries e.g. load and save etc.
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryService.LoadQuery(System.String,System.String)">
            <summary>
            Loads query
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Query name</param>
            <returns>Query instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryService.LoadQuery(System.String)">
            <summary>
            Loads query
            </summary>
            <param name="fileName">Path to query file in file system</param>
            <returns>Query instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryService.SaveQuery(System.String,System.String,Dynamicweb.Indexing.Querying.IQuery)">
            <summary>
            Saves query
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <param name="query">The query</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryService.SaveQuery(System.String,Dynamicweb.Indexing.Querying.IQuery)">
            <summary>
            Saves query
            </summary>
            <param name="fileName">Path to query file in file system</param>
            <param name="query">The query</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryService.LoadFacets(System.String,System.String)">
            <summary>
            Loads facet group
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <returns>Query facet group</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryService.LoadFacets(System.String)">
            <summary>
            Loads facet group
            </summary>
            <param name="fileName">Path to query file in file system</param>
            <returns>Query facet group</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryService.SaveFacets(System.String,System.String,Dynamicweb.Indexing.Querying.Faceting.IFacetGroup)">
            <summary>
            Saves facet group
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <param name="facets">The facet group</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryService.SaveFacets(System.String,Dynamicweb.Indexing.Querying.Faceting.IFacetGroup)">
            <summary>
            Saves facet group
            </summary>
            <param name="fileName">Path to query file in file system</param>
            <param name="facets">The facet group</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QueryService.Query(Dynamicweb.Indexing.Querying.IQuery,Dynamicweb.Indexing.Querying.QuerySettings)">
            <summary>
            Executes query
            </summary>
            <param name="query">The query</param>
            <param name="settings">Query settings</param>
            <returns>Query result</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.QuerySettings">
            <summary>
            The Class QuerySettings represents settings object used for query
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QuerySettings.Facets">
            <summary>
            Gets or sets query facet groups collection
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QuerySettings.Parameters">
            <summary>
            Gets or sets parameters collection
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QuerySettings.Boost">
            <summary>
            Gets or sets boost for query
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QuerySettings.SortOrder">
            <summary>
            Gets or sets sort order
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QuerySettings.IncludeDebugInfo">
            <summary>
            Gets or sets a value indicating whether query execution should collect debugging information
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QuerySettings.Skip">
            <summary>
            Gets or sets start index for query results
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QuerySettings.Take">
            <summary>
            Gets or sets count of result collection
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Querying.QuerySettings.#ctor">
            <summary>
            Initializes new query settings instance
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.QuerySource">
            <summary>
            The Class QuerySource represents source object of query
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QuerySource.Repository">
            <summary>
            Gets or sets query repository name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QuerySource.Item">
            <summary>
            Gets or sets query source name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.QuerySource.Provider">
            <summary>
            Gets or sets query provider
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.RepositoryFileFormat">
            <summary>
            Repository file format enumeration
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Sorting.SortDirection">
            <summary>
            Enumeration containing sort directions
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Sorting.SortDirection.Ascending">
            <summary>
            The ascending sort direction
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Querying.Sorting.SortDirection.Descending">
            <summary>
            The descending sort direction
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Querying.Sorting.SortInfo">
            <summary>
            Class containing information about the sort direction for a given field.
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Sorting.SortInfo.Field">
            <summary>
            Gets or sets the field used for sorting.
            </summary>
            <value>
            The field.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Querying.Sorting.SortInfo.SortDirection">
            <summary>
            Gets or sets the sort direction for the field.
            </summary>
            <value>
            The sort direction.
            </value>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.Data.DataField">
            <summary>
            Represents data field
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataField.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataField.SystemName">
            <summary>
            Gets or sets system name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataField.Type">
            <summary>
            Gets or sets type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataField.TypeName">
            <summary>
            Gets or sets type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataField.Group">
            <summary>
            Gets or sets group
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataField.OperatorTypes">
            <summary>
            Gets or sets the operatorTypes for the specific field type
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.Data.DataModel">
            <summary>
            Represents data model
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataModel.Fields">
            <summary>
            Gets or sets data model fields
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.Data.DataParameter">
            <summary>
            Represents data parameter
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataParameter.Name">
            <summary>
            Gets or sets Name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataParameter.Type">
            <summary>
            Gets or sets type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataParameter.TypeName">
            <summary>
            Gets or sets type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataParameter.Default">
            <summary>
            Gets or sets default value
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.Data.DataSource">
            <summary>
            Represents data source
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataSource.Repository">
            <summary>
            Gets or sets data source repository
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataSource.Name">
            <summary>
            Gets or sets data source name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataSource.Type">
            <summary>
            Gets or sets data source type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataSource.TypeName">
            <summary>
            Gets or sets data source type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Data.DataSource.Provider">
            <summary>
            Gets or sets data source provider
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.IRepositoryProvider">
            <summary>
            Defines operations for repository provider
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryProvider.GetRepositories">
            <summary>
            Gets repositories
            </summary>
            <returns>Set of strings</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryProvider.GetRepositoryItems(System.String)">
            <summary>
            Gets repository items
            </summary>
            <param name="repository">Repository name</param>
            <returns>Set of repository items</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryProvider.GetDataSources(System.String)">
            <summary>
            Gets repository data sources
            </summary>
            <param name="repository">Repository name</param>
            <returns>Set of datasources</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryProvider.GetDataModel(System.String,System.String)">
            <summary>
            Gets data model
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">Data model name</param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryProvider.GetDataParameters(System.String,System.String)">
            <summary>
            Gets repository data parameters
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">Data parameter name</param>
            <returns>Set of data parameters</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.IRepositoryService">
            <summary>
            Defines operations for repository service
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.CreateRepository(System.String)">
            <summary>
            Creates repository
            </summary>
            <param name="repository">Repository name</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.DeleteRepository(System.String)">
            <summary>
            Deletes repository
            </summary>
            <param name="repository">Repository name</param>
            <returns>True if operation succeeded</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.DeleteRepositoryItem(System.String,System.String)">
            <summary>
            Deletes repository item
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <returns>True if operation succeeded</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.GetRepositories">
            <summary>
            Gets repositories
            </summary>
            <returns>Set of repository names</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.GetRepositoryInfo(System.String)">
            <summary>
            Gets repository info
            </summary>
            <param name="repository">Repository name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.RepositoryInfo"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.GetRepositoryItems(System.String)">
            <summary>
            Gets repository items
            </summary>
            <param name="repository">Repository name</param>
            <returns>Set of repository items</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.GetRepositoryItem(System.String,System.String)">
            <summary>
            Gets repository items
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">Repository item name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.RepositoryItem"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.GetDataSources(System.String)">
            <summary>
            Gets data sources
            </summary>		
            <param name="repository">Repository name</param>
            <returns>Set of data sources</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.GetDataSources">
            <summary>
            Gets data sources
            </summary>
            <returns>Set of data sources</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.GetDataSource(System.String,System.String)">
            <summary>
            Gets data source
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">DataSource name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.Data.DataSource"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.GetDataModel(System.String,System.String)">
            <summary>
            Gets data model
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">Data model name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.Data.DataModel"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.IRepositoryService.GetDataParameters(System.String,System.String)">
            <summary>
            Gets data parameters
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">Data container name</param>
            <returns>Set of data parameters</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.RepositoryAttribute">
            <summary>
            Represents repository attribute
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryAttribute.Name">
            <summary>
            Gets or sets repository attribute name
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryAttribute.#ctor(System.String)">
            <summary>
            Creates new repository attribute instance with specific name
            </summary>
            <param name="name">Name of repository attribute</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryAttribute.#ctor(System.String,System.String)">
            <summary>
            Creates new repository attribute instance with specific name and description
            </summary>
            <param name="name">Name of repository attribute</param>
            <param name="description">Repository description</param>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.RepositoryInfo">
            <summary>
            Represents repository info
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryInfo.Name">
            <summary>
            Gets or sets name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryInfo.Path">
            <summary>
            Gets or sets path
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryInfo.Description">
            <summary>
            Gets or sets descritpion
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryInfo.Image">
            <summary>
            Gets or sets image
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryInfo.Requires">
            <summary>
            Gets or sets required items
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryInfo.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryInfo.#ctor(System.String)">
            <summary>
            Creates new repository info instance with specified name
            </summary>
            <param name="name">Repository info name</param>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.RepositoryItem">
            <summary>
            Represents repository item
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryItem.Name">
            <summary>
            Gets or sets name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryItem.Type">
            <summary>
            Gets or sets type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryItem.TypeName">
            <summary>
            Gets or sets type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryItem.SubType">
            <summary>
            Gets or sets sub type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryItem.Description">
            <summary>
            Gets or sets description
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.RepositoryModelAttribute">
            <summary>
            Represents repository model attribute
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryModelAttribute.Name">
            <summary>
            Gets or sets name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryModelAttribute.Description">
            <summary>
            Gets or sets description
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryModelAttribute.#ctor(System.String)">
            <summary>
            Creates new object with specific name
            </summary>
            <param name="name">Attribute name</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryModelAttribute.#ctor(System.String,System.String)">
            <summary>
            Creates new object with specific name and description
            </summary>
            <param name="name">Attribute name</param>
            <param name="description">Attribute description</param>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.RepositoryService">
            <summary>
            Represents repository service
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositoryService.BaseFolder">
            <summary>
            Gets or sets base folder
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.CreateRepository(System.String)">
            <summary>
            Creates repository
            </summary>
            <param name="repository">Repository name</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.DeleteRepository(System.String)">
            <summary>
            Deletes repository
            </summary>
            <param name="repository">Repository name</param>
            <returns>True if operation succeeded</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.DeleteRepositoryItem(System.String,System.String)">
            <summary>
            Deletes repository item
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <returns>True if operation succeeded</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.GetRepositories">
            <summary>
            Gets repositories
            </summary>
            <returns>Set of repository names</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.GetRepositoryInfo(System.String)">
            <summary>
            Gets repository info
            </summary>
            <param name="repository">Repository name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.RepositoryInfo"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.GetRepositoryItems(System.String)">
            <summary>
            Gets repository items
            </summary>
            <param name="repository">Repository name</param>
            <returns>Set of repository items</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.GetRepositoryItem(System.String,System.String)">
            <summary>
            Gets repository items
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">Repository item name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.RepositoryItem"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.GetDataSources">
            <summary>
            Gets data sources
            </summary>
            <returns>Set of data sources</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.GetDataSources(System.String)">
            <summary>
            Gets data sources
            </summary>		
            <param name="repository">Repository name</param>
            <returns>Set of data sources</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.GetDataSource(System.String,System.String)">
            <summary>
            Gets data source
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">DataSource name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.Data.DataSource"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.GetDataModel(System.String,System.String)">
            <summary>
            Gets data model
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">Data model name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.Data.DataModel"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositoryService.GetDataParameters(System.String,System.String)">
            <summary>
            Gets data parameters
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">Index name</param>
            <returns>Set of data parameters</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.RepositorySourceAttribute">
            <summary>
            Represents repository source attribute
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositorySourceAttribute.Name">
            <summary>
            Gets or sets name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.RepositorySourceAttribute.Description">
            <summary>
            Gets or sets description
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositorySourceAttribute.#ctor(System.String)">
            <summary>
            Creates new object instance with specific name
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.RepositorySourceAttribute.#ctor(System.String,System.String)">
            <summary>
            Creates new object with specific name and description
            </summary>
            <param name="name"></param>
            <param name="description"></param>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.Tasks.ITaskProvider">
            <summary>
            Defines task provider operations
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.ITaskProvider.Repository">
            <summary>
            Gets or sets repository
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.ITaskProvider.Parameters">
            <summary>
            Gets or sets parameters
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.ITaskProvider.RunTask">
            <summary>
            Runs task
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.Tasks.ITaskService">
            <summary>
            Defines task service operations
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.ITaskService.LoadTask(System.String,System.String)">
            <summary>
            Loads task
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.Tasks.Task"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.ITaskService.LoadTask(System.String)">
            <summary>
            Loads task
            </summary>
            <param name="fileName"></param>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.ITaskService.SaveTask(System.String,System.String,Dynamicweb.Indexing.Repositories.Tasks.Task)">
            <summary>
            Saves task
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <param name="task"><see cref="T:Dynamicweb.Indexing.Repositories.Tasks.Task"/> object instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.ITaskService.SaveTask(System.String,Dynamicweb.Indexing.Repositories.Tasks.Task)">
            <summary>
            Saves task
            </summary>
            <param name="fileName">Target file name</param>
            <param name="task"><see cref="T:Dynamicweb.Indexing.Repositories.Tasks.Task"/> object instance</param>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.Tasks.Task">
            <summary>
            Represents task
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.Task.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.Task.Name">
            <summary>
            Gets or sets the name of the task. This is the name of the actual file that defined this task.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.Task.Repository">
            <summary>
            Gets the repository to which this task belongs.
            </summary>
            <value>
            The repository.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.Task.Start">
            <summary>
            Gets or sets the start time. <c>DateTime.MinValue</c> indicates no start time, meaning it's active always, or until any specified end time.
            </summary>
            <value>
            The start time.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.Task.End">
            <summary>
            Gets or sets the end time. <c>DateTime.MaxValue</c> indicates no end time, meaning it keeps repeating until actively stopped.
            </summary>
            <value>
            The end time.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.Task.RepeatInMinutes">
            <summary>
            Gets or sets the repeat interval (in minutes).
            </summary>
            <value>
            The repeat in minutes.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.Task.Type">
            <summary>
            Gets or sets the type of the underlying. Must be specific enough so it can be resolved using the Type system.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.Task.TypeName">
            <summary>
            Gets or sets the type of the underlying. Must be specific enough so it can be resolved using the Type system.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.Task.Parameters">
            <summary>
            Gets or sets the parameters needed for the underlying task type.
            </summary>
            <value>
            The parameters.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.Task.LastExecutionTime">
            <summary>
            Gets the last execution time. The value represents the last time this task was executed.
            If the task was never run, or if it's currently running the value is <c>null</c>.
            </summary>
            <value>
            The last execution time.
            </value>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.Task.LastExecutionSuccessful">
            <summary>
            Gets the last execution successful. The value indicates whether the last execution was successful.
            If the task was never run, or if it's currently running the value is <c>null</c>.
            </summary>
            <value>
            The last execution successful.
            </value>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.Task.Run">
            <summary>
            Runs this task.
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.Tasks.TaskProviderBase">
            <summary>
            Represents task provider base functionality
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.TaskProviderBase.Repository">
            <summary>
            Gets or sets repository
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Repositories.Tasks.TaskProviderBase.Parameters">
            <summary>
            Gets or sets parameters
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.TaskProviderBase.RunTask">
            <summary>
            Runs task
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.Tasks.TaskRepositoryProvider">
            <summary>
            Represents task repository provider
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.TaskRepositoryProvider.GetRepositories">
            <summary>
            Gets provider repositories names
            </summary>
            <returns>Set of repository names</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.TaskRepositoryProvider.GetRepositoryItems(System.String)">
            <summary>
            Gets provider repository items
            </summary>
            <param name="repository">Repository name</param>
            <returns>Set of repository items</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.TaskRepositoryProvider.GetDataSources(System.String)">
            <summary>
            Gets data sources
            </summary>
            <param name="repository">Name of repository</param>
            <returns>Set of data sources</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.TaskRepositoryProvider.GetDataModel(System.String,System.String)">
            <summary>
            Gets data model
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">Data model name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.Data.DataModel"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.TaskRepositoryProvider.GetDataParameters(System.String,System.String)">
            <summary>
            Gets data parameters
            </summary>
            <param name="repository">Repository name</param>
            <param name="name">Name</param>
            <returns>Set of <see cref="T:Dynamicweb.Indexing.Repositories.Data.DataParameter"/></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.Tasks.TaskRunner">
            <summary>
            Represents utility for running tasks
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.TaskRunner.RunTasks">
            <summary>
            Runs tasks
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Repositories.Tasks.TaskService">
            <summary>
            Represents task service for loading and saving tasks
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.TaskService.LoadTask(System.String,System.String)">
            <summary>
            Loads task
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.Tasks.Task"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.TaskService.LoadTask(System.String)">
            <summary>
            Loads task
            </summary>
            <param name="fileName">Name of file with task data</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.Tasks.Task"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.TaskService.SaveTask(System.String,System.String,Dynamicweb.Indexing.Repositories.Tasks.Task)">
            <summary>
            Saves task
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <param name="task"><see cref="T:Dynamicweb.Indexing.Repositories.Tasks.Task"/> object instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Repositories.Tasks.TaskService.SaveTask(System.String,Dynamicweb.Indexing.Repositories.Tasks.Task)">
            <summary>
            Saves task
            </summary>
            <param name="fileName">Target file name</param>
            <param name="task"><see cref="T:Dynamicweb.Indexing.Repositories.Tasks.Task"/> object instance</param>
        </member>
        <member name="T:Dynamicweb.Indexing.RepositoryFileFormat">
            <summary>
            Repository file format types enumeration
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Schemas.CopyFieldDefinition">
            <summary>
            Represents copy field definition data structure
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Schemas.ExtensionFieldDefinition">
            <summary>
            Represents extension field definition
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.ExtensionFieldDefinition.InstanceType">
            <summary>
            Gets the extenstion field definition type instance
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.ExtensionFieldDefinition.#ctor(System.String,System.Collections.Generic.IList{System.String})">
            <summary>
            Creates new object with specific extender type and list of excluded fields
            </summary>
            <param name="extenderType">name of extender type</param>
            <param name="excludedFields">List of excluded fields</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.ExtensionFieldDefinition.#ctor(System.Type,System.Collections.Generic.IList{System.String})">
            <summary>
            Creates new object with specific instance type and list of excluded fields
            </summary>
            <param name="instanceType">Instance type</param>
            <param name="excludedFields">List of excluded fields</param>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.ExtensionFieldDefinition.ExcludedFields">
            <summary>
            Gets list of excluded fields
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.ExtensionFieldDefinition.GetFields">
            <summary>
            Provides extender field list
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Schemas.FieldDefinitionBase">
            <summary>
            Base class for field definitions
            </summary>
        </member>
        <member name="F:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.fieldTypeDefinition">
            <summary>
            User-defined field type with analyzers
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.Name">
            <summary>
            Name of field definition
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.SystemName">
            <summary>
            System name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.Type">
            <summary>
            Type of field definition
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.TypeName">
            <summary>
            Type of field definition
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.Analyzer">
            <summary>
            Analyzer name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.AnalyzerTypeName">
            <summary>
            Analyzer type name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.Group">
            <summary>
            Group name
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.SetFieldType(Dynamicweb.Indexing.Schemas.FieldTypeDefinition)">
            <summary>
            Sets type of field definition
            </summary>
            <param name="fieldType"></param>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.GetAnalyzer(System.String)">
            <summary>
            Gets analyzer type name specified by provider type name
            </summary>
            <param name="providerTypeName">Provider type name</param>
            <returns>Analyzer type name</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.GetTypeOfField">
            <summary>
            Gets the type of the field.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.GetTypeOfFieldOrElement">
            <summary>
            Gets the type of the field type or the element type if the type is an array.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldDefinitionBase.IsNumeric">
            <summary>
            Determines whether the type of the field is numeric.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Schemas.FieldDefinitionBaseEqualityComparer">
            <summary>
            Field definition comparer
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.FieldDefinitionBaseEqualityComparer.Equals(Dynamicweb.Indexing.Schemas.FieldDefinitionBase,Dynamicweb.Indexing.Schemas.FieldDefinitionBase)">
            <summary>
            Shows if two instances of FieldDefinitionBse objects have the same SystemName
            </summary>
            <param name="x">First FieldDefinitionBase object</param>
            <param name="y">Second FieldDefinitionBase object</param>
            <returns>True if SystemName of both instances are the same</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.FieldDefinitionBaseEqualityComparer.GetHashCode(Dynamicweb.Indexing.Schemas.FieldDefinitionBase)">
            <summary>
            Returns hash code of FieldDefinitionBase object instance SystemName
            </summary>
            <param name="obj">Instance of FieldDefinitionBase</param>
            <returns>Hash code of object instance SystemName</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Schemas.FieldTypeDefinition">
            <summary>
            Represents definition of field type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldTypeDefinition.Name">
            <summary>
            FieldTypeDefinition name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldTypeDefinition.Type">
            <summary>
            Type of field type definition
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldTypeDefinition.TypeName">
            <summary>
            Type of field type definition
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.FieldTypeDefinition.Analyzers">
            <summary>
            Key - provider, Value - Type Of Analyzer
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.FieldTypeDefinition.GetAnalyzer(System.String)">
            <summary>
            Gets analyzer using ProviderType name value
            </summary>
            <param name="providerTypeName">Provider type name</param>
            <returns>Analyzer</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Schemas.GroupingFieldDefinition">
            <summary>
            Represents definition for GroupingField
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.GroupingFieldDefinition.Source">
            <summary>
            Gets or sets source
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.GroupingFieldDefinition.Groups">
            <summary>
            Gets or sets Grouping field groups
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.GroupingFieldDefinition.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.GroupingFieldDefinition.#ctor(System.Collections.Generic.IEnumerable{Dynamicweb.Indexing.Schemas.GroupingFieldGroup})">
            <summary>
            Creates new instance of object setting up groups data
            </summary>
            <param name="groups">Enumeration of <see cref="T:Dynamicweb.Indexing.Schemas.GroupingFieldGroup"/></param>
        </member>
        <member name="T:Dynamicweb.Indexing.Schemas.GroupingFieldGroup">
            <summary>
            Provides object for storing gropuping information
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.GroupingFieldGroup.Name">
            <summary>
            Field group name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.GroupingFieldGroup.From">
            <summary>
            Field group source name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.GroupingFieldGroup.To">
            <summary>
            Field group destination name
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Schemas.SchemaDefinition">
            <summary>
            Represents schema definition ()fields and their types)
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.SchemaDefinition.FieldTypes">
            <summary>
            Gets or sets Field types
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.SchemaDefinition.Fields">
            <summary>
            Gets or sets fields
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Schemas.SchemaDefinition.FieldsFromIndexDefinition">
            <summary>
            Gets or sets fields from index definition
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Schemas.SchemaDefinition.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Schemas.FieldDefinition">
            <summary>
            Represents Field definition with "field source" property
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.IIndex">
            <summary>
            Defines properties and methods for Indexing data domain specific objects
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndex.FileName">
            <summary>
            Gets or sets index file name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndex.Name">
            <summary>
            Gets or sets index instance name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndex.Type">
            <summary>
            Gets or sets index type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndex.SubType">
            <summary>
            Gets or sets index sub type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndex.Description">
            <summary>
            Gets or sets index description text
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndex.Meta">
            <summary>
            Gets or sets index meta information
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndex.Settings">
            <summary>
            Gets or sets index settings
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndex.Balancer">
            <summary>
            Gets or sets load balancer index
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndex.Instances">
            <summary>
            Gets or sets dictionary of IndexProvider object instances
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndex.Builds">
            <summary>
            Gets or sets dictionary of IndexBuilder object instances
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndex.Schema">
            <summary>
            Gets or sets schema definition
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndex.Build(System.String,System.String,Dynamicweb.Diagnostics.Tracking.Tracker)">
            <summary>
            Defines build operation
            </summary>
            <param name="instance">Index instance to be builed</param>
            <param name="name">Index name</param>
            <param name="tracker">Diagnostic tracker objet instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndex.GetInstance">
            <summary>
            Defines operation for getting IndexProvider instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndex.SetInstance(System.String)">
            <summary>
            Defines operation for setting Index instance name
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Dynamicweb.Indexing.IIndexBalancer">
            <summary>
            Defines behavior of Index Balancer object
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBalancer.Index">
            <summary>
            Gets or sets Index instance
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexBalancer.GetInstance">
            <summary>
            Provides Index Provider instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexBalancer.SetInstance(System.String)">
            <summary>
            Sets IndexBalancer name
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBalancer.Type">
            <summary>
            Gets the fullname of the type
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.IIndexBuilder">
            <summary>
            Defines Index builder operations and properties
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilder.Name">
            <summary>
            Gets or sets index builder name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilder.Type">
            <summary>
            Gets or sets index builder type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilder.Action">
            <summary>
            Gets or sets index builder action
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilder.Settings">
            <summary>
            Gets or sets settingscollection
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilder.DefaultSettings">
            <summary>
            Gets default settings collection
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilder.Meta">
            <summary>
            Gets or sets metadata
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilder.Schema">
            <summary>
            Gets or sets IndexBuilder schema
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilder.SupportedActions">
            <summary>
            Gets list of supported actions
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilder.Extenders">
            <summary>
            Gets list of index builder extenders
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexBuilder.GetFields">
            <summary>
            Gets index fields
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexBuilder.Build(Dynamicweb.Indexing.IIndexWriter,Dynamicweb.Diagnostics.Tracking.Tracker)">
            <summary>
            Builds Index
            </summary>
            <param name="writer"></param>
            <param name="tracker"></param>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexBuilder.Notification">
            <summary>
            Gets or sets notification
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.IIndexReader">
            <summary>
            Defines Index reader interface
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.IIndexService">
            <summary>
            Defines Index Service behavior and data
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.LoadIndex(System.String,System.String)">
            <summary>
            Loads index
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <returns>Index instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.LoadIndex(System.String)">
            <summary>
            Loads index
            </summary>
            <param name="name">Index name</param>
            <returns>Index instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.SaveIndex(System.String,System.String,Dynamicweb.Indexing.IIndex)">
            <summary>
            Saves index state
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <param name="index">Index instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.SaveIndex(System.String,Dynamicweb.Indexing.IIndex)">
            <summary>
            Saves index
            </summary>
            <param name="name">Index name</param>
            <param name="index">Index instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.DeleteIndex(System.String)">
            <summary>
            Delete all indexes in specified repository
            </summary>
            <param name="repository">Repository Name</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.BuildIndex(System.String,System.String,System.String)">
            <summary>
            Builds index
            </summary>
            <param name="name">Index name</param>
            <param name="instance">Instance name</param>
            <param name="build">Build name</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.BuildIndex(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Builds the index.
            </summary>
            <param name="name">The name.</param>
            <param name="instance">The instance.</param>
            <param name="build">The build.</param>
            <param name="meta">The meta.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.BuildIndex(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Builds the index.
            </summary>
            <param name="name">The name.</param>
            <param name="instance">The instance.</param>
            <param name="build">The build.</param>
            <param name="meta">The meta.</param>
            <param name="isResume">if set to <c>true</c> [is resume].</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.BuildIndex(System.String,System.String,System.String,System.String)">
            <summary>
            Builds the index.
            </summary>
            <param name="repository">The repository.</param>
            <param name="item">The item.</param>
            <param name="instance">The instance.</param>
            <param name="build">The build.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.BuildIndex(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Builds the index.
            </summary>
            <param name="repository">The repository.</param>
            <param name="item">The item.</param>
            <param name="instance">The instance.</param>
            <param name="build">The build.</param>
            <param name="meta">The meta.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.BuildIndex(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Builds the index.
            </summary>
            <param name="repository">The repository.</param>
            <param name="item">The item.</param>
            <param name="instance">The instance.</param>
            <param name="build">The build.</param>
            <param name="meta">The meta.</param>
            <param name="isResume">if set to <c>true</c> [is resume].</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.GetActiveBuildTasks(Dynamicweb.Indexing.IIndex)">
            <summary>
            Gets active build tasks
            </summary>
            <param name="index">Index instance</param>
            <returns>Enumeration of <see cref="T:Dynamicweb.Diagnostics.Tasks.TaskInfo"/></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.GetQueries``1">
            <summary>
            Gets queries
            </summary>
            <typeparam name="TIndexBuilder">Type of IndexBuilder</typeparam>
            <returns>Enumeration of <see cref="T:Dynamicweb.Indexing.Querying.IQuery"/></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexService.GetQueries``1(System.String)">
            <summary>
            Gets queries
            </summary>
            <typeparam name="TIndexBuilder">Type of IndexBuilder</typeparam>
            <param name="repository">Repository</param>
            <returns>Enumeration of <see cref="T:Dynamicweb.Indexing.Querying.IQuery"/></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.IIndexWriter">
            <summary>
            Defines IndexWriter behaviour and data
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexWriter.Open(System.Boolean)">
            <summary>
            Defines open method contract
            </summary>
            <param name="openForAppend"></param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexWriter.Close">
            <summary>
            Defines close method contract
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexWriter.AddDocument(Dynamicweb.Indexing.IndexDocument)">
            <summary>
            Defines Add document method contract
            </summary>
            <param name="document">Index document instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexWriter.AddOrUpdateDocument(Dynamicweb.Indexing.IndexDocument,System.String,System.String)">
            <summary>
            Defines Add or update document method contract
            </summary>
            <param name="document">Index document instance</param>
            <param name="keyFieldName">Key field name</param>
            <param name="keyFieldValue">Key field value</param>
        </member>
        <member name="T:Dynamicweb.Indexing.IIndexProvider">
            <summary>
            Defines index provider properties and operations
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexProvider.Name">
            <summary>
            Index provider name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexProvider.Type">
            <summary>
            Index provider type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexProvider.Settings">
            <summary>
            Index provider settings
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexProvider.IsAvailable">
            <summary>
            Shows if Index provider is available
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IIndexProvider.SupportedAnalyzers">
            <summary>
            Represents list of supported analyzers
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IIndexProvider.CreateWriter">
            <summary>
            Defines create writer operation
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.IndexDocument">
            <summary>
            Represents Index Document object
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexDocument.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="T:Dynamicweb.Indexing.Queries.IndexQueryProvider">
            <summary>
            Represents Index query provider
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Queries.IndexQueryProvider.Query(Dynamicweb.Indexing.Querying.IQuery,Dynamicweb.Indexing.Querying.QuerySettings)">
            <summary>
            Queries index provider data
            </summary>
            <param name="query">Query instance</param>
            <param name="settings">Query settings</param>
            <returns>Object implementing <see cref="T:Dynamicweb.Indexing.Querying.IQueryResult"/> interface</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.IndexService">
            <summary>
            Represents index service
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.IndexService.BaseFolder">
            <summary>
            Gets or sets index service base folder
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.LoadIndex(System.String,System.String)">
            <summary>
            Loads index
            </summary>
            <param name="repository">Name of repository</param>
            <param name="item">Name of item</param>
            <returns>Object implementing <see cref="T:Dynamicweb.Indexing.IIndex"/> interface</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.LoadIndex(System.String)">
            <summary>
            Loads index
            </summary>
            <param name="name">Index file name</param>
            <returns>Object implementing <see cref="T:Dynamicweb.Indexing.IIndex"/> interface</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.SaveIndex(System.String,System.String,Dynamicweb.Indexing.IIndex)">
            <summary>
            Saves index
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <param name="index">Index object instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.SaveIndex(System.String,Dynamicweb.Indexing.IIndex)">
            <summary>
            Saves index data to xml format
            </summary>
            <param name="name">Target file name</param>
            <param name="index">Index instance to be saved</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.DeleteIndex(System.String)">
            <summary>
            Deletes repository index
            </summary>
            <param name="repository">Repository name</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.BuildIndex(System.String,System.String,System.String,System.String)">
            <summary>
            Builds index
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <param name="instance">Instance name</param>
            <param name="build">Build name</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.BuildIndex(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Builds index
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <param name="instance">Instance name</param>
            <param name="build">Build name</param>
            <param name="meta">Meta data</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.BuildIndex(System.String,System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Builds index
            </summary>
            <param name="repository">Repository name</param>
            <param name="item">Item name</param>
            <param name="instance">Instance name</param>
            <param name="build">Build name</param>
            <param name="meta">Meta data</param>
            <param name="isResume">True if isResume</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.BuildIndex(System.String,System.String,System.String)">
            <summary>
            Builds index
            </summary>
            <param name="name">Item name</param>
            <param name="instance">Instance name</param>
            <param name="build">Build name</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.BuildIndex(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Builds the index.
            </summary>
            <param name="name">The name.</param>
            <param name="instance">The instance.</param>
            <param name="build">The build.</param>
            <param name="meta">The meta.</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.BuildIndex(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>
            Start index building task
            </summary>
            <param name="name">Index file name</param>
            <param name="instance">Index instance name</param>
            <param name="build">Build name</param>
            <param name="meta">Meta data</param>
            <param name="isResume">True if IsResume</param>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.GetActiveBuildTasks(Dynamicweb.Indexing.IIndex)">
            <summary>
            Gets list of active build tasks
            </summary>
            <param name="index">Index</param>
            <returns>Enumeration of <see cref="T:Dynamicweb.Diagnostics.Tasks.TaskInfo"/></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.GetQueries``1">
            <summary>
            Gets repository service queries
            </summary>
            <typeparam name="TIndexBuilder">Type of IndexBuilder</typeparam>
            <returns>Enumeration of <see cref="T:Dynamicweb.Indexing.Querying.IQuery"/></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.IndexService.GetQueries``1(System.String)">
            <summary>
            Gets repository queries
            </summary>
            <typeparam name="TIndexBuilder">Type of index builder</typeparam>
            <param name="repository">Repository file name</param>
            <returns>IQuery objects enumeration</returns>
        </member>
        <member name="P:Dynamicweb.Indexing.Index.FileName">
            <summary>
            Gets or sets Index file name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Index.Name">
            <summary>
            Gets or sets index instance name
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Index.Type">
            <summary>
            Gets or sets index type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Index.SubType">
            <summary>
            Gets or sets index sub type
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Index.Description">
            <summary>
            gets or sets description text
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Index.Meta">
            <summary>
            Get or sets meta information
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Index.Settings">
            <summary>
            Gets or sets settings collection
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Index.Balancer">
            <summary>
            Gets or sets load balancer instance
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Index.Instances">
            <summary>
            Gets or sets Index providers
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Index.Builds">
            <summary>
            Gets or sets index builders
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Index.Schema">
            <summary>
            Gets or sets index schema definition
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Index.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Index.Build(System.String,System.String,Dynamicweb.Diagnostics.Tracking.Tracker)">
            <summary>
            Builds index
            </summary>
            <param name="instance">Index instance name</param>
            <param name="name">Build name</param>
            <param name="tracker">Diagnostics tracker</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Index.GetInstance">
            <summary>
            Gets index provider instance
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Index.SetInstance(System.String)">
            <summary>
            Sets index name
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Dynamicweb.Indexing.RepositoryItems.IndexRepositoryProvider">
            <summary>
            Represents IndexRepository provider
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.RepositoryItems.IndexRepositoryProvider.GetRepositories">
            <summary>
            Gets provider repositories
            </summary>
            <returns>Enumeration of repositories' names</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.RepositoryItems.IndexRepositoryProvider.GetRepositoryItems(System.String)">
            <summary>
            Gets items from specified repository
            </summary>
            <param name="repository">Name of repository</param>
            <returns>Enumeration of <see cref="T:Dynamicweb.Indexing.Repositories.RepositoryItem"/></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.RepositoryItems.IndexRepositoryProvider.GetDataSources(System.String)">
            <summary>
            Gets data sources for repository
            </summary>
            <param name="repository">Repository name</param>
            <returns>Enumeration of <see cref="T:Dynamicweb.Indexing.Repositories.Data.DataSource"/></returns>
        </member>
        <member name="M:Dynamicweb.Indexing.RepositoryItems.IndexRepositoryProvider.GetDataModel(System.String,System.String)">
            <summary>
            Gets repository index data model
            </summary>
            <param name="repository">Name of repository</param>
            <param name="name">Index name</param>
            <returns><see cref="T:Dynamicweb.Indexing.Repositories.Data.DataModel"/> object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.RepositoryItems.IndexRepositoryProvider.GetDataParameters(System.String,System.String)">
            <summary>
            Gets data parameters
            </summary>
            <param name="repository">Name of repository</param>
            <param name="name">Index name</param>
            <returns>Enumeration of <see cref="T:Dynamicweb.Indexing.Repositories.Data.DataParameter"/></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Serialization.DictionaryJsonConverter">
            <summary>
            Converts dictionary dta to json format
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Serialization.DictionaryJsonConverter.CanConvert(System.Type)">
            <summary>
            Shows if currernt converter supports specific type conversion
            </summary>
            <param name="objectType">Object type of desired type</param>
            <returns>True if converter supports conversion to specified type</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Serialization.DictionaryJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes object data to json format
            </summary>
            <param name="writer">JSon writer object instance</param>
            <param name="value">Data to be converter to json format</param>
            <param name="serializer">Json serializer object</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Serialization.DictionaryJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads json
            </summary>
            <param name="reader">Json reader instance</param>
            <param name="objectType">Type of object</param>
            <param name="existingValue">Existing value</param>
            <param name="serializer">Json serializer object instance</param>
            <returns></returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Serialization.FieldJsonConverter">
            <summary>
            Converts object data to json format
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Serialization.FieldJsonConverter.CanRead">
            <summary>
            Shows if converter can read data
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Serialization.FieldJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes value object data into writer using json format
            </summary>
            <param name="writer">Json writer</param>
            <param name="value">Object with data to be serialized</param>
            <param name="serializer">Serializer object instance</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Serialization.FieldJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads json data
            </summary>
            <param name="reader">Not in use</param>
            <param name="objectType">Not in use</param>
            <param name="existingValue">Not in use</param>
            <param name="serializer">Not in use</param>
            <returns>Returns null</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Serialization.FieldJsonConverter.CanConvert(System.Type)">
            <summary>
            Shows if defined object type is supported by current converter
            </summary>
            <param name="objectType">Type of object ot be converted</param>
            <returns>True is object of defined type could be converted</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Serialization.IndexJsonConverter">
            <summary>
            Converts index вфеф ещ оыщт ащкьфе
            </summary>
        </member>
        <member name="P:Dynamicweb.Indexing.Serialization.IndexJsonConverter.CanWrite">
            <summary>
            Shows if converter supports write-behavior
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Serialization.IndexJsonConverter.Create(System.Type,Newtonsoft.Json.Linq.JObject)">
            <summary>
            Instantiates new <see cref="T:Dynamicweb.Indexing.IIndex"/> object
            </summary>
            <param name="objectType">Desired object type</param>
            <param name="jObject">Json object instance</param>
            <returns>new <see cref="T:Dynamicweb.Indexing.IIndex"/>Object instance</returns>
        </member>
        <member name="M:Dynamicweb.Indexing.Serialization.IndexJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Writes object data to json format
            </summary>
            <param name="writer">Json writer object instance</param>
            <param name="value">Object data for serialization</param>
            <param name="serializer">Json serializer</param>
        </member>
        <member name="M:Dynamicweb.Indexing.Serialization.IndexJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads json data and returns instance of Index
            </summary>
            <param name="reader">Json reader instance</param>
            <param name="objectType">Object type</param>
            <param name="existingValue">Existing value</param>
            <param name="serializer">Serializer object instance</param>
            <returns>Object implementtinf <see cref="T:Dynamicweb.Indexing.IIndex"/> interface</returns>
        </member>
        <member name="T:Dynamicweb.Indexing.Tasks.IndexBuilderTaskProvider">
            <summary>
            Represents index balancer tasks provider
            </summary>
        </member>
        <member name="M:Dynamicweb.Indexing.Tasks.IndexBuilderTaskProvider.RunTask">
            <summary>
            Runs build index task
            </summary>
        </member>
    </members>
</doc>
