/*! 
 * jQuery Bootgrid v1.1.4 - 11/23/2014
 * Copyright (c) 2014 Rafael Staib (http://www.jquery-bootgrid.com)
 * Licensed under MIT http://www.opensource.org/licenses/MIT
 */
!function (t, e, s) { "use strict"; function i(t) { function e(e) { return s.identifier && e[s.identifier] === t[s.identifier] } var s = this; return this.rows.contains(e) ? !1 : (this.rows.push(t), !0) } function o(e) { return e ? t.extend({}, this.cachedParams, { ctx: e }) : this.cachedParams } function n() { var e = { current: this.current, rowCount: this.rowCount, sort: this.sort, searchPhrase: this.searchPhrase }, s = this.options.post; return s = t.isFunction(s) ? s() : s, this.options.requestHandler(t.extend(!0, e, s)) } function r(e) { return "." + t.trim(e).replace(/\s+/gm, ".") } function l() { var e = this.options.url; return t.isFunction(e) ? e() : e } function a() { this.element.trigger("initialize" + I), d.call(this), this.selection = this.options.selection && null != this.identifier, p.call(this), f.call(this), D.call(this), k.call(this), g.call(this), u.call(this), this.element.trigger("initialized" + I) } function c(t) { this.options.highlightRows } function h(t) { return t.visible } function d() { var e = this, s = this.element.find("thead > tr").first(), i = !1; s.children().each(function () { var s = t(this), o = s.data(), n = { id: o.columnId, identifier: null == e.identifier && o.identifier || !1, converter: e.options.converters[o.converter || o.type] || e.options.converters.string, text: s.text(), align: o.align || "left", headerAlign: o.headerAlign || "left", cssClass: o.cssClass || "", headerCssClass: o.headerCssClass || "", formatter: e.options.formatters[o.formatter] || null, order: i || "asc" !== o.order && "desc" !== o.order ? null : o.order, searchable: !(o.searchable === !1), sortable: !(o.sortable === !1), visible: !(o.visible === !1), width: o.width || "", enableTooltip: !!o.enableTooltip, tooltipSource: o.tooltipSource }; e.columns.push(n), null != n.order && (e.sort[n.id] = n.order), n.identifier && (e.identifier = n.id, e.converter = n.converter), e.options.multiSort || null === n.order || (i = !0) }) } function u() { function s(t) { for (var e, s = new RegExp(o.searchPhrase, o.options.caseSensitive ? "g" : "gi"), i = 0; i < o.columns.length; i++) if (e = o.columns[i], e.searchable && e.visible && e.converter.to(t[e.id]).search(s) > -1) return !0; return !1 } function i(t, e) { o.currentRows = t, o.total = e, o.totalPages = Math.ceil(e / o.rowCount), o.options.keepSelection || (o.selectedRows = []), C.call(o, t), m.call(o), w.call(o), o.element._bgBusyAria(!1).trigger("loaded" + I) } var o = this, r = n.call(this), a = l.call(this); if (this.options.ajax && (null == a || "string" != typeof a || 0 === a.length)) throw new Error("Url setting must be a none empty string or a function that returns one."); if (this.element._bgBusyAria(!0).trigger("load" + I), _.call(this), this.options.ajax) o.xqr && o.xqr.abort(), o.xqr = t.post(a, r, function (e) { o.xqr = null, "string" == typeof e && (e = t.parseJSON(e)), e = o.options.responseHandler(e), o.current = e.current, i(e.rows, e.total) }).fail(function (t, e, s) { o.xqr = null, "abort" !== e && (b.call(o), o.element._bgBusyAria(!1).trigger("loaded" + I)) }); else { var c = this.searchPhrase.length > 0 ? this.rows.where(s) : this.rows, h = c.length; -1 !== this.rowCount && (c = c.page(this.current, this.rowCount)), e.setTimeout(function () { i(c, h) }, 10) } } function p() { if (!this.options.ajax) { var e = this, s = this.element.find("tbody > tr"); s.each(function () { var s = t(this), o = s.children("td"), n = {}; t.each(e.columns, function (t, e) { n[e.id] = e.converter.from(o.eq(t).text()) }), i.call(e, n) }), this.total = this.rows.length, this.totalPages = -1 === this.rowCount ? 1 : Math.ceil(this.total / this.rowCount), S.call(this) } } function f() { var e = this.options.templates, s = this.element.parent().hasClass(this.options.css.responsiveTable) ? this.element.parent() : this.element; this.element.addClass(this.options.css.table), 0 === this.element.children("tbody").length && this.element.append(e.body), 1 & this.options.navigation && (this.header = t(e.header.resolve(o.call(this, { id: this.element._bgId() + "-header" }))), s.before(this.header)), 2 & this.options.navigation && (this.footer = t(e.footer.resolve(o.call(this, { id: this.element._bgId() + "-footer" }))), s.after(this.footer)) } function g() { if (0 !== this.options.navigation) { var e = this.options.css, s = r(e.actions), i = this.header.find(s), n = this.footer.find(s); if (i.length + n.length > 0) { var l = this, a = this.options.templates, c = t(a.actions.resolve(o.call(this))); if (this.options.ajax) { var h = a.icon.resolve(o.call(this, { iconCss: e.iconRefresh })), d = t(a.actionButton.resolve(o.call(this, { content: h, text: this.options.labels.refresh }))).on("click" + I, function (t) { t.stopPropagation(), l.current = 1, u.call(l) }); c.append(d) } y.call(this, c), v.call(this, c), R.call(this, i, c, 1), R.call(this, n, c, 2) } } } function v(e) { if (this.options.columnSelection && this.columns.length > 1) { var s = this, i = this.options.css, n = this.options.templates, l = n.icon.resolve(o.call(this, { iconCss: i.iconColumns })), a = t(n.actionDropDown.resolve(o.call(this, { content: l }))), c = r(i.dropDownItem), d = r(i.dropDownItemCheckbox), p = r(i.dropDownMenuItems); t.each(this.columns, function (e, l) { var f = t(n.actionDropDownCheckboxItem.resolve(o.call(s, { name: l.id, label: l.text, checked: l.visible }))).on("click" + I, c, function (e) { e.stopPropagation(); var i = t(this), o = i.find(d); if (!o.prop("disabled")) { l.visible = o.prop("checked"); var n = s.columns.where(h).length > 1; i.parents(p).find(c + ":has(" + d + ":checked)")._bgEnableAria(n).find(d)._bgEnableField(n), s.element.find("tbody").empty(), D.call(s), u.call(s) } }); a.find(r(i.dropDownMenuItems)).append(f) }), e.append(a) } } function m() { if (0 !== this.options.navigation) { var e = r(this.options.css.infos), s = this.header.find(e), i = this.footer.find(e); if (s.length + i.length > 0) { var n = this.current * this.rowCount, l = t(this.options.templates.infos.resolve(o.call(this, { end: 0 === this.total || -1 === n || n > this.total ? this.total : n, start: 0 === this.total ? 0 : n - this.rowCount + 1, total: this.total }))); R.call(this, s, l, 1), R.call(this, i, l, 2) } } } function b() { var t = this.element.children("tbody").first(), e = this.options.templates, s = this.columns.where(h).length; this.selection && (s += 1), t.html(e.noResults.resolve(o.call(this, { columns: s }))) } function w() { if (0 !== this.options.navigation) { var e = r(this.options.css.pagination), s = this.header.find(e)._bgShowAria(-1 !== this.rowCount), i = this.footer.find(e)._bgShowAria(-1 !== this.rowCount); if (-1 !== this.rowCount && s.length + i.length > 0) { var n = this.options.templates, l = this.current, a = this.totalPages, c = t(n.pagination.resolve(o.call(this))), h = a - l, d = -1 * (this.options.padding - l), u = h >= this.options.padding ? Math.max(d, 1) : Math.max(d - this.options.padding + h, 1), p = 2 * this.options.padding + 1, f = a >= p ? p : a; x.call(this, c, "first", "<i class='md md-more-horiz'></i>", "first")._bgEnableAria(l > 1), x.call(this, c, "prev", "<i class='md md-chevron-left'></i>", "prev")._bgEnableAria(l > 1); for (var g = 0; f > g; g++) { var v = g + u; x.call(this, c, v, v, "page-" + v)._bgEnableAria()._bgSelectAria(v === l) } 0 === f && x.call(this, c, 1, 1, "page-1")._bgEnableAria(!1)._bgSelectAria(), x.call(this, c, "next", "<i class='md md-chevron-right'></i>", "next")._bgEnableAria(a > l), x.call(this, c, "last", "<i class='md md-more-horiz'><i>", "last")._bgEnableAria(a > l), R.call(this, s, c, 1), R.call(this, i, c, 2) } } } function x(e, s, i, n) { var l = this, a = this.options.templates, c = this.options.css, h = o.call(this, { css: n, text: i, uri: "#" + s }), d = t(a.paginationItem.resolve(h)).on("click" + I, r(c.paginationButton), function (e) { e.stopPropagation(); var s = t(this), i = s.parent(); if (!i.hasClass("active") && !i.hasClass("disabled")) { var o = { first: 1, prev: l.current - 1, next: l.current + 1, last: l.totalPages }, n = s.attr("href").substr(1); l.current = o[n] || +n, u.call(l) } s.trigger("blur") }); return e.append(d), d } function y(e) { function s(t) { return -1 === t ? i.options.labels.all : t } var i = this, n = this.options.rowCount; if (t.isArray(n)) { var l = this.options.css, a = this.options.templates, c = t(a.actionDropDown.resolve(o.call(this, { content: this.rowCount }))), h = r(l.dropDownMenu), d = r(l.dropDownMenuText), p = r(l.dropDownMenuItems), f = r(l.dropDownItemButton); t.each(n, function (e, n) { var r = t(a.actionDropDownItem.resolve(o.call(i, { text: s(n), uri: "#" + n })))._bgSelectAria(n === i.rowCount).on("click" + I, f, function (e) { e.preventDefault(); var o = t(this), n = +o.attr("href").substr(1); n !== i.rowCount && (i.current = 1, i.rowCount = n, o.parents(p).children().each(function () { var e = t(this), s = +e.find(f).attr("href").substr(1); e._bgSelectAria(s === n) }), o.parents(h).find(d).text(s(n)), u.call(i)) }); c.find(p).append(r) }), e.append(c) } } function C(e) { if (e.length > 0) { var s = this, i = this.options.css, n = this.options.templates, l = this.element.children("tbody").first(), a = !0, c = "", h = "", d = "", u = ""; t.each(e, function (e, r) { if (h = "", d = ' data-row-id="' + (null == s.identifier ? e : r[s.identifier]) + '"', u = "", s.selection) { var l = -1 !== t.inArray(r[s.identifier], s.selectedRows), p = n.select.resolve(o.call(s, { type: "checkbox", value: r[s.identifier], checked: l })); h += n.cell.resolve(o.call(s, { content: p, css: i.selectCell })), a = a && l, l && (u += i.selected, d += ' aria-selected="true"') } t.each(s.columns, function (e, l) { if (l.visible) { var a = t.isFunction(l.formatter) ? l.formatter.call(s, l, r) : l.converter.to(r[l.id]), c = l.cssClass.length > 0 ? " " + l.cssClass : "", d = ""; l.enableTooltip && (d = a, l.tooltipSource && (d = l.converter.to(r[l.tooltipSource]))), h += n.cell.resolve(o.call(s, { content: null == a || "" === a ? "&nbsp;" : a, toolTip: d, css: ("right" === l.align ? i.right : "center" === l.align ? i.center : i.left) + c })) } }), u.length > 0 && (d += ' class="' + u + '"'), c += n.row.resolve(o.call(s, { attr: d, cells: h })) }), s.element.find("thead " + r(s.options.css.selectBox)).prop("checked", a), l.html(c), A.call(this, l) } else b.call(this) } function A(e) { var s = this, i = r(this.options.css.selectBox); this.selection && e.off("click" + I, i).on("click" + I, i, function (e) { e.stopPropagation(); var i = t(this), o = s.converter.from(i.val()); i.prop("checked") ? s.select([o]) : s.deselect([o]) }), e.off("click" + I, "> tr").on("click" + I, "> tr", function (e) { e.stopPropagation(); var i = t(this), o = null == s.identifier ? i.data("row-id") : s.converter.from(i.data("row-id") + ""), n = null == s.identifier ? s.currentRows[o] : s.currentRows.first(function (t) { return t[s.identifier] === o }); s.selection && s.options.rowSelect && (i.hasClass(s.options.css.selected) ? s.deselect([o]) : s.select([o])), s.element.trigger("click" + I, [s.columns, n]) }) } function k() { if (0 !== this.options.navigation) { var s = this.options.css, i = r(s.search), n = this.header.find(i), l = this.footer.find(i); if (n.length + l.length > 0) { var a = this, c = this.options.templates, h = null, d = "", u = r(s.searchField), p = t(c.search.resolve(o.call(this))), f = p.is(u) ? p : p.find(u); f.on("keyup" + I, function (s) { s.stopPropagation(); var i = t(this).val(); d !== i && (d = i, e.clearTimeout(h), h = e.setTimeout(function () { a.search(i) }, 250)) }), R.call(this, n, p, 1), R.call(this, l, p, 2) } } } function D() { var e = this, s = this.element.find("thead > tr"), i = this.options.css, n = this.options.templates, l = "", a = this.options.sorting; if (this.selection) { var c = this.options.multiSelect ? n.select.resolve(o.call(e, { type: "checkbox", value: "all" })) : ""; l += n.rawHeaderCell.resolve(o.call(e, { content: c, css: i.selectCell })) } if (t.each(this.columns, function (t, s) { if (s.visible) { var r = e.sort[s.id], c = a && r && "asc" === r ? i.iconUp : a && r && "desc" === r ? i.iconDown : "", h = n.icon.resolve(o.call(e, { iconCss: c })), d = s.headerAlign, u = s.headerCssClass.length > 0 ? " " + s.headerCssClass : "", p = ""; s.width && (p += "width:" + s.width + ";"), p && (p = 'style="' + p + '"'), l += n.headerCell.resolve(o.call(e, { column: s, icon: h, sortable: a && s.sortable && i.sortable || "", css: ("right" === d ? i.right : "center" === d ? i.center : i.left) + u, style: p })) } }), s.html(l), a) { var h = r(i.sortable), d = r(i.icon); s.off("click" + I, h).on("click" + I, h, function (s) { s.preventDefault(); var o = t(this), n = o.data("column-id") || o.parents("th").first().data("column-id"), r = e.sort[n], l = o.find(d); if (e.options.multiSort || (o.parents("tr").first().find(d).removeClass(i.iconDown + " " + i.iconUp), e.sort = {}), r && "asc" === r) e.sort[n] = "desc", l.removeClass(i.iconUp).addClass(i.iconDown); else if (r && "desc" === r) if (e.options.multiSort) { var a = {}; for (var c in e.sort) c !== n && (a[c] = e.sort[c]); e.sort = a, l.removeClass(i.iconDown) } else e.sort[n] = "asc", l.removeClass(i.iconDown).addClass(i.iconUp); else e.sort[n] = "asc", l.addClass(i.iconUp); S.call(e), u.call(e) }) } if (this.selection && this.options.multiSelect) { var p = r(i.selectBox); s.off("click" + I, p).on("click" + I, p, function (s) { s.stopPropagation(), t(this).prop("checked") ? e.select() : e.deselect() }) } } function R(e, s, i) { this.options.navigation & i && e.each(function (e, i) { t(i).before(s.clone(!0)).remove() }) } function _() { var t = this.options.templates, e = this.element.children("thead").first(), s = this.element.children("tbody").first(), i = s.find("tr > td").first(), n = this.element.height() - e.height() - (i.height() + 20), r = this.columns.where(h).length; this.selection && (r += 1), s.html(t.loading.resolve(o.call(this, { columns: r }))), -1 !== this.rowCount && n > 0 && s.find("tr > td").css("padding", "20px 0 " + n + "px") } function S() { function t(s, i, o) { function n(t) { return "asc" === l.order ? t : -1 * t } o = o || 0; var r = o + 1, l = e[o]; return s[l.id] > i[l.id] ? n(1) : s[l.id] < i[l.id] ? n(-1) : e.length > r ? t(s, i, r) : 0 } var e = []; if (!this.options.ajax) { for (var s in this.sort) (this.options.multiSort || 0 === e.length) && e.push({ id: s, order: this.sort[s] }); e.length > 0 && this.rows.sort(t) } } var I = ".rs.jquery.bootgrid", P = function (e, s) { this.element = t(e), this.origin = this.element.clone(), this.options = t.extend(!0, {}, P.defaults, this.element.data(), s); var i = this.options.rowCount = this.element.data().rowCount || s.rowCount || this.options.rowCount; this.columns = [], this.current = 1, this.currentRows = [], this.identifier = null, this.selection = !1, this.converter = null, this.rowCount = t.isArray(i) ? i[0] : i, this.rows = [], this.searchPhrase = "", this.selectedRows = [], this.sort = {}, this.total = 0, this.totalPages = 0, this.cachedParams = { lbl: this.options.labels, css: this.options.css, ctx: {} }, this.header = null, this.footer = null, this.xqr = null }; if (P.defaults = { navigation: 3, padding: 2, columnSelection: !0, rowCount: [10, 25, 50, -1], selection: !1, multiSelect: !1, rowSelect: !1, keepSelection: !1, highlightRows: !1, sorting: !0, multiSort: !1, ajax: !1, post: {}, url: "", caseSensitive: !0, requestHandler: function (t) { return t }, responseHandler: function (t) { return t }, converters: { numeric: { from: function (t) { return +t }, to: function (t) { return t + "" } }, string: { from: function (t) { return t }, to: function (t) { return t } } }, css: { actions: "actions btn-group", center: "text-center", columnHeaderAnchor: "column-header-anchor", columnHeaderText: "text", dropDownItem: "dropdown-item", dropDownItemButton: "dropdown-item-button", dropDownItemCheckbox: "dropdown-item-checkbox", dropDownMenu: "dropdown btn-group", dropDownMenuItems: "dropdown-menu pull-right", dropDownMenuText: "dropdown-text", footer: "bootgrid-footer container-fluid", header: "bootgrid-header container-fluid", icon: "icon glyphicon", iconColumns: "glyphicon-th-list", iconDown: "glyphicon-chevron-down", iconRefresh: "glyphicon-refresh", iconUp: "glyphicon-chevron-up", infos: "infos", left: "text-left", pagination: "pagination", paginationButton: "button", responsiveTable: "table-responsive", right: "text-right", search: "search form-group", searchField: "search-field form-control", selectBox: "select-box", selectCell: "select-cell", selected: "active", sortable: "sortable", table: "bootgrid-table table" }, formatters: {}, labels: { all: "All", infos: "Showing {{ctx.start}} to {{ctx.end}} of {{ctx.total}} entries", loading: "Loading...", noResults: "No results found!", refresh: "Refresh", search: "Search" }, templates: { actionButton: '<button class="btn btn-default" type="button" title="{{ctx.text}}">{{ctx.content}}</button>', actionDropDown: '<div class="{{css.dropDownMenu}}"><button class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown"><span class="{{css.dropDownMenuText}}">{{ctx.content}}</span> <span class="caret"></span></button><ul class="{{css.dropDownMenuItems}}" role="menu"></ul></div>', actionDropDownItem: '<li><a href="{{ctx.uri}}" class="{{css.dropDownItem}} {{css.dropDownItemButton}}">{{ctx.text}}</a></li>', actionDropDownCheckboxItem: '<li><div class="checkbox"><label class="{{css.dropDownItem}}"><input name="{{ctx.name}}" type="checkbox" value="1" class="{{css.dropDownItemCheckbox}}" {{ctx.checked}} /><i class="input-helper"></i> {{ctx.label}}</label></div></li>', actions: '<div class="{{css.actions}}"></div>', body: "<tbody></tbody>", cell: '<td class="{{ctx.css}}" data-toggle="tooltip" title="{{ctx.toolTip}}">{{ctx.content}}</td>', footer: '<div id="{{ctx.id}}" class="{{css.footer}}"><div class="row"><div class="col-sm-8"><p class="{{css.pagination}}"></p></div><div class="col-sm-4 infoBar"><p class="{{css.infos}}"></p></div></div></div>', header: '<div id="{{ctx.id}}" class="{{css.header}}"><div class="row"><div class="col-sm-12 actionBar"><p class="{{css.search}}"></p><p class="{{css.actions}}"></p></div></div></div>', headerCell: '<th data-column-id="{{ctx.column.id}}" class="{{ctx.css}}" {{ctx.style}}><a href="javascript:void(0);" class="{{css.columnHeaderAnchor}} {{ctx.sortable}}"><span class="{{css.columnHeaderText}}">{{ctx.column.text}}</span>{{ctx.icon}}</a></th>', icon: '<span class="{{css.icon}} {{ctx.iconCss}}"></span>', infos: '<div class="{{css.infos}}">{{lbl.infos}}</div>', loading: '<tr><td colspan="{{ctx.columns}}" class="loading">{{lbl.loading}}</td></tr>', noResults: '<tr><td colspan="{{ctx.columns}}" class="no-results">{{lbl.noResults}}</td></tr>', pagination: '<ul class="{{css.pagination}}"></ul>', paginationItem: '<li class="{{ctx.css}}"><a href="{{ctx.uri}}" class="{{css.paginationButton}}">{{ctx.text}}</a></li>', rawHeaderCell: '<th class="{{ctx.css}}">{{ctx.content}}</th>', row: "<tr{{ctx.attr}}>{{ctx.cells}}</tr>", search: '<div class="{{css.search}}"><div class="input-group"><span class="{{css.icon}} input-group-addon glyphicon-search"></span> <input type="text" class="{{css.searchField}}" placeholder="{{lbl.search}}" /></div></div>', select: '<div class="checkbox"><label><input name="select" type="{{ctx.type}}" class="{{css.selectBox}}" value="{{ctx.value}}" {{ctx.checked}} /><i class="input-helper"</label></div>' } }, P.prototype.append = function (t) { if (this.options.ajax); else { for (var e = [], s = 0; s < t.length; s++) i.call(this, t[s]) && e.push(t[s]); S.call(this), c.call(this, e), u.call(this), this.element.trigger("appended" + I, [e]) } return this }, P.prototype.clear = function () { if (this.options.ajax); else { var e = t.extend([], this.rows); this.rows = [], this.current = 1, this.total = 0, u.call(this), this.element.trigger("cleared" + I, [e]) } return this }, P.prototype.destroy = function () { return t(e).off(I), 1 & this.options.navigation && this.header.remove(), 2 & this.options.navigation && this.footer.remove(), this.element.before(this.origin).remove(), this }, P.prototype.reload = function () { return this.current = 1, u.call(this), this }, P.prototype.remove = function (t) { if (null != this.identifier) { if (this.options.ajax); else { t = t || this.selectedRows; for (var e, s = [], i = 0; i < t.length; i++) { e = t[i]; for (var o = 0; o < this.rows.length; o++) if (this.rows[o][this.identifier] === e) { s.push(this.rows[o]), this.rows.splice(o, 1); break } } this.current = 1, u.call(this), this.element.trigger("removed" + I, [s]) } } return this }, P.prototype.search = function (t) { return this.searchPhrase !== t && (this.current = 1, this.searchPhrase = t, u.call(this)), this }, P.prototype.select = function (e) { if (this.selection) { e = e || this.currentRows.propValues(this.identifier); for (var s, i, o = []; e.length > 0 && (this.options.multiSelect || 1 !== o.length) ;) if (s = e.pop(), -1 === t.inArray(s, this.selectedRows)) for (i = 0; i < this.currentRows.length; i++) if (this.currentRows[i][this.identifier] === s) { o.push(this.currentRows[i]), this.selectedRows.push(s); break } if (o.length > 0) { var n = r(this.options.css.selectBox), l = this.selectedRows.length >= this.currentRows.length; for (i = 0; !this.options.keepSelection && l && i < this.currentRows.length;) l = -1 !== t.inArray(this.currentRows[i++][this.identifier], this.selectedRows); for (this.element.find("thead " + n).prop("checked", l), this.options.multiSelect || this.element.find("tbody > tr " + n + ":checked").trigger("click" + I), i = 0; i < this.selectedRows.length; i++) this.element.find('tbody > tr[data-row-id="' + this.selectedRows[i] + '"]').addClass(this.options.css.selected)._bgAria("selected", "true").find(n).prop("checked", !0); this.element.trigger("selected" + I, [o]) } } return this }, P.prototype.deselect = function (e) { if (this.selection) { e = e || this.currentRows.propValues(this.identifier); for (var s, i, o, n = []; e.length > 0;) if (s = e.pop(), o = t.inArray(s, this.selectedRows), -1 !== o) for (i = 0; i < this.currentRows.length; i++) if (this.currentRows[i][this.identifier] === s) { n.push(this.currentRows[i]), this.selectedRows.splice(o, 1); break } if (n.length > 0) { var l = r(this.options.css.selectBox); for (this.element.find("thead " + l).prop("checked", !1), i = 0; i < n.length; i++) this.element.find('tbody > tr[data-row-id="' + n[i][this.identifier] + '"]').removeClass(this.options.css.selected)._bgAria("selected", "false").find(l).prop("checked", !1); this.element.trigger("deselected" + I, [n]) } } return this }, P.prototype.sort = function (e) { var s = e ? t.extend({}, e) : {}; return s === this.sort ? this : (this.sort = s, D.call(this), S.call(this), u.call(this), this) }, t.fn.extend({ _bgAria: function (t, e) { return this.attr("aria-" + t, e) }, _bgBusyAria: function (t) { return null == t || t ? this._bgAria("busy", "true") : this._bgAria("busy", "false") }, _bgRemoveAria: function (t) { return this.removeAttr("aria-" + t) }, _bgEnableAria: function (t) { return null == t || t ? this.removeClass("disabled")._bgAria("disabled", "false") : this.addClass("disabled")._bgAria("disabled", "true") }, _bgEnableField: function (t) { return null == t || t ? this.removeAttr("disabled") : this.attr("disabled", "disable") }, _bgShowAria: function (t) { return null == t || t ? this.show()._bgAria("hidden", "false") : this.hide()._bgAria("hidden", "true") }, _bgSelectAria: function (t) { return null == t || t ? this.addClass("active")._bgAria("selected", "true") : this.removeClass("active")._bgAria("selected", "false") }, _bgId: function (t) { return t ? this.attr("id", t) : this.attr("id") } }), !String.prototype.resolve) { var B = { checked: function (t) { return "boolean" == typeof t ? t ? 'checked="checked"' : "" : t } }; String.prototype.resolve = function (e, s) { var i = this; return t.each(e, function (e, o) { if (null != o && "function" != typeof o) if ("object" == typeof o) { var n = s ? t.extend([], s) : []; n.push(e), i = i.resolve(o, n) + "" } else { B && B[e] && "function" == typeof B[e] && (o = B[e](o)), e = s ? s.join(".") + "." + e : e; var r = new RegExp("\\{\\{" + e + "\\}\\}", "gm"); i = i.replace(r, o.replace ? o.replace(/\$/gi, "&#36;") : o) } }), i } } Array.prototype.first || (Array.prototype.first = function (t) { for (var e = 0; e < this.length; e++) { var s = this[e]; if (t(s)) return s } return null }), Array.prototype.contains || (Array.prototype.contains = function (t) { for (var e = 0; e < this.length; e++) { var s = this[e]; if (t(s)) return !0 } return !1 }), Array.prototype.page || (Array.prototype.page = function (t, e) { var s = (t - 1) * e, i = s + e; return this.length > s ? this.length > i ? this.slice(s, i) : this.slice(s) : [] }), Array.prototype.where || (Array.prototype.where = function (t) { for (var e = [], s = 0; s < this.length; s++) { var i = this[s]; t(i) && e.push(i) } return e }), Array.prototype.propValues || (Array.prototype.propValues = function (t) { for (var e = [], s = 0; s < this.length; s++) e.push(this[s][t]); return e }); var j = t.fn.bootgrid; t.fn.bootgrid = function (e) { var s = Array.prototype.slice.call(arguments, 1); return this.each(function () { var i = t(this), o = i.data(I), n = "object" == typeof e && e; if (o || "destroy" !== e) return o || (i.data(I, o = new P(this, n)), a.call(o)), "string" == typeof e ? o[e].apply(o, s) : void 0 }) }, t.fn.bootgrid.Constructor = P, t.fn.bootgrid.noConflict = function () { return t.fn.bootgrid = j, this }, t('[data-toggle="bootgrid"]').bootgrid() }(jQuery, window);