<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <!-- 
    ATTENTION
    
    Do not rename this variable.
    Do not use ${basedir} directive with virtual directories since it cannot be mapped correctly.
    
    Paths examples
      1. Full path:
        1.1. "${basedir}MyFolder\Sub_folder"
        1.2. "C:\MyFolder\Sub_folder"
      2. Relative path: "\Files\System\Log"
  -->
  <variable name="log-root" value="\Files\System\Log" />

  <targets>
    <target xsi:type="File" name="Exception"
            fileName="${var:name=log-root}\${logger}\Errors\${date:format=yyyy}\${date:format=MM}\${date:format=dd-HHmmss}.log"
            layout="${longdate}|${level:uppercase=true}|${logger}${when:when=length('${event-properties:item=systemInfo}') > 0:inner=|Additional System info has been logged}|${message}${newline}${exception:format=ToString:innerFormat=ToString}" />

    <target xsi:type="File" name="Standard"
            fileName="${var:name=log-root}\${logger}\${shortdate}.log"
            layout="${longdate}|${level:uppercase=true}|${logger}${when:when=length('${event-properties:item=systemInfo}') > 0:inner=|Additional System info has been logged}|${message}" />

    <target xsi:type="File" name="Trace"
            fileName="${var:name=log-root}\Trace\${shortdate}.log"
            layout="${longdate}|${level:uppercase=true}|${logger}${when:when=length('${event-properties:item=systemInfo}') > 0:inner=|Additional System info has been logged}|${message}" />

    <!-- With Identifier -->
    <target xsi:type="File" name="ExceptionWithIdentifier"
            fileName="${var:name=log-root}\${logger}\Errors\${date:format=yyyy}\${date:format=MM}\${date:format=dd-HHmmss}.log"
            layout="${longdate}|${level:uppercase=true}|${logger}|${event-properties:item=identifier}|${message}${newline}${exception:format=ToString:innerFormat=ToString}" />

    <target xsi:type="File" name="StandardWithIdentifier"
            fileName="${var:name=log-root}\${logger}\${shortdate}.log"
            layout="${longdate}|${logger}|${level:uppercase=true}|${event-properties:item=identifier}|${message}" />

    <target xsi:type="File" name="TraceWithIdentifier"
            fileName="${var:name=log-root}\Trace\${shortdate}.log"
            layout="${longdate}|${level:uppercase=true}|${logger}|${event-properties:item=identifier}|${message}" />

    <!-- With System Info -->
    <target xsi:type="File" name="ExceptionWithSystemInfo"
            fileName="${var:name=log-root}\${logger}\Errors\${date:format=yyyy}\${date:format=MM}\SystemInfo\${date:format=dd-HHmmss}.log"
            layout="${longdate}|${level:uppercase=true}|${logger}|${message}${newline}${exception:format=ToString:innerFormat=ToString}\n${event-properties:item=systemInfo}" />

    <target xsi:type="File" name="StandardWithSystemInfo"
            fileName="${var:name=log-root}\${logger}\SystemInfo\${shortdate}.log"
            layout="${longdate}|${level:uppercase=true}|${logger}|${message}\n${event-properties:item=systemInfo}" />

    <target xsi:type="File" name="TraceWithSystemInfo"
            fileName="${var:name=log-root}\Trace\SystemInfo\${shortdate}.log"
            layout="${longdate}|${level:uppercase=true}|${logger}|${message}\n${event-properties:item=systemInfo}" />

    <!-- With Data Integration -->
    <target xsi:type="File" name="ExceptionWithDataIntegration"
            fileName="${var:name=log-root}\${logger}\${event-properties:item=identifier}"
            layout="${date:format=yyyy-MM-dd HH\:mm\:ss.fff}: ${replace-newlines:${message}}. ${replace-newlines:${exception:format=ToString:innerFormat=ToString}}" />

    <target xsi:type="File" name="StandardWithDataIntegration"
            fileName="${var:name=log-root}\${logger}\${event-properties:item=identifier}"
            layout="${date:format=yyyy-MM-dd HH\:mm\:ss.fff}: ${replace-newlines:${message}}" />

    <target xsi:type="File" name="TraceWithDataIntegration"
            fileName="${var:name=log-root}\${logger}\${event-properties:item=identifier}"
            layout="${date:format=yyyy-MM-dd HH\:mm\:ss.fff}: ${replace-newlines:${message}}" />

    <!-- With Tracker -->
    <target xsi:type="File" name="ExceptionWithTracker"
            fileName="${event-properties:item=identifier}\Log.log"
            layout="${date:format=yyyy-MM-dd HH\:mm\:ss.fff}: ${replace-newlines:${message}}. ${replace-newlines:${exception:format=ToString:innerFormat=ToString}}" />

    <target xsi:type="File" name="StandardWithTracker"
            fileName="${event-properties:item=identifier}\Log.log"
            layout="${date:format=yyyy-MM-dd HH\:mm\:ss.fff}: ${replace-newlines:${message}}" />

    <target xsi:type="File" name="TraceWithTracker"
            fileName="${event-properties:item=identifier}\Log.log"
            layout="${date:format=yyyy-MM-dd HH\:mm\:ss.fff}: ${replace-newlines:${message}}" />
  </targets>

  <rules>
    <logger name="*" minlevel="Error" writeTo="Exception">
      <filters>
        <when condition="(length('${exception}') == 0) or (length('${event-properties:item=identifier}') > 0)" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Info" writeTo="Standard">
      <filters>
        <when condition="(length('${event-properties:item=identifier}') > 0)" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Trace" writeTo="Trace">
      <filters>
        <when condition="(not equals('${var:name=trace-enabled}','1')) or (length('${event-properties:item=identifier}') > 0)" action="Ignore" />
      </filters>
    </logger>

    <!-- With Identifier -->
    <logger name="*" minlevel="Error" writeTo="ExceptionWithIdentifier">
      <filters>
        <when condition="(length('${exception}') == 0) or (length('${event-properties:item=identifier}') == 0) or (equals('${logger}','DataIntegration')) or (equals('${logger}','ScheduledTasks')) or (equals('${logger}','Tracker')) or (equals('${logger}','EventViewer'))" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Info" writeTo="StandardWithIdentifier">
      <filters>
        <when condition="(length('${event-properties:item=identifier}') == 0) or (equals('${logger}','DataIntegration')) or (equals('${logger}','ScheduledTasks')) or (equals('${logger}','Tracker')) or (equals('${logger}','EventViewer'))" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Trace" writeTo="TraceWithIdentifier">
      <filters>
        <when condition="(not equals('${var:name=trace-enabled}','1')) or (length('${event-properties:item=identifier}') == 0) or (equals('${logger}','DataIntegration')) or (equals('${logger}','ScheduledTasks')) or (equals('${logger}','Tracker')) or (equals('${logger}','EventViewer'))" action="Ignore" />
      </filters>
    </logger>

    <!-- With System Info -->
    <logger name="*" minlevel="Error" writeTo="ExceptionWithSystemInfo">
      <filters>
        <when condition="(length('${exception}') == 0) or (length('${event-properties:item=systemInfo}') == 0)" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Info" writeTo="StandardWithSystemInfo">
      <filters>
        <when condition="(length('${event-properties:item=systemInfo}') == 0)" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Trace" writeTo="TraceWithSystemInfo">
      <filters>
        <when condition="(not equals('${var:name=trace-enabled}','1')) or (length('${event-properties:item=systemInfo}') == 0)" action="Ignore" />
      </filters>
    </logger>

    <!-- With Data Integration -->
    <logger name="*" minlevel="Error" writeTo="ExceptionWithDataIntegration">
      <filters>
        <when condition="(length('${exception}') == 0) or (not (equals('${logger}','DataIntegration') or equals('${logger}','ScheduledTasks') or equals('${logger}','EventViewer'))) or (length('${event-properties:item=identifier}') == 0)" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Info" writeTo="StandardWithDataIntegration">
      <filters>
        <when condition="(length('${exception}') > 0) or (not (equals('${logger}','DataIntegration') or equals('${logger}','ScheduledTasks') or equals('${logger}','EventViewer'))) or (length('${event-properties:item=identifier}') == 0)" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Trace" writeTo="TraceWithDataIntegration">
      <filters>
        <when condition="(not equals('${var:name=trace-enabled}','1')) or (not (equals('${logger}','DataIntegration') or equals('${logger}','ScheduledTasks') or equals('${logger}','EventViewer'))) or (length('${event-properties:item=identifier}') == 0)" action="Ignore" />
      </filters>
    </logger>

    <!-- With Tracker -->
    <logger name="*" minlevel="Error" writeTo="ExceptionWithTracker">
      <filters>
        <when condition="(length('${exception}') == 0) or (not equals('${logger}','Tracker')) or (length('${event-properties:item=identifier}') == 0)" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Info" writeTo="StandardWithTracker">
      <filters>
        <when condition="(not equals('${logger}','Tracker')) or (length('${event-properties:item=identifier}') == 0)" action="Ignore" />
      </filters>
    </logger>

    <logger name="*" minlevel="Trace" writeTo="TraceWithTracker">
      <filters>
        <when condition="(not equals('${var:name=trace-enabled}','1')) or (not equals('${logger}','Tracker')) or (length('${event-properties:item=identifier}') == 0)" action="Ignore" />
      </filters>
    </logger>
  </rules>

</nlog>